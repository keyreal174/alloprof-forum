$richEditor_bg                                    : $global-color_bg !default;
$richEditor_leftPadding                           : 36px !default;
$richEditor_minHeight                             : 200px !default;
$richEditor_verticalPadding                       : 9px !default;
$richEditor_horizontalPadding                     : 12px !default;
$richEditor-outline_color                         : rgba($global-color_primary, 0.6) !default;

$richEditor-menuButton_size                       : 36px !default;
$richEditor-floatingButton_size                   : 28px !default;

$richEditor-embedMenu_padding                     : 0 !default;
$richEditor-icon_opacity                          : .8 !default;

$richEditor-insertLink_width                      : 387px !default;

$richEditor-flyout_paddingVertical                : 12px !default;
$richEditor-flyout_paddingHorizontal              : 12px !default;
$richEditor-flyout_maxHeight                      : 100vh !default;
$richEditor-flyout_height                         : $richEditor-menuButton_size * 7.5 !default;

$richEditor-nub_width                             : 12px !default;

$richEditor-menu_borderWidth                      : 1px !default;
$richEditor-menu_offset                           : $richEditor-nub_width !default;

$richEditor-pilcrow_offset                        : 9px!default;
$richEditor-pilcrow_fontSize                      : 14px !default;
$richEditor-pilcrowAnimation_duration             : 0.3s;

$richEditor-emojiGroup_paddingLeft                : 3px !default;
$richEditor-emojiOutline_offset                   : -#{$formElement_borderWidth + 2} !default;

$richEditor-mobileEmbedMenu_borderColor           : $global-color_primary !default;
$richEditor-mobileEmbedMenu_transitionDuration    : .15s !default;
$richEditor-mobileEmbedMenu_transitionTiming      : ease-out !default;

$richEditor-embedButton_offset                    : -$formElement_borderWidth !default;
$richEditor-paragraphMenuButton_offset            : -$formElement_borderWidth + 1 !default;
$richEditor-text_offset                           : 0 !default;

$embedImage_width                                 : 640px !default;

// Break Points
$richEditor-mobile_spacing                        : 18px !default;
$richEditor-mobileBreakPoint                      : 700px !default;
$richEditor-mobileEmbedBreakPoint                 : 550px !default;

.richEditor {
    position: relative;
    display: block;
    padding-left: $richEditor_leftPadding;

    &.isDisabled { // Before React has replaced initial HTML
        &,
        .richEditor-button {
            cursor: progress !important;
        }
    }
}

.richEditor-frame {
    &.InputBox {
        position: relative;
        background: $richEditor_bg;
        height: auto;
        padding: 0;
    }
}

.richEditor-menu {
    display: inline-block;
    position: relative;
}

.richEditorParagraphMenu {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    top: $richEditor-pilcrow_offset;
    left: 0;
    transform: translateX(-100%);
    height: $richEditor-floatingButton_size;
    width: $richEditor_leftPadding;
    z-index: 1;
    animation: fadein $richEditor-pilcrowAnimation_duration ease;
    animation-iteration-count: 1;

    .richEditor-button {
        &.isActive {
            &:hover {
                cursor: default;
            }
        }
    }
}

.richEditorParagraphMenu-handle {
    width: $richEditor-floatingButton_size;
    max-width: $richEditor-floatingButton_size;
    min-width: $richEditor-floatingButton_size;
    height: $richEditor-floatingButton_size;
}

.richEditor-text {
    position: relative;
    min-height: $richEditor_minHeight;
    padding: {
        top: $richEditor_verticalPadding;
        right: $richEditor_horizontalPadding;
        bottom: $richEditor_verticalPadding;
        left: $richEditor_horizontalPadding;
    }
    outline-color: transparent;
    white-space: pre-wrap !important; // Needed for spaces around embed blots to work properly!

    &:focus {
        outline: {
            offset: $richEditor-text_offset;
            style: solid;
            width: $formElement_borderWidth;
            color: $richEditor-outline_color;
        }
    }
}

.ql-clipboard {
    @include sr-only();
}

.richEditor-menuItems {
    position: relative;
    display: flex;
    align-items: flex-start;
    justify-content: flex-start;
    flex-wrap: nowrap;
    list-style: none;
    padding: 0;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    margin: {
        top: $formElement-borderWidth;
        right: 0;
        bottom: 0;
        left: 0;
    }

    &.MenuItems {
        border: $formElement-borderWidth $formElement-borderStyle $formElement_borderColor;
        box-shadow: $menu-dropShadow;
        background: $global-color_bg;
        border-radius: $global-borderRadius;
    }

    .richEditor-menuItem {
        display: block;
        padding: 0;
        margin: 0;

        .richEditor-button,
        &.richEditor-button {
            width: $richEditor-menuButton_size;
            font-size: #{$richEditor-menuButton_size * 24 / 39};
            line-height: $richEditor-menuButton_size;

            &.emojiChar-ðŸ‡ºðŸ‡³ {
                font-size: 14px;
            }
        }

        &.isRightAligned {
            margin-left: auto;
        }
    }
}

// button reset
.richEditor-nextInput,
.iconButton,
.richEditor-button {
    @include singleLineEllipsis;
    position: relative;
    appearance: none;
    border: 0;
    padding: 0;
    background: none;
    text-align: left;
}



.richEditor-button {
    display: block;
    user-select: none;
    cursor: pointer;


    &.richEditor-formatButton,
    &.richEditor-embedButton {
        height: $richEditor-menuButton_size;
        color: inherit;
    }

    &.emojiGroup {
        display: block;
        width: $richEditor-menuButton_size;
        height: $richEditor-menuButton_size;
        text-align: center;

        &.isSelected {
            @include editorButtonActiveStyles;
        }
    }

    &:not(:disabled) {
        cursor: pointer;
    }

    &:hover {
        @include editorButtonHoverStyles;
    }

    &:focus {
        @include editorButtonFocusStyles;
        z-index: 2;
    }

    &.isActive {
        @include editorButtonActiveStyles;
    }

    &.isOpen {
        @include editorButtonOpenStyles;
    }

    &.richEditor-formatButton {
        &:focus {
            @include editorButtonFocusStyles($richEditor-paragraphMenuButton_offset);
        }
    }
}

.richEditor-menuItem {
    display: block;
    padding: 0;
    margin: 0;

    .richEditor-button,
    &.richEditor-button {
        width: $richEditor-menuButton_size;
        font-size: #{$richEditor-menuButton_size * 24 / 39};
        line-height: $richEditor-menuButton_size;

        &.emojiChar-ðŸ‡ºðŸ‡³ {
            font-size: 14px;
        }
    }

    &.isRightAligned {
        margin-left: auto;
    }
}

.richEditor-upload {
    display: none !important;
}

.richEditor-embedBar {
    display: block;
    width: 100%;
    padding: $richEditor-embedMenu_padding;
}

.richEditorButton-icon {
    display: block;
    margin: auto;
    height: $icon-default_size;
    width: $icon-default_size;
    opacity: $richEditor-icon_opacity;
}

.Close-x {
    display: block;
    opacity: $richEditor-icon_opacity;
    cursor: pointer;
}

// Link Menu
.insertLink.FlyoutMenu {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    max-width: $richEditor-insertLink_width;
    width: 100%;
    padding: {
        left: 5px;
    }
}

.richEditor-close.Close {
    position: relative;
    display: block;
    width: $richEditor-menuButton_size;
    height: $richEditor-menuButton_size;
    line-height: $richEditor-menuButton_size;
    vertical-align: bottom;
    top: auto;
    right: auto;
    text-align: center;
    user-select: none;
    background: transparent;
    cursor: pointer;

    &:focus {
        @include editorButtonFocusStyles;
    }
}

.insertLink-input.InputBox {
  border: 0 !important;
  margin-bottom: 0 !important;
  flex-grow: 1;
  max-width: calc(100% - #{$richEditor-menuButton_size})
}

// Insert Media
.richEditorFlyout {
    position: relative;
    overflow: hidden;
    z-index: 6;

    .InputBox {
        width: 100%;
        box-sizing: border-box;
    }

    .richEditor-close {
        position: absolute;
        top: 0;
        right: 0;
    }

    .Footer {
        display: flex;
    }
}

.richEditorFlyout-header {
    padding: {
        top: $richEditor-flyout_paddingHorizontal / 2;
        right: $richEditor-flyout_paddingHorizontal;
        bottom: $richEditor-flyout_paddingHorizontal / 2;
        left: $richEditor-flyout_paddingHorizontal;
    }
}

.richEditorFlyout-footer {
    padding: {
        bottom: $richEditor-flyout_paddingVertical;
        left: $richEditor-flyout_paddingHorizontal;
        right: $richEditor-flyout_paddingHorizontal;
    }
}

.richEditorFlyout-title {
    @include longWordEllipsis;
    margin: 0;
    max-width: calc(100% - #{$richEditor-menuButton_size});
    min-height: #{$richEditor-menuButton_size - $richEditor-flyout_paddingVertical};

    &:focus {
        outline: 0;
    }
}

.insertMedia-footer {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: {
        left: $richEditor-flyout_paddingHorizontal;
        right: $richEditor-flyout_paddingHorizontal;
        bottom: $richEditor-flyout_paddingVertical;
    }
}

.insertMedia-help {
    margin-right: auto;
    font-size: 12px;
}

.insertMedia-insert {
    margin-bottom: 3px;
}

.richEditorFlyout-body {
    padding: {
        left: $richEditor-flyout_paddingHorizontal;
        right: $richEditor-flyout_paddingHorizontal;
    }
}

.insertEmoji-body {
    max-height: $richEditor-flyout_maxHeight;
    height: $richEditor-flyout_height;
}

.content-wrapper {
    height: 100%;
}

.embedDialogue {
    position: relative;
}

.richEditor-menu.richEditorFlyout {
    position: absolute;
    bottom: 100%;
    left: 0;
    width: #{$richEditor-flyout_paddingHorizontal * 2 + 7 * $richEditor-menuButton_size};
}

.richEditorFlyout-title {
    font-size: 100%;
}

.richEditor-insertEmoji {
    //display: flex;
    //align-items: center;
    //justify-content: center;
    //width: $richEditor-menuButton_size;
    //height: $richEditor-menuButton_size;
    font-size: $icon-default_size;
    text-align: center;
    overflow: hidden;

    .fallBackEmoji {
        display: block;
        margin: auto;
    }

    &:focus {
        outline-offset: $richEditor-emojiOutline_offset;
    }
}

.richEditor ~ .TextBoxWrapper {
    display: none;
}

// Nub styles
.richEditor-nubPosition {
    position: absolute;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    overflow: hidden;
    width: $richEditor-nub_width * 2;
    height: $richEditor-nub_width * 2;
    user-select: none;
    transform: translateX(-50%);
    margin-top: -$richEditor-menu_borderWidth;
    pointer-events: none;
}

.richEditor-nub {
    position: relative;
    display: block;
    width: $richEditor-nub_width;
    height: $richEditor-nub_width;
    border: {
        top: $richEditor-menu_borderWidth solid $global-border_color;
        right: $richEditor-menu_borderWidth solid $global-border_color;
    }
    box-shadow: 0 0 5px 1px $menu-dropShadow_color;
    background: $richEditor_bg;
}

// Orientation specific styles
.richEditor-inlineToolbarContainer {
    &.isUp {
        transform: translateY(-$richEditor-menu_offset);

        .richEditor-nubPosition {
            top: 100%;
        }

        .richEditor-nub {
            transform: translateY(-50%) rotate(135deg);
        }
    }

    &.isDown {
        transform: translateY($richEditor-menu_offset);

        .richEditor-nubPosition {
            bottom: 100%;
        }

        .richEditor-nubPosition {
            align-items: flex-end;
            transform: translateY(-50%) translateX(-50%);
            margin-top: $richEditor-menu_borderWidth * 2;
        }
        .richEditor-nub {
            transform: translateY(50%) rotate(-45deg);
        }
    }
}

.richEditor-paragraphToolbarContainer {
    position: absolute;
    left: calc(50% - #{$richEditor_leftPadding / 2});

    &.isUp {
        bottom: calc(50% + #{$richEditor_leftPadding / 2 - $formElement-borderWidth});
    }

    &.isDown {
        top: calc(50% + #{$richEditor_leftPadding / 2 - $formElement-borderWidth});
    }
}

.userContent {
    > * {
        &:not(:last-child) {
            margin-bottom: .6em;

            + h1,
            + h2,
            + h3,
            + h4,
            + h5,
            + h6
            {
                margin-top: .6em;
            }
        }

        &:first-child {
            margin-top: 0 !important;
        }
    }

    &,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    span,
    div,
    td,
    th,
    a,
    p
    {
        word-break: break-word;
        text-overflow: ellipsis;
    }
}

.emoji { // old emoji support
    width: 20px;
    height: 20px;
    vertical-align: -.232em;
}

.richEditor-button {
    user-select: none;
    cursor: pointer;
}

// Emoji Groups

.emojiGroups {
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
}

.emojiGroup-icon {
    display: block;
    position: relative;
    margin: auto;
    padding: 0;
    width: $icon-default_size;
    size: $icon-default_size;
}

body.hasRichEditor {
    // Hide Preview
    #Form_Preview {
        display: none;
    }
}

// Handle gutter for paragraph menu
@include mediaQuery-richEditor_notMobile {
    body.hasRichEditor {
        // New Discussions
        &.Section-PostDiscussion {
            #DiscussionForm {
                select {
                    max-width: 100%;
                }

                .FormWrapper {
                    padding: {
                        left: $richEditor_leftPadding;
                        right: $richEditor_leftPadding;
                    }

                    .richEditor {
                        padding-left: 0;
                    }
                }
            }
        }

        // Comment
        .CommentForm {
            .CommentFormWrap {
                .Form-HeaderWrap {
                    display: none;
                }

                .FormWrapper {
                    padding-left: 0;
                }
            }


            .richEditor {
                padding: {
                    left: $richEditor_leftPadding;
                    right: $richEditor_leftPadding;

                }

                .richEditor {
                    padding-left: 0;
                }
            }
        }

        // Activity
        .DataListWrap {
            .FormWrapper.FormWrapper-Condensed {
                padding-left: 0;
            }
        }

        // New Message
        #GroupForm,
        #MessageForm,
        #ConversationForm {
            .Form-HeaderWrap {
                display: none;
            }

            .FormWrapper {
                padding: {
                    left: $richEditor_leftPadding;
                    right: $richEditor_leftPadding;
                }

                .richEditor {
                    padding-left: 0;
                }
            }
        }
    }
}


// Mobile
body.isMobile {
    @include richEditorMobileStyles();
}

@include mediaQuery-richEditor_mobile {
    @include richEditorMobileStyles();
}
