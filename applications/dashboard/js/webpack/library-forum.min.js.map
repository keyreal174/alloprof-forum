{"version":3,"sources":["webpack://vanillaforum/./applications/dashboard/src/scripts/application.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/state/utility.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/componentIDs.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/@types/api/index.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Paragraph.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/DocumentTitle.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/gdn.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/utility.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/users/requestPasswordActions.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/reducerRegistry.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/authenticate/passwordActions.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/embeds.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/ErrorMessages.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/InputTextBlock.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Checkbox.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/components/PasswordForm.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Button.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/ButtonSubmit.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/dom.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/getStore.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/@types/api/general.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/apiv2.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/@types/api/authenticate.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/components/SSOMethods.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/components/RememberPasswordLink.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/RecoverPasswordPage.tsx"],"names":["validator_lib_isURL__WEBPACK_IMPORTED_MODULE_4__","__webpack_require__","validator_lib_isURL__WEBPACK_IMPORTED_MODULE_4___default","n","getMeta","key","defaultValue","_dashboard_gdn__WEBPACK_IMPORTED_MODULE_2__","meta","parts","split","haystack","parts_1","__values","parts_1_1","next","done","part","value","hasOwnProperty","t","str","defaultTranslation","substr","undefined","translations","isAllowedUrl","input","protocols","require_tld","require_protocol","require_host","require_valid_protocol","allow_trailing_dot","allow_protocol_relative_urls","formatUrl","path","indexOf","assetUrl","_components","addComponent","name","component","toLowerCase","_mountComponents","parent","querySelectorAll","forEach","node","getAttribute","Component","getComponent","react_dom__WEBPACK_IMPORTED_MODULE_1___default","a","render","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","Object","_dashboard_utility__WEBPACK_IMPORTED_MODULE_3__","_routes","addRoutes","routes","Array","isArray","push","apply","__spread","getRoutes","_readyHandlers","onReady","callback","_executeReady","Promise","resolve","handlerPromises","map","handler","exec","all","then","document","readyState","addEventListener","onContent","makeProfileUrl","username","encodeURIComponent","_dashboard_apiv2__WEBPACK_IMPORTED_MODULE_0__","createAction","type","payload","generateApiActionCreators","requestType","successType","errorType","dummyResponseType","dummyMetaType","request","createApiRequestAction","success","response","createApiSuccessAction","error","createApiErrorAction","apiThunk","endpoint","actionCreators","params","dispatch","catch","axiosError","data","lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0__","lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0___default","uniqueIDFromPrefix","suffix","getRequiredID","props","id","getOptionalID","Error","_dashboard_componentIDs__WEBPACK_IMPORTED_MODULE_2__","Paragraph","_super","_this","call","this","__extends","prototype","content","componentClasses","classnames__WEBPACK_IMPORTED_MODULE_1___default","isError","className","accessibilityProps","aria-live","role","__assign","defaultProps","_dashboard_application__WEBPACK_IMPORTED_MODULE_1__","DocumentTitle","componentDidMount","title","getHeadTitle","componentWillUpdate","nextProps","children","siteTitle","length","join","gdn","window","permissions","__webpack_exports__","d","sanitizeUrl","_debug","debug","newValue","log","_i","arguments","console","logError","logWarning","warn","hashString","reduce","prevHash","currVal","charCodeAt","splitStringLoosely","toSplit","splitWith","normalizedName","normalize","replace","normalizedSplitTerm","charactersUsed","RegExp","piece","start","substring","simplifyFraction","numerator","denominator","findGCD","b","gcd","shorthand","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","match","rawMatch","IMAGE_REGEX","isFileImage","file","test","capitalizeFirstLetter","charAt","toUpperCase","slice","indexArrayByKey","array","object","array_1","array_1_1","item","SAFE_PROTOCOL_REGEX","url","_dashboard_state_utility__WEBPACK_IMPORTED_MODULE_0__","POST_REQUEST_PASSWORD_REQUEST","POST_REQUEST_PASSWORD_ERROR","POST_REQUEST_PASSWORD_SUCCESS","AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE","afterRequestPasswordSuccessNavigate","requestPasswordActions","postRequestPassword","haveGot","wasReadyCalled","reducers","registerReducer","reducer","_dashboard_utility__WEBPACK_IMPORTED_MODULE_0__","getReducers","_dashboard_application__WEBPACK_IMPORTED_MODULE_2__","POST_AUTHENTICATE_PASSWORD_REQUEST","POST_AUTHENTICATE_PASSWORD_ERROR","POST_AUTHENTICATE_PASSWORD_SUCCESS","authenticatePasswordActions","postAuthenticatePassword","_dashboard_apiv2__WEBPACK_IMPORTED_MODULE_1__","post","urlParms","URLSearchParams","location","href","get","react_dom__WEBPACK_IMPORTED_MODULE_1__","FOCUS_CLASS","embedRenderers","embedComponents","registerEmbedRenderer","renderer","registerEmbedComponent","renderEmbed","elements","inEditor","reject","root","classList","add","onRenderComplete","ErrorMessages","state","componentIDs","errors","classnames_default","errorList","index","react_default","message","InputTextBlock_InputTextBlock","InputTextBlock","inputRef","createRef","onChange","event","InputTextBlock_extends","describedBy","inputClasses","inputClassNames","hasErrors","errorID","labelID","label","labelNote","disabled","required","placeholder","aria-invalid","aria-describedby","aria-labelledby","ref","forms_ErrorMessages","current","componentWillUnount","removeEventListener","defineProperty","focus","select","Button","checked","aria-hidden","xmlns","viewBox","application","fill","PasswordForm_PasswordForm","PasswordForm","usernameInput","passwordInput","handleCheckBoxChange","setState","rememberMe","target","handleUsernameChange","handlePasswordChange","password","handleSubmit","preventDefault","_a","authenticate","persist","PasswordForm_extends","formDescribedBy","globalErrorMessage","apiv2","passwordState","formDescriptionID","method","onSubmit","noValidate","allowEdit","defaultUsername","Checkbox","Link","to","ButtonSubmit","allowSubmit","componentDidUpdate","prevProps","status","api","LOADING","withRedux","es","passwordActions","withRouter","prefix","ButtonSubmit_ButtonSubmit","ButtonSubmit_extends","forms_Button","lodash_debounce__WEBPACK_IMPORTED_MODULE_3__","lodash_debounce__WEBPACK_IMPORTED_MODULE_3___default","escapeHTML","div","appendChild","createTextNode","innerHTML","delegatedEventListeners","delegateEvent","eventName","filterSelector","scopeSelector","scope","functionKey","toString","querySelector","HTMLElement","eventHash","keys","includes","wrappedCallback","closest","removeDelegatedEvent","dataMap","WeakMap","setData","element","initialValue","has","set","getData","attributeString","hasAttribute","ensureHtmlElement","selectorOrElement","testChar","emojiSupportedCache","isEmojiSupported","canvas","getContext","offset","devicePixelRatio","ctx","fillStyle","textBaseline","font","fillText","getImageData","emojiOptions","size","convertToSafeEmojiCharacters","stringOrNode","twemoji__WEBPACK_IMPORTED_MODULE_1___default","parse","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","existingScript","callbacks","head","getElementsByTagName","script_1","src","onerror","timeout_1","setTimeout","onload","clearTimeout","delete","getNextTabbableElement","options","defaultTabbableOptions","documentElement","excludedElements","excludedRoots","reverse","fromElement","activeElement","allowLooping","finalOptions","tabbables","tabbable__WEBPACK_IMPORTED_MODULE_2___default","filter","tabbableElement","contains","_b","_c","excludedRoot","currentTabIndex","targetIndex","checkDomTreeHasFocus","rootNode","possibleTargets","relatedTarget","explicitOriginalTarget","possibleTargets_1","possibleTargets_1_1","body","hasFocus","watchFocusInDomTree","triggeringElement","clickedElement","checkDomTreeWasClicked","handleStickyHeaderState","goingDown","lastScrollPos","currentScrollPos","isAtTopOfPage","elementHeight","offsetHeight","isPastHeader","style","position","offsetTop","elementTop","top","parseInt","toggle","stickyHeader","header","currentScrollPos_1","Math","max","scrollY","lastScrollPos_1","e","requestAnimationFrame","leading","getDraggedImage","dataTransfer","files","from","getPastedImage","clipboardData","items","getAsFile","Boolean","getElementHeight","previousBottomMargin","height","getBoundingClientRect","getComputedStyle","marginTop","marginBottom","topHeight","bottomHeight","bottomMargin","store","redux_thunk__WEBPACK_IMPORTED_MODULE_2__","initialState","initialActions","__ACTIONS__","middleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux__WEBPACK_IMPORTED_MODULE_0__","getStore","_dashboard_state_reducerRegistry__WEBPACK_IMPORTED_MODULE_1__","LoadStatus","_dashboard_types_api__WEBPACK_IMPORTED_MODULE_4__","axios__WEBPACK_IMPORTED_MODULE_2___default","create","baseURL","_dashboard_application__WEBPACK_IMPORTED_MODULE_0__","headers","common","X-Requested-With","transformResponse","defaults","responseData","_dashboard_utility__WEBPACK_IMPORTED_MODULE_1__","paramsSerializer","qs__WEBPACK_IMPORTED_MODULE_3___default","stringify","indices","uploadImage","image","FormData","append","result","sent","getFieldErrors","loadable","field","ERROR","getGlobalErrorMessage","validFields","validFields_1","validFields_1_1","AuthenticationStep","_dashboard_components_forms_Paragraph__WEBPACK_IMPORTED_MODULE_2__","SSOMethods","ssoMethods","methodStyles","backgroundColor","ui","color","foregroundColor","react__WEBPACK_IMPORTED_MODULE_1___default","photoUrl","buttonName","RememberPasswordLink","onClick","RecoverPasswordPage_RecoverPasswordPage","RecoverPasswordPage","uniqueId_default","emainInput","handleEmailChange","email","pageTitleID","RecoverPasswordPage_extends","pageTitle","requestPasswordState","SUCCESS","components_RememberPasswordLink","onNavigateAway","users","requestPassword"],"mappings":"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","file":"applications/dashboard/js/webpack/library-forum.min.js?95e0b560e3b635adc90e","sourcesContent":["/**\n * Application functions for interop between Components in different packages.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React, { ComponentClass } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RouteProps } from \"react-router-dom\";\nimport gdn from \"@dashboard/gdn\";\nimport { PromiseOrNormalCallback, logError } from \"@dashboard/utility\";\nimport isUrl from \"validator/lib/isURL\";\n\n/**\n * Get a piece of metadata passed from the server.\n *\n * @param key - The key to lookup.\n * @param defaultValue - A fallback value in case the key cannot be found.\n *\n * @returns Returns a meta value or the default value.\n */\nexport function getMeta(key: string, defaultValue?: any) {\n    if (!gdn.meta) {\n        return defaultValue;\n    }\n\n    const parts = key.split(\".\");\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (!haystack.hasOwnProperty(part)) {\n            return defaultValue;\n        }\n        haystack = haystack[part];\n    }\n    return haystack;\n}\n\n/**\n * Set a piece of metadata. This will override what was passed from the server.\n *\n * @param key - The key to store under.\n * @param value - The value to set.\n */\nexport function setMeta(key: string, value: any) {\n    const parts = key.split(\".\");\n    const last = parts.pop();\n\n    if (!last) {\n        throw new Error(`Unable to set meta value ${key}. ${last} is not a valid object key.`);\n    }\n\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (haystack[part] === null || typeof haystack[part] !== \"object\") {\n            haystack[part] = {};\n        }\n        haystack = haystack[part];\n    }\n    haystack[last] = value;\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (gdn.translations[str] !== undefined) {\n        return gdn.translations[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n\n/**\n * Determine if a string is an allowed URL.\n *\n * In the future this may be extended to check if we want to whitelist/blacklist various URLs.\n *\n * @param input - The string to check.\n */\nexport function isAllowedUrl(input: string): boolean {\n    // Options https://github.com/chriso/validator.js#validators\n    const options = {\n        protocols: [\"http\", \"https\"],\n        require_tld: true,\n        require_protocol: true,\n        require_host: true,\n        require_valid_protocol: true,\n        allow_trailing_dot: false,\n        allow_protocol_relative_urls: false,\n    };\n    return isUrl(input, options);\n}\n\n/**\n * Format a URL in the format passed from the controller.\n *\n * @param path - The path to format.\n *\n * @returns Returns a URL that can be used in the APP.\n */\nexport function formatUrl(path: string): string {\n    if (path.indexOf(\"//\") >= 0) {\n        return path;\n    } // this is an absolute path.\n\n    const urlFormat = getMeta(\"context.basePath\", \"/\");\n    return urlFormat + path;\n}\n\n/**\n * Create the URL of an asset of the site.\n *\n * @param path - The path to format.\n *\n * @returns Returns a URL that can be used for a static asset.\n */\nexport function assetUrl(path: string): string {\n    if (path.indexOf(\"//\") >= 0) {\n        return path;\n    } // this is an absolute path.\n\n    const urlFormat = getMeta(\"context.assetPath\", \"/\");\n    return urlFormat + path;\n}\n\n/**\n * @type {Object} The currently registered Components.\n * @private\n */\nconst _components = {};\n\n/**\n * Register a component in the Components registry.\n *\n * @param name The name of the component.\n * @param component The component to register.\n */\nexport function addComponent(name: string, component: ComponentClass) {\n    _components[name.toLowerCase()] = component;\n}\n\n/**\n * Test to see if a component has been registered.\n *\n * @param name The name of the component to test.\n * @returns Returns **true** if the component has been registered or **false** otherwise.\n */\nexport function componentExists(name: string): boolean {\n    return _components[name.toLowerCase()] !== undefined;\n}\n\n/**\n * Get a component from the component registry.\n *\n * @param name The name of the component.\n * @returns Returns the component or **undefined** if there is no registered component.\n */\nexport function getComponent(name: string): ComponentClass | undefined {\n    return _components[name.toLowerCase()];\n}\n\n/**\n * Mount all declared Components on the dom.\n *\n * The page signifies that an element contains a component with the `data-react=\"<Component>\"` attribute.\n *\n * @param parent - The parent element to search. This element is not included in the search.\n */\nexport function _mountComponents(parent: Element) {\n    const nodes = parent.querySelectorAll(\"[data-react]\").forEach(node => {\n        const name = node.getAttribute(\"data-react\") || \"\";\n        const Component = getComponent(name);\n\n        if (Component) {\n            ReactDOM.render(<Component />, node);\n        } else {\n            logError(\"Could not find component %s.\", name);\n        }\n    });\n}\n\n/**\n * @type {Array} The currently registered routes.\n * @private\n */\nconst _routes: any[] = [];\n\n/**\n * Register one or more routes to the app component.\n *\n * @param routes An array of routes to add.\n */\nexport function addRoutes(routes: Array<React.ReactElement<RouteProps>>) {\n    if (!Array.isArray(routes)) {\n        _routes.push(routes);\n    } else {\n        _routes.push(...routes);\n    }\n}\n\n/**\n * Get all of the currently registered routes.\n *\n * @returns Returns an array of routes.\n */\nexport function getRoutes(): Array<React.ReactElement<RouteProps>> {\n    return _routes;\n}\n\n/**\n * @type {Array}\n * @private\n */\nconst _readyHandlers: PromiseOrNormalCallback[] = [];\n\n/**\n * Register a callback that executes when the document and the core libraries are ready to use.\n *\n * @param callback - The function to call. This can return a Promise but doesn't have to.\n */\nexport function onReady(callback: PromiseOrNormalCallback) {\n    _readyHandlers.push(callback);\n}\n\n/**\n * Execute all of the registered events in order.\n *\n * @returns A Promise when the events have all fired.\n */\nexport function _executeReady(): Promise<any[]> {\n    return new Promise(resolve => {\n        const handlerPromises = _readyHandlers.map(handler => handler());\n        const exec = () => {\n            return Promise.all(handlerPromises).then(resolve);\n        };\n\n        if (document.readyState !== \"loading\") {\n            return exec();\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", exec);\n        }\n    });\n}\n\n/**\n * Execute a callback when a piece of DOM content is ready to be operated on.\n *\n * This is similar to onReady() but also includes content that is added dynamically (ex. AJAX).\n * Note that this function is meant to bridge the non-react parts of the application with react.\n *\n * @param {function} callback - The callback to execute.\n */\nexport function onContent(callback) {\n    document.addEventListener(\"X-DOMContentReady\", callback);\n}\n\n/**\n * Make a URL to a user's profile.\n */\nexport function makeProfileUrl(username: string) {\n    const userPath = `/profile/${encodeURIComponent(username)}`;\n    return formatUrl(userPath);\n}\n","/**\n * State utility functions.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IApiResponse, IApiError } from \"@dashboard/@types/api\";\nimport apiv2 from \"@dashboard/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\n\n// Utility to pull a group of action types out of an actions object\nexport type ActionsUnion<A extends IActionCreatorsMapObject> = ReturnType<A[keyof A]>;\n\n// Utility to create a generic action action.\n\n/**\n * Utility to create an action with our a without a payload of a given type.\n * The action generated can have its type narrowed in a reducer switch statement if the type T matches.\n *\n * @see ActionsUnion\n *\n * @param type The action type.\n * @param payload The payload data.\n */\nexport function createAction<ActionType extends string>(type: ActionType): IAction<ActionType>;\nexport function createAction<ActionType extends string, Payload>(\n    type: ActionType,\n    payload: Payload,\n): IActionWithPayload<ActionType, Payload>;\nexport function createAction<ActionType extends string, Payload>(type: ActionType, payload?: Payload) {\n    return payload === undefined ? { type } : { type, payload };\n}\n\n/**\n * Create request, response, and error action creators.\n *\n * The dummy types are needed because typescript currently requires all generic types to be specified or all to be inferred. They cannot currently be mixed.\n *\n * @see https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n *\n * @param requestType The string for the request type. This should be a unique constant.\n * @param successType The string for the success type. This should be a unique constant.\n * @param errorType The string for the error type. This should be a unique constant.\n * @param dummyResponseType A placeholder to infer the type of the response. This isn't used for anything other than inferring a type.\n * @param dummyMetaType A placeholder to infer the type of the meta. This isn't used for anything other than inferringa  type.\n *\n * @example\n *\n * ```\n * const GET_THING_REQUEST = \"GET_THING_REQUEST\";\n * const GET_THING_SUCCESS = \"GET_THING_SUCCESS\";\n * const GET_THING_ERROR = \"GET_THING_ERROR\";\n * interface IThing { thing: string }\n * interface IThingOptions { page?: number }\n *\n * generateApiActionCreators(GET_THING_REQUEST, GET_THING_SUCCESS, GET_THING_ERROR, {} as IThing, {} as IThingOptions);\n * ```\n */\nexport function generateApiActionCreators<\n    RequestActionType extends string,\n    SuccessActionType extends string,\n    ErrorActionType extends string,\n    ResponseDataType,\n    Meta = any\n>(\n    requestType: RequestActionType,\n    successType: SuccessActionType,\n    errorType: ErrorActionType,\n    dummyResponseType?: ResponseDataType,\n    dummyMetaType?: Meta,\n): {\n    request: (meta?: Meta) => IApiAction<RequestActionType, Meta>;\n    success: (\n        payload: IApiResponse<ResponseDataType>,\n        meta?: Meta,\n    ) => IApiSuccessAction<SuccessActionType, Meta, ResponseDataType>;\n    error: (error: IApiError, meta?: Meta) => IApiErrorAction<ErrorActionType, Meta>;\n} {\n    return {\n        request: (meta: Meta) => createApiRequestAction(requestType, meta),\n        success: (response: IApiResponse<ResponseDataType>, meta: Meta) =>\n            createApiSuccessAction(successType, meta, response),\n        error: (error: IApiError, meta: Meta) => createApiErrorAction(errorType, meta, error),\n    };\n}\n\ntype GeneratedActionCreators = ReturnType<typeof generateApiActionCreators>;\n\n// Thunk types\ntype RequestType = \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\";\nexport function apiThunk(\n    requestType: RequestType,\n    endpoint: string,\n    actionCreators: GeneratedActionCreators,\n    params: any,\n) {\n    return dispatch => {\n        dispatch(actionCreators.request(params));\n        apiv2[requestType as any](endpoint, params)\n            .then((response: AxiosResponse) => {\n                dispatch(actionCreators.success(response, params));\n            })\n            .catch((axiosError: AxiosError) => {\n                const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n                dispatch(actionCreators.error(error));\n            });\n    };\n}\n\n// Action interfaces\nexport interface IAction<T extends string> {\n    type: T;\n}\n\nexport interface IActionWithPayload<T extends string, P> extends IAction<T> {\n    payload: P;\n}\n\nexport interface IActionCreator<T extends string> {\n    (): IAction<T>;\n}\n\ntype FunctionType = (...args: any[]) => any;\ninterface IActionCreatorsMapObject {\n    [actionCreator: string]: FunctionType;\n}\n\n// API Action interfaces\ninterface IApiAction<ActionType, Meta> {\n    type: ActionType;\n    meta: Meta;\n}\n\ninterface IApiErrorAction<ActionType, Meta> extends IApiAction<ActionType, Meta> {\n    payload: IApiError;\n}\n\ninterface IApiSuccessAction<ActionType, Meta, ResponseDataType> extends IApiAction<ActionType, Meta> {\n    payload: IApiResponse<ResponseDataType>;\n}\n\n/**\n * Create an API request action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n */\nfunction createApiRequestAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n): IApiAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n    };\n}\n\n/**\n * Create an API error action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param error An API error.\n */\nfunction createApiErrorAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n    error: IApiError,\n): IApiErrorAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n        payload: error,\n    };\n}\n\n/**\n * Create an API success action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param payload The shape of the IApiResponse data.\n */\nfunction createApiSuccessAction<ActionType extends string, Meta, ResponseDataType>(\n    type: ActionType,\n    meta: Meta,\n    payload: IApiResponse<ResponseDataType>,\n): IApiSuccessAction<ActionType, Meta, ResponseDataType> {\n    return {\n        type,\n        meta,\n        payload,\n    };\n}\n","/**\n * Utilities and types for handling unique and/or required HTML ids in react components.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport uniqueId from \"lodash/uniqueId\";\n\n// Optional ID\nexport interface IOptionalComponentID {\n    id?: string | boolean;\n}\n\n// Requires ID\nexport interface IRequiredComponentID {\n    id: string;\n}\n\nexport function uniqueIDFromPrefix(suffix: string) {\n    return (suffix + uniqueId()) as string;\n}\n\nexport function getRequiredID(props: IRequiredComponentID, suffix: string): string {\n    if (props.id) {\n        return props.id;\n    } else {\n        return uniqueIDFromPrefix(suffix);\n    }\n}\n\nexport function getOptionalID(props: IOptionalComponentID, suffix?: string): string | null {\n    if (props.id) {\n        // we want an ID\n        if (typeof props.id === \"string\") {\n            // Handled by parent component\n            return props.id;\n        } else if (typeof props.id === \"boolean\" && suffix) {\n            return uniqueIDFromPrefix(suffix);\n        }\n        throw new Error(\"To generate and ID, you must provide a suffix.\");\n    } else {\n        return null;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nexport * from \"@dashboard/@types/api/general\";\nexport * from \"@dashboard/@types/api/user\";\nexport * from \"@dashboard/@types/api/authenticate\";\nexport * from \"@dashboard/@types/api/comment\";\nexport * from \"@dashboard/@types/api/discussion\";\nexport * from \"@dashboard/@types/api/media\";\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    className?: string;\n    isError?: boolean;\n    content?: string | Node | null;\n}\n\nexport default class Paragraph extends React.Component<IProps> {\n    public static defaultProps = {\n        id: false,\n    };\n\n    public id: string;\n\n    constructor(props) {\n        super(props);\n        this.id = getOptionalID(props, \"Paragraph\") as string;\n    }\n\n    public render() {\n        if (this.props.content) {\n            const componentClasses = classNames({ isError: this.props.isError }, this.props.className);\n\n            let accessibilityProps = {};\n\n            if (this.props.isError) {\n                accessibilityProps = {\n                    \"aria-live\": \"assertive\",\n                    role: \"alert\",\n                };\n            }\n\n            return (\n                <p id={this.id} className={componentClasses} {...accessibilityProps}>\n                    {this.props.content}\n                </p>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { getMeta } from \"@dashboard/application\";\n\n/**\n * A component for displaying and setting the document title.\n *\n * This component can render a default title or a custom title depending on the usage.\n *\n * @example <caption>Render the title in the default h1</caption>\n * <DocumentTitle title=\"Page Title\" />\n *\n * @example <caption>Render a custom title</caption>\n * <DocumentTitle title=\"Title Bar Title >\n *     <h1>Page Title</h1>\n * </DocumentTitle>\n */\nexport default class DocumentTitle extends React.Component<IProps> {\n    public componentDidMount() {\n        document.title = this.getHeadTitle(this.props);\n    }\n\n    public componentWillUpdate(nextProps: IProps) {\n        document.title = this.getHeadTitle(nextProps);\n    }\n\n    public render() {\n        if (this.props.children) {\n            return this.props.children;\n        } else {\n            return <h1>{this.props.title}</h1>;\n        }\n    }\n\n    /**\n     * Calculate the status bar title from the props.\n     *\n     * @param props - The props used to calculate the title.\n     * @returns Returns the title as a string.\n     */\n    private getHeadTitle(props: IProps): string {\n        const siteTitle: string = getMeta(\"ui.siteName\", \"\");\n        const parts: string[] = [];\n\n        if (props.title && props.title.length > 0) {\n            parts.push(props.title);\n        }\n        if (siteTitle.length > 0 && siteTitle !== props.title) {\n            parts.push(siteTitle);\n        }\n\n        return parts.join(\" - \");\n    }\n}\n\ninterface IProps {\n    title: string;\n    children?: React.ReactNode;\n}\n","/**\n * A module to isolate meta data passed from the server into a single dependency.\n * This should always be used instead of accessing window.gdn directly.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\ninterface IGdn {\n    meta: AnyObject;\n    permissions: AnyObject;\n    translations: AnyObject;\n    [key: string]: any;\n}\n\n/** The gdn object may be set in an inline script in the head of the document. */\nconst gdn = window.gdn || {};\n\nif (!(\"meta\" in gdn)) {\n    gdn.meta = {};\n}\n\nif (!(\"permissions\" in gdn)) {\n    gdn.permissions = {};\n}\n\nif (!(\"translations\" in gdn)) {\n    gdn.translations = {};\n}\n\nexport default gdn as IGdn;\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\n/**\n * @type {boolean} The current debug setting.\n * @private\n */\nlet _debug = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        _debug = newValue;\n    }\n\n    return _debug;\n}\n\ntype NormalCallback = (...args: any[]) => any;\ntype PromiseCallback = (...args: any[]) => Promise<any>;\n\nexport type PromiseOrNormalCallback = NormalCallback | PromiseCallback;\n\n/**\n * Resolve an array of functions that return promises sequentially.\n *\n * @param promiseFunctions - The functions to execute.\n *\n * @returns An array of all results in sequential order.\n *\n * @example\n * const urls = ['/url1', '/url2', '/url3']\n * const functions = urls.map(url => () => fetch(url))\n * resolvePromisesSequentially(funcs)\n *   .then(console.log)\n *   .catch(console.error)\n */\nexport function resolvePromisesSequentially(promiseFunctions: PromiseOrNormalCallback[]): Promise<any[]> {\n    if (!Array.isArray(promiseFunctions)) {\n        throw new Error(\"First argument needs to be an array of Promises\");\n    }\n\n    return new Promise((resolve, reject) => {\n        let count = 0;\n        let results = [];\n\n        function iterationFunction(previousPromise, currentPromise) {\n            return previousPromise\n                .then(result => {\n                    if (count++ !== 0) {\n                        results = results.concat(result);\n                    }\n\n                    return currentPromise(result, results, count);\n                })\n                .catch(err => reject(err));\n        }\n\n        promiseFunctions = promiseFunctions.concat(() => Promise.resolve());\n\n        promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(() => {\n            resolve(results);\n        });\n    });\n}\n\n/**\n * Log something to console.\n *\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function log(...value: any[]) {\n    if (_debug) {\n        // tslint:disable-next-line:no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.warn(...value);\n}\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IClass {\n    new (): any;\n}\n\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    log(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk, createAction } from \"@dashboard/state/utility\";\nimport { IRequestPasswordOptions } from \"@dashboard/@types/api\";\n\n// Authenticating user /authenticate/password\nexport const POST_REQUEST_PASSWORD_REQUEST = \"POST_REQUEST_PASSWORD_REQUEST\";\nexport const POST_REQUEST_PASSWORD_ERROR = \"POST_REQUEST_PASSWORD_ERROR\";\nexport const POST_REQUEST_PASSWORD_SUCCESS = \"POST_REQUEST_PASSWORD_SUCCESS\";\nexport const AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE = \"AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE\";\n\nexport const afterRequestPasswordSuccessNavigate = () => createAction(AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE);\n\nconst otherActions = {\n    afterRequestPasswordSuccessNavigate,\n};\n\nconst requestPasswordActions = generateApiActionCreators(\n    POST_REQUEST_PASSWORD_REQUEST,\n    POST_REQUEST_PASSWORD_SUCCESS,\n    POST_REQUEST_PASSWORD_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {},\n    {} as IRequestPasswordOptions,\n);\n\nexport type ActionTypes = ActionsUnion<typeof requestPasswordActions> | ActionsUnion<typeof otherActions>;\n\nexport const postRequestPassword = (params: IRequestPasswordOptions) =>\n    apiThunk(\"post\", \"users/request-password\", requestPasswordActions, params);\n","/**\n * A reducer registry so that we can have dynamically loading reducers.\n *\n * @see http://nicolasgallagher.com/redux-modules-and-code-splitting/\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { logError } from \"@dashboard/utility\";\nimport { Reducer, ReducersMapObject } from \"redux\";\nimport { onReady } from \"@dashboard/application\";\n\nlet haveGot = false;\nlet wasReadyCalled = false;\nconst reducers = {};\n\nonReady(() => {\n    wasReadyCalled = true;\n});\n\nexport function registerReducer(name: string, reducer: Reducer) {\n    if (haveGot) {\n        logError(\"Cannot register reducer %s after reducers applied to the store.\", name);\n    } else {\n        reducers[name] = reducer;\n    }\n}\n\nexport function getReducers(): ReducersMapObject<any, any> {\n    haveGot = true;\n\n    if (!wasReadyCalled) {\n        logError(\"getReducers() was called before onReady\");\n    }\n\n    return {\n        ...reducers,\n    };\n}\n\n/**\n * @deprecated\n */\nconst reducerRegistry = {\n    register: registerReducer,\n    getReducers,\n};\n\nexport default reducerRegistry;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@dashboard/state/utility\";\nimport { IAuthenticatePasswordResponseData, IAuthenticatePasswordParams } from \"@dashboard/@types/api\";\nimport apiv2 from \"@dashboard/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\nimport { formatUrl } from \"@dashboard/application\";\n\n// Authenticating user /authenticate/password\nexport const POST_AUTHENTICATE_PASSWORD_REQUEST = \"POST_AUTHENTICATE_PASSWORD_REQUEST\";\nexport const POST_AUTHENTICATE_PASSWORD_ERROR = \"POST_AUTHENTICATE_PASSWORD_ERROR\";\nexport const POST_AUTHENTICATE_PASSWORD_SUCCESS = \"POST_AUTHENTICATE_PASSWORD_SUCCESS\";\n\nconst authenticatePasswordActions = generateApiActionCreators(\n    POST_AUTHENTICATE_PASSWORD_REQUEST,\n    POST_AUTHENTICATE_PASSWORD_SUCCESS,\n    POST_AUTHENTICATE_PASSWORD_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IAuthenticatePasswordResponseData,\n    {} as IAuthenticatePasswordParams,\n);\n\nexport const postAuthenticatePassword = (params: IAuthenticatePasswordParams) => dispatch => {\n    dispatch(authenticatePasswordActions.request(params));\n    apiv2\n        .post(\"/authenticate/password\", params)\n        .then((response: AxiosResponse) => {\n            dispatch(authenticatePasswordActions.success(response, params));\n            const urlParms = new URLSearchParams();\n            window.location.href = formatUrl(urlParms.get(\"target\") || \"/\");\n        })\n        .catch((axiosError: AxiosError) => {\n            const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n            dispatch(authenticatePasswordActions.error(error));\n        });\n};\n\nexport type ActionTypes = ActionsUnion<typeof authenticatePasswordActions>;\n","/**\n * Embed utility functions and types.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IDiscussionEmbed, ICommentEmbed, IScrapeData } from \"@dashboard/@types/api\";\n\nexport const FOCUS_CLASS = \"embed-focusableElement\";\n\nexport type IQuoteEmbedData = IDiscussionEmbed | ICommentEmbed;\nexport type IEmbedData = IScrapeData;\n\nexport interface IEmbedElements {\n    root: HTMLElement;\n    content: HTMLElement;\n}\n\nexport type EmbedRenderer = (elements: IEmbedElements, data: IEmbedData, inEditor: boolean) => Promise<void>;\n\nexport interface IEmbedProps<T = IScrapeData> {\n    data: T;\n    inEditor: boolean;\n    onRenderComplete: () => void;\n}\n\nconst embedRenderers: {\n    [type: string]: EmbedRenderer;\n} = {};\nconst embedComponents: {\n    [type: string]: React.ComponentClass<IEmbedProps>;\n} = {};\n\n/**\n * Get all of the registered embed types.\n */\nexport function getEditorEmbedTypes() {\n    return Object.keys(embedRenderers);\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedRenderer(type: string, renderer: EmbedRenderer) {\n    embedRenderers[type] = renderer;\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedComponent(type: string, component: React.ComponentClass<IEmbedProps>) {\n    embedComponents[type] = component;\n}\n\n/**\n * Render an embed into a DOM node based on it's type.\n */\nexport function renderEmbed(elements: IEmbedElements, data: IEmbedData, inEditor = true): Promise<void> {\n    return new Promise((resolve, reject) => {\n        if (!data.type) {\n            throw new Error(\"The embed type was not provided.\");\n        }\n\n        if (data.type === \"link\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedLink-content\");\n        }\n\n        if (data.type === \"quote\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedQuote-content\");\n        }\n\n        const renderer = data.type && embedRenderers[data.type];\n        const Component = data.type && embedComponents[data.type];\n\n        if (renderer) {\n            return renderer(elements, data, inEditor);\n        } else if (Component) {\n            ReactDOM.render(\n                <Component data={data as IScrapeData} inEditor={inEditor} onRenderComplete={resolve} />,\n                elements.content,\n            );\n        } else {\n            throw new Error(\"Could not find a renderer for the embed type - \" + data.type);\n        }\n    });\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { uniqueIDFromPrefix, getRequiredID, IRequiredComponentID } from \"@dashboard/componentIDs\";\nimport { IFieldError } from \"@dashboard/@types/api\";\n\ninterface IProps extends IRequiredComponentID {\n    className?: string;\n    errors?: IFieldError[];\n}\n\ninterface IState {\n    id: string;\n}\n\nexport default class ErrorMessages extends React.Component<IProps, IState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"errorMessages\") as string,\n        };\n    }\n\n    public render() {\n        const { errors } = this.props;\n\n        if (errors && errors.length > 0) {\n            const componentClasses = classNames(\"inputBlock-errors\", this.props.className);\n\n            const errorList = (errors as any).map((error: any, index) => {\n                return (\n                    <span key={index} className=\"inputBlock-error\">\n                        {error.message}\n                    </span>\n                );\n            });\n\n            return (\n                <span id={this.state.id} className={componentClasses}>\n                    {errorList}\n                </span>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport ErrorMessages from \"./ErrorMessages\";\nimport Paragraph from \"./Paragraph\";\nimport { getRequiredID, IOptionalComponentID } from \"@dashboard/componentIDs\";\nimport { IFieldError } from \"@dashboard/@types/api\";\n\nexport interface IInputTextProps extends IOptionalComponentID {\n    className?: string;\n    label: string;\n    value: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    labelNote?: string;\n    inputClassNames?: string;\n    type?: string;\n    labelID?: string;\n    defaultValue?: string;\n    placeholder?: string;\n    valid?: boolean;\n    descriptionID?: string;\n    required?: boolean;\n    errors?: IFieldError[];\n    disabled?: boolean;\n}\n\ninterface IState {\n    id: string;\n}\n\nexport default class InputTextBlock extends React.Component<IInputTextProps, IState> {\n    public static defaultProps = {\n        disabled: false,\n        type: \"text\",\n        errors: [],\n    };\n\n    private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n    public constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"inputText\") as string,\n        };\n    }\n\n    public render() {\n        const componentClasses = classNames(\"inputBlock\", this.props.className);\n        const inputClasses = classNames(\"inputBlock-inputText\", \"InputBox\", \"inputText\", this.props.inputClassNames);\n        const hasErrors = !!this.props.errors && this.props.errors.length > 0;\n\n        let describedBy;\n        if (hasErrors) {\n            describedBy = this.errorID;\n        }\n\n        return (\n            <label className={componentClasses}>\n                <span id={this.labelID} className=\"inputBlock-labelAndDescription\">\n                    <span className=\"inputBlock-labelText\">{this.props.label}</span>\n                    <Paragraph id={false} className=\"inputBlock-labelNote\" content={this.props.labelNote} />\n                </span>\n\n                <span className=\"inputBlock-inputWrap\">\n                    <input\n                        id={this.state.id}\n                        className={inputClasses}\n                        defaultValue={this.props.defaultValue}\n                        value={this.props.value}\n                        type={this.props.type}\n                        disabled={this.props.disabled}\n                        required={this.props.required}\n                        placeholder={this.props.placeholder}\n                        aria-invalid={hasErrors}\n                        aria-describedby={describedBy}\n                        aria-labelledby={this.labelID}\n                        onChange={this.onChange}\n                        ref={this.inputRef}\n                    />\n                </span>\n                <ErrorMessages id={this.errorID} errors={this.props.errors} />\n            </label>\n        );\n    }\n\n    /**\n     * Use a native change event instead of React's because of https://github.com/facebook/react/issues/1159\n     */\n    public componentDidMount() {\n        this.inputRef.current!.addEventListener(\"change\", this.onChange);\n    }\n\n    /**\n     * Use a native change event instead of React's because of https://github.com/facebook/react/issues/1159\n     */\n    public componentWillUnount() {\n        this.inputRef.current!.removeEventListener(\"change\", this.onChange);\n    }\n\n    public get value(): any {\n        return this.inputRef.current ? this.inputRef.current.value : \"\";\n    }\n\n    public set value(value) {\n        if (this.inputRef.current) {\n            this.inputRef.current.value = value;\n        } else {\n            throw new Error(\"inputDom does not exist\");\n        }\n    }\n\n    public focus() {\n        this.inputRef.current!.focus();\n    }\n\n    public select() {\n        this.inputRef.current!.select();\n    }\n\n    private onChange = event => {\n        if (this.props.onChange) {\n            this.props.onChange(event);\n        }\n    };\n\n    private get labelID(): string {\n        return this.state.id + \"-label\";\n    }\n\n    private get errorID(): string {\n        return this.state.id + \"-errors\";\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { uniqueIDFromPrefix, getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    id?: string;\n    className?: string;\n    checked: boolean;\n    disabled?: boolean;\n    onChange: any;\n    label: string;\n}\n\ninterface IState {\n    id: string;\n}\n\nexport default class Button extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        disabled: false,\n        id: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getOptionalID(props, \"checkbox\") as string,\n        };\n    }\n\n    get labelID(): string {\n        return this.state.id + \"-label\";\n    }\n\n    public render() {\n        const componentClasses = classNames(\"checkbox\", this.props.className);\n\n        return (\n            <label id={this.state.id} className={componentClasses}>\n                <input\n                    className=\"checkbox-input\"\n                    aria-labelledby={this.labelID}\n                    type=\"checkbox\"\n                    onChange={this.props.onChange}\n                    checked={this.props.checked}\n                />\n                <span className=\"checkbox-box\" aria-hidden=\"true\">\n                    <span className=\"checkbox-state\">\n                        <svg\n                            className=\"checkbox-icon checkbox-checkIcon\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 10 10\"\n                        >\n                            <title>{t(\"✓\")}</title>\n                            <path\n                                fill=\"currentColor\"\n                                d=\"M10,2.7c0-0.2-0.1-0.3-0.2-0.4L8.9,1.3c-0.2-0.2-0.6-0.2-0.9,0L3.8,5.6L1.9,3.7c-0.2-0.2-0.6-0.2-0.9,0L0.2,4.6c-0.2,0.2-0.2,0.6,0,0.9l3.2,3.2c0.2,0.2,0.6,0.2,0.9,0l5.5-5.5C9.9,3,10,2.8,10,2.7z\"\n                            />\n                        </svg>\n                    </span>\n                </span>\n                <span id={this.labelID} className=\"checkbox-label\">\n                    {this.props.label}\n                </span>\n            </label>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { getFieldErrors, getGlobalErrorMessage } from \"@dashboard/apiv2\";\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport InputTextBlock from \"@dashboard/components/forms/InputTextBlock\";\nimport Checkbox from \"@dashboard/components/forms/Checkbox\";\nimport ButtonSubmit from \"@dashboard/components/forms/ButtonSubmit\";\nimport Paragraph from \"@dashboard/components/forms/Paragraph\";\nimport { IRequiredComponentID, getRequiredID } from \"@dashboard/componentIDs\";\nimport { IStoreState, IPasswordState } from \"@dashboard/@types/state\";\nimport { postAuthenticatePassword } from \"@dashboard/state/authenticate/passwordActions\";\nimport { IAuthenticatePasswordParams, LoadStatus } from \"@dashboard/@types/api\";\nimport { connect } from \"react-redux\";\n\ninterface IProps {\n    passwordState: IPasswordState;\n    authenticate: typeof postAuthenticatePassword;\n    defaultUsername?: string;\n}\n\ninterface IState extends IRequiredComponentID {\n    rememberMe: boolean;\n    username: string;\n    password: string;\n    id: string;\n}\n\n/**\n * Username + password from for signins.\n */\nexport class PasswordForm extends React.Component<IProps, IState> {\n    private usernameInput: React.RefObject<InputTextBlock> = React.createRef();\n    private passwordInput: React.RefObject<InputTextBlock> = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: getRequiredID(props, \"passwordForm\"),\n            rememberMe: true,\n            username: \"\",\n            password: \"\",\n        };\n    }\n\n    public render() {\n        let formDescribedBy;\n        const globalErrorMessage = getGlobalErrorMessage(this.props.passwordState, [\"username\", \"password\"]);\n        if (globalErrorMessage) {\n            formDescribedBy = this.formDescriptionID;\n        }\n\n        return (\n            <form\n                id={this.state.id}\n                aria-describedby={formDescribedBy}\n                className=\"passwordForm\"\n                method=\"post\"\n                onSubmit={this.handleSubmit}\n                noValidate\n            >\n                <Paragraph\n                    id={this.formDescriptionID}\n                    className=\"authenticateUser-paragraph\"\n                    content={globalErrorMessage}\n                    isError={true}\n                />\n                <InputTextBlock\n                    label={t(\"Email/Username\")}\n                    required={true}\n                    disabled={!this.allowEdit}\n                    errors={getFieldErrors(this.props.passwordState, \"username\")}\n                    defaultValue={this.props.defaultUsername || \"\"}\n                    ref={this.usernameInput}\n                    onChange={this.handleUsernameChange}\n                    value={this.state.username}\n                />\n                <InputTextBlock\n                    label={t(\"Password\")}\n                    required={true}\n                    disabled={!this.allowEdit}\n                    errors={getFieldErrors(this.props.passwordState, \"password\")}\n                    type=\"password\"\n                    ref={this.passwordInput}\n                    onChange={this.handlePasswordChange}\n                    value={this.state.password}\n                />\n                <div className=\"inputBlock inputBlock-tighter\">\n                    <div className=\"rememberMeAndForgot\">\n                        <span className=\"rememberMeAndForgot-rememberMe\">\n                            <Checkbox\n                                label={t(\"Keep me signed in\")}\n                                onChange={this.handleCheckBoxChange}\n                                checked={this.state.rememberMe}\n                            />\n                        </span>\n                        <span className=\"rememberMeAndForgot-forgot\">\n                            <Link to=\"/authenticate/recoverpassword\">{t(\"Forgot your password?\")}</Link>\n                        </span>\n                    </div>\n                </div>\n                <ButtonSubmit disabled={!this.allowSubmit} content={t(\"Sign In\")} />\n            </form>\n        );\n    }\n\n    /**\n     * Whenever the component gets new form state, we check for errors and focus the relavent errored inputs.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (this.props.passwordState === prevProps.passwordState) {\n            return;\n        }\n\n        if (getFieldErrors(this.props.passwordState, \"username\")) {\n            this.usernameInput.current!.select();\n        } else if (getFieldErrors(this.props.passwordState, \"password\")) {\n            this.passwordInput.current!.select();\n        } else {\n            this.usernameInput.current!.select();\n        }\n    }\n\n    /**\n     * Whether or not inputs in the form can be edited.\n     */\n    private get allowEdit() {\n        return this.props.passwordState.status !== LoadStatus.LOADING;\n    }\n\n    private get allowSubmit() {\n        const { username, password } = this.state;\n        return username.length > 0 && password.length > 0;\n    }\n\n    /**\n     * Handler for the remember me checkbox.\n     */\n    private handleCheckBoxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ rememberMe: event.target.checked || false });\n    };\n\n    /**\n     * Change handler for the email input.\n     */\n    private handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ username: value });\n    };\n\n    /**\n     * Change handler for the email input.\n     */\n    private handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ password: value });\n    };\n\n    /**\n     * Submit handler for the form.\n     */\n    private handleSubmit = (event: React.SyntheticEvent<any>) => {\n        event.preventDefault();\n        const { username, password, rememberMe } = this.state;\n\n        this.props.authenticate({\n            username,\n            password,\n            persist: rememberMe,\n        });\n    };\n\n    /**\n     * Get the description ID for the form.\n     */\n    private get formDescriptionID() {\n        return this.state.id + \"-description\";\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        passwordState: authenticate.password,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authenticate: (params: IAuthenticatePasswordParams) => {\n            dispatch(postAuthenticatePassword(params));\n        },\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\nexport default withRedux(withRouter(PasswordForm));\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { uniqueIDFromPrefix, getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    className?: string;\n    type: string;\n    content: string | Node;\n    disabled?: boolean;\n    prefix: string;\n}\n\ninterface IState {\n    id?: string;\n}\n\nexport default class Button extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        id: false,\n        disabled: false,\n        type: \"button\",\n        prefix: \"button\",\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getOptionalID(props, props.prefix) as string | undefined,\n        };\n    }\n\n    public render() {\n        const componentClasses = classNames(\"button\", \"Button\", this.props.className);\n\n        return (\n            <button\n                id={this.state.id}\n                disabled={this.props.disabled}\n                type={this.props.type}\n                className={componentClasses}\n            >\n                {this.props.content}\n            </button>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"./Button\";\nimport { uniqueIDFromPrefix, getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    content: string | Node;\n    className?: string;\n    disabled?: boolean;\n}\n\nexport default class ButtonSubmit extends React.Component<IProps, IOptionalComponentID> {\n    public static defaultProps = {\n        disabled: false,\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    public render() {\n        const componentClasses = classNames(\n            \"Primary\",\n            \"buttonCTA\",\n            \"BigButton\",\n            \"button-fullWidth\",\n            this.props.className,\n        );\n\n        return (\n            <Button\n                id={this.props.id}\n                disabled={this.props.disabled}\n                type=\"submit\"\n                content={this.props.content}\n                className={componentClasses}\n                prefix=\"submitButton\"\n            >\n                {this.props.content}\n            </Button>\n        );\n    }\n}\n","/**\n * Utilities that have a hard dependency on the DOM.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as utility from \"@dashboard/utility\";\nimport twemoji from \"twemoji\";\nimport tabbable from \"tabbable\";\nimport { logError, log } from \"@dashboard/utility\";\nimport debounce from \"lodash/debounce\";\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Add the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function hideElement(element: Element) {\n    element.classList.add(\"u-isHidden\");\n    element.setAttribute(\"aria-hidden\", \"true\");\n}\n\n/**\n * Remove the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function unhideElement(element: Element) {\n    element.classList.remove(\"u-isHidden\");\n    element.removeAttribute(\"aria-hidden\");\n}\n\n/**\n * Check if an element is visible or not.\n *\n * @param element - The element to check.\n *\n * @returns The visibility.\n */\nexport function elementIsVisible(element: HTMLElement): boolean {\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n\n/**\n * Get the form data out of a form element.\n *\n * @param {Element} formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string | undefined {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = utility.hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        const listener = scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n        return eventHash;\n    }\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n    scope.removeEventListener(eventName, wrappedCallback);\n    delete delegatedEventListeners[eventHash];\n}\n\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue);\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param {string|Node} selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws {Error} - If no element was found.\n * @returns {HTMLElement} - An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement) {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n\n// Test Char for Emoji 5.0\nconst testChar = \"\\uD83E\\uDD96\"; // U+1F996 T-Rex -> update test character with new emoji version support.\n\nlet emojiSupportedCache: boolean | null = null;\n\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            const offset = 12 * pixelRatio;\n            const ctx = canvas.getContext(\"2d\");\n            ctx!.fillStyle = \"#f00\";\n            ctx!.textBaseline = \"top\";\n            ctx!.font = \"32px Arial\";\n            ctx!.fillText(testChar, 0, 0);\n            emojiSupportedCache = ctx!.getImageData(offset, offset, 1, 1).data[0] !== 0;\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string) {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript) {\n            if (loadEventCallbacks.has(existingScript)) {\n                // Add another resolveCallback into the weakmap.\n                const callbacks = loadEventCallbacks.get(existingScript);\n                callbacks && callbacks.push(resolve);\n            } else {\n                // Script is already loaded. Resolve immediately.\n                resolve();\n            }\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n\ninterface ITabbableOptions {\n    root: Element;\n    excludedElements: Element[];\n    excludedRoots: Element[];\n    reverse: boolean;\n    fromElement: Element;\n    allowLooping: boolean;\n}\n\n/**\n * Get the next tabbable item within a given tabindex.\n *\n * WARNING: Performance can be poor if you pass many excluded roots and do not\n * sufficiently narrow the tree your are looking in.\n *\n * @param options\n * @property root - The root element to look in.\n * @property excludedElements - Elements to ignore.\n * @property excludedRoots - These element's children will be ignored.\n * @property reverse - True to get the previous element instead.\n * @property fromElement - The currently focused element.\n * @property allowLooping - Whether or not the focus should loop around from beginning <-> end.\n */\nexport function getNextTabbableElement(options?: Partial<ITabbableOptions>): HTMLElement | null {\n    const defaultTabbableOptions: ITabbableOptions = {\n        root: document.documentElement,\n        excludedElements: [],\n        excludedRoots: [],\n        reverse: false,\n        fromElement: document.activeElement,\n        allowLooping: true,\n    };\n\n    // Merge the passed options and the defaults.\n    const finalOptions = {\n        ...defaultTabbableOptions,\n        ...options,\n    } as ITabbableOptions;\n\n    if (!(finalOptions.fromElement instanceof HTMLElement)) {\n        logError(\"Unable to tab to next element, `fromElement` given is not valid: \", finalOptions.fromElement);\n        return null;\n    }\n\n    const tabbables = tabbable(finalOptions.root).filter((tabbableElement: Element) => {\n        // We want to excempt items that are the active item or a parent of the active item\n        // because otherwise we would not be able to tab away from them.\n        const elementIsActiveOrChildOfActive =\n            finalOptions.fromElement === tabbableElement || tabbableElement.contains(finalOptions.fromElement);\n\n        if (!elementIsActiveOrChildOfActive) {\n            if (finalOptions.excludedElements.includes(tabbableElement)) {\n                return false;\n            }\n            for (const excludedRoot of finalOptions.excludedRoots) {\n                if (excludedRoot !== tabbableElement && excludedRoot.contains(tabbableElement)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    });\n\n    const currentTabIndex = tabbables.indexOf(finalOptions.fromElement);\n\n    if (currentTabIndex < 0) {\n        return null;\n    }\n\n    let targetIndex = finalOptions.reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n    if (finalOptions.allowLooping) {\n        // Loop over the beginning and ends\n        if (targetIndex < 0) {\n            targetIndex = tabbables.length - 1;\n        } else if (targetIndex >= tabbables.length) {\n            targetIndex = 0;\n        }\n    }\n\n    return tabbables[targetIndex] || null;\n}\n\nfunction checkDomTreeWasClicked(rootNode: Element | null, clickedElement: Element) {\n    return rootNode && clickedElement && (rootNode.contains(clickedElement as Element) || rootNode === clickedElement);\n}\n\n/**\n * Determine if the currently focused element is somewhere inside of (or the same as)\n * a given Element.\n *\n * @param rootNode - The root node to look in.\n */\nfunction checkDomTreeHasFocus(rootNode: Element | null, event: FocusEvent, callback: (hasFocus: boolean) => void) {\n    setTimeout(() => {\n        const possibleTargets = [\n            // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n            document.activeElement, // IE11, Safari.\n            event.relatedTarget as Element, // Chrome (The actual standard)\n            (event as any).explicitOriginalTarget, // Firefox\n        ];\n\n        let activeElement = null;\n        for (const target of possibleTargets) {\n            if (target && target !== document.body) {\n                activeElement = target;\n                break;\n            }\n        }\n\n        if (activeElement !== null) {\n            const hasFocus =\n                rootNode && activeElement && (activeElement === rootNode || rootNode.contains(activeElement));\n\n            // We will only invalidate based on something actually getting focus.\n            callback(!!hasFocus);\n        }\n    }, 0);\n}\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n *\n * @param rootNode - The root dom node to watch on.\n * @param callback - A callback for when the tree focuses and blurs.\n */\nexport function watchFocusInDomTree(rootNode: Element, callback: (hasFocus: boolean) => void) {\n    rootNode.addEventListener(\n        \"focusout\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                !hasFocus && callback(false);\n            });\n        },\n        true,\n    );\n\n    rootNode.addEventListener(\n        \"focusin\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                hasFocus && callback(true);\n            });\n        },\n        true,\n    );\n\n    document.addEventListener(\"click\", event => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = checkDomTreeWasClicked(rootNode, triggeringElement);\n        if (!wasClicked) {\n            callback(false);\n        }\n    });\n}\n\n/**\n * Sticky header handling\n */\nfunction handleStickyHeaderState(element, data) {\n    const goingDown = data.lastScrollPos < data.currentScrollPos;\n    const isAtTopOfPage = data.currentScrollPos === 0;\n    const elementHeight = element.offsetHeight;\n    const isPastHeader =\n        element.style.position !== \"fixed\" && element.offsetTop + elementHeight <= data.currentScrollPos;\n    const elementTop = element.style.top !== \"\" ? parseInt(element.style.top, 10) : false;\n\n    element.classList.toggle(\"isScrollingDown\", goingDown);\n    element.classList.toggle(\"isScrollingUp\", !goingDown);\n    element.classList.toggle(\"isAtTop\", isAtTopOfPage);\n\n    if (goingDown) {\n        element.style.position = \"\";\n        if (isPastHeader) {\n            element.style.top = `${data.currentScrollPos - elementHeight}px`;\n        } else {\n            if (!elementTop) {\n                element.style.top = `${data.currentScrollPos}px`;\n            }\n        }\n    } else {\n        // going UP\n        if (data.currentScrollPos <= elementTop) {\n            element.style.top = \"\";\n            element.style.position = \"fixed\";\n        }\n    }\n}\n\n/**\n * Vanilla's default way to handle sticky headers\n */\nexport function stickyHeader() {\n    const header = document.querySelector(\".stickyHeader\");\n    if (header !== null) {\n        let currentScrollPos = Math.max(window.scrollY, 0);\n        let lastScrollPos = -1;\n\n        handleStickyHeaderState(header, {\n            currentScrollPos,\n            lastScrollPos,\n        });\n\n        window.addEventListener(\"scroll\", e => {\n            debounce(\n                () => {\n                    window.requestAnimationFrame(data => {\n                        lastScrollPos = currentScrollPos;\n                        currentScrollPos = Math.max(window.scrollY, 0);\n                        handleStickyHeaderState(header, {\n                            currentScrollPos,\n                            lastScrollPos,\n                        });\n                    });\n                },\n                100,\n                {\n                    leading: true,\n                },\n            )();\n        });\n    } else {\n        utility.log(\"No sticky header found\");\n    }\n}\n\n/**\n * Handler for an file being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedImage(event: DragEvent): File | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n        const files = Array.from(event.dataTransfer.files);\n\n        // Currently only 1 file is supported.\n        const mainFile = files[0];\n        return mainFile;\n    }\n}\n\n/**\n * Handler for an file being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedImage(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n\n/**\n * Calculate the height of element with simulated margin collapse.\n *\n * This is ideal for getting the calculate height of a fixed number of items. (not the entire parent).\n *\n * It considers:\n * - Element height\n * - Padding\n * - Borders\n * - Margins\n * - Margin collapsing.\n *\n * @param element - The element to measure\n * @param previousBottomMargin - The bottom margin of the previous element. You can use the returned bottom margin from this function to get this.\n */\nexport function getElementHeight(\n    element: Element,\n    previousBottomMargin: number = 0,\n): {\n    height: number;\n    bottomMargin: number;\n} {\n    const height = element.getBoundingClientRect().height;\n    const { marginTop, marginBottom } = window.getComputedStyle(element);\n\n    let topHeight = marginTop ? parseInt(marginTop, 10) : 0;\n    // Simulate a margin-collapsed height.\n    topHeight = Math.max(topHeight - previousBottomMargin, 0);\n\n    const bottomHeight = marginBottom ? parseInt(marginBottom, 10) : 0;\n    const finalHeight = height + topHeight + bottomHeight;\n\n    return {\n        height: finalHeight,\n        bottomMargin: bottomHeight,\n    };\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { createStore, compose, applyMiddleware, combineReducers, Store } from \"redux\";\nimport { getReducers } from \"@dashboard/state/reducerRegistry\";\nimport thunk from \"redux-thunk\";\nimport { IStoreState } from \"@dashboard/@types/state\";\n\n// There may be an initial state to import.\nconst initialState = {};\nconst initialActions = window.__ACTIONS__ || [];\n\nconst middleware = [thunk];\n\n// Browser may have redux dev tools installed, if so integrate with it.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n// Build the store, add devtools extension support if it's available.\nlet store;\n\nexport default function getStore<S extends IStoreState = IStoreState>(): Store<S> {\n    if (store === undefined) {\n        // Get our reducers.\n        const reducer = combineReducers(getReducers());\n        store = createStore(reducer, initialState, enhancer);\n\n        // Dispatch initial actions returned from the server.\n        initialActions.forEach(store.dispatch);\n    }\n\n    return store;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nexport const enum LoadStatus {\n    PENDING = \"PENDING\",\n    LOADING = \"LOADING\",\n    SUCCESS = \"SUCCESS\",\n    ERROR = \"ERROR\",\n}\n\ninterface IPendingValue {\n    status: LoadStatus.PENDING;\n}\n\ninterface ILoadingValue<T> {\n    status: LoadStatus.LOADING;\n    data?: T;\n    error?: IApiError;\n}\n\ninterface ISuccessValue<T> {\n    status: LoadStatus.SUCCESS;\n    data: T;\n    error?: undefined;\n}\n\ninterface IErrorValue<T> {\n    status: LoadStatus.ERROR;\n    error: IApiError;\n    data?: T;\n}\n\nexport type ILoadable<T> = IPendingValue | ILoadingValue<T> | ISuccessValue<T> | IErrorValue<T>;\n\nexport interface IApiResponse<DataType = any> {\n    data: DataType;\n    status: number;\n    headers: any;\n}\n\nexport interface IFieldError {\n    message: string; // translated message\n    code: string; // translation code\n    field: string;\n    status?: number; // HTTP status\n}\n\nexport interface IApiError {\n    message: string;\n    status: number;\n    errors?: {\n        [key: string]: IFieldError[];\n    };\n}\n","/**\n * Entrypoint for the APIv2 calls. Prepulates an axios instance with some config settings.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { formatUrl, t } from \"@dashboard/application\";\nimport { isFileImage, indexArrayByKey } from \"@dashboard/utility\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { IEmbedData } from \"@dashboard/embeds\";\nimport { IFieldError, LoadStatus, ILoadable } from \"@dashboard/@types/api\";\n\nfunction fieldErrorTransformer(responseData) {\n    if (responseData.status >= 400 && responseData.errors && responseData.errors.length > 0) {\n        responseData.errors = indexArrayByKey(responseData.errors, \"field\");\n    }\n\n    return responseData;\n}\n\nconst api = axios.create({\n    baseURL: formatUrl(\"/api/v2/\"),\n    headers: {\n        common: {\n            \"X-Requested-With\": \"vanilla\",\n        },\n    },\n    transformResponse: [...axios.defaults.transformResponse, fieldErrorTransformer],\n    paramsSerializer: params => qs.stringify(params, { indices: false }),\n});\n\nexport default api;\n\n/**\n * Upload an image using Vanilla's API v2.\n *\n * @param file - The file to upload.\n *\n * @throws If the file given is not an image. You must check yourself first.\n */\nexport async function uploadImage(image: File): Promise<IEmbedData> {\n    if (!isFileImage(image)) {\n        throw new Error(\n            `Unable to upload an image of type ${image.type}. Supported formats included .gif, .jpg and .png`,\n        );\n    }\n\n    const data = new FormData();\n    data.append(\"file\", image, image.name);\n    data.append(\"type\", \"image\");\n\n    const result = await api.post(\"/media\", data);\n    result.data.type = \"image\";\n    return result.data;\n}\n\n/**\n * Extract a field specific error from an ILoadable if applicable.\n *\n * @param loadable - The loadable to extract from.\n * @param field - The field to extract.\n *\n * @returns an array of IFieldErrors if found or undefined.\n */\nexport function getFieldErrors(loadable: ILoadable<any>, field: string): IFieldError[] | undefined {\n    if (loadable.status === LoadStatus.ERROR || loadable.status === LoadStatus.LOADING) {\n        if (loadable.error && loadable.error.errors && loadable.error.errors[field]) {\n            return loadable.error.errors[field];\n        }\n    }\n}\n\n/**\n * Extract a global error message out of an ILoadable if applicable.\n *\n * @param loadable - The loadable to extract from.\n * @param validFields - Field to check for overriding fields errors from. A global error only shows if there are no valid field errors.\n *\n * @returns A global error message or an undefined.\n */\nexport function getGlobalErrorMessage(loadable: ILoadable<any>, validFields: string[]): string | undefined {\n    if (loadable.status === LoadStatus.ERROR || loadable.status === LoadStatus.LOADING) {\n        for (const field of validFields) {\n            if (getFieldErrors(loadable, field)) {\n                return;\n            }\n        }\n\n        if (loadable.error) {\n            return loadable.error.message || t(\"An error has occurred, please try again.\");\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IUserFragment } from \"@dashboard/@types/api\";\n\nexport interface IUserAuthenticator {\n    authenticatorID: string;\n    type: string;\n    isUnique: boolean;\n    name: string;\n    ui: {\n        url: string;\n        buttonName: string;\n        photoUrl: string | null;\n        backgroundColor: string | null;\n        foregroundColor: string | null;\n    };\n    isUserLinked?: boolean;\n    sso?: any;\n}\n\nexport const enum AuthenticationStep {\n    AUTHENTICATED = \"authenticated\",\n    LINK_USER = \"linkUser\",\n}\n\nexport interface IAuthenticateResponse {\n    authenticationStep: AuthenticationStep;\n    user?: IUserFragment;\n    authSessionID?: string;\n    targetUrl?: string;\n}\n\nexport interface IAuthenticatePasswordParams {\n    username: string;\n    password: string;\n    persist?: boolean;\n}\n\nexport interface IAuthenticatePasswordResponseData extends IUserFragment {}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport Paragraph from \"@dashboard/components/forms/Paragraph\";\nimport { IUserAuthenticator } from \"@dashboard/@types/api\";\n\ninterface IProps {\n    ssoMethods?: IUserAuthenticator[];\n}\n\nexport default class SSOMethods extends React.Component<IProps> {\n    public render() {\n        if (!this.props.ssoMethods || this.props.ssoMethods.length === 0) {\n            return null;\n        }\n\n        const ssoMethods = this.props.ssoMethods.map((method, index) => {\n            const methodStyles = {\n                backgroundColor: method.ui.backgroundColor || undefined,\n                color: method.ui.foregroundColor || undefined,\n            };\n            return (\n                <a\n                    href={method.ui.url}\n                    key={index}\n                    className=\"BigButton button Button button-sso button-fullWidth\"\n                    style={methodStyles}\n                >\n                    <span className=\"button-ssoContents\">\n                        <img src={method.ui.photoUrl || undefined} className=\"ssoMethod-icon\" aria-hidden={true} />\n                        <span className=\"button-ssoLabel\">{t(method.ui.buttonName)}</span>\n                        <span className=\"ssoMethod-icon ssoMethod-iconSpacer\" aria-hidden=\"true\" />\n                    </span>\n                </a>\n            );\n        });\n\n        return (\n            <div className=\"ssoMethods\">\n                <Paragraph content={t(\"Sign in with one of the following:\")} />\n                {ssoMethods}\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n    onClick?: () => void;\n}\n\nexport default class RememberPasswordLink extends React.Component<IProps> {\n    public render() {\n        return (\n            <p className=\"authenticateUser-paragraph isCentered\">\n                {t(\"Remember your password?\")}{\" \"}\n                <Link onClick={this.props.onClick} to=\"/authenticate/signin\">\n                    {t(\"Sign In\")}\n                </Link>\n            </p>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { getFieldErrors, getGlobalErrorMessage } from \"@dashboard/apiv2\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\nimport React from \"react\";\nimport ButtonSubmit from \"@dashboard/components/forms/ButtonSubmit\";\nimport Paragraph from \"@dashboard/components/forms/Paragraph\";\nimport InputTextBlock from \"@dashboard/components/forms/InputTextBlock\";\nimport RememberPasswordLink from \"./components/RememberPasswordLink\";\nimport uniqueId from \"lodash/uniqueId\";\nimport { IStoreState, IRequestPasswordState } from \"@dashboard/@types/state\";\nimport { IRequestPasswordOptions, LoadStatus } from \"@dashboard/@types/api\";\nimport {\n    postRequestPassword,\n    afterRequestPasswordSuccessNavigate,\n} from \"@dashboard/state/users/requestPasswordActions\";\nimport { connect } from \"react-redux\";\n\ninterface IState {\n    email: string;\n}\n\ninterface IProps {\n    requestPasswordState: IRequestPasswordState;\n    postRequestPassword: typeof postRequestPassword;\n    onNavigateAway: () => void;\n}\n\nexport class RecoverPasswordPage extends React.Component<IProps, IState> {\n    public id = uniqueId(\"RecoverPasswordPage\");\n    public pageTitleID: string;\n    public emainInput: React.RefObject<InputTextBlock> = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.id = this.pageTitleID = this.id + \"-pageTitle\";\n\n        this.state = {\n            email: \"\",\n        };\n    }\n\n    public render() {\n        const pageTitle = (\n            <DocumentTitle title={t(\"Recover Password\")}>\n                <h1 id={this.pageTitleID} className=\"isCentered\">\n                    {t(\"Recover Password\")}\n                </h1>\n            </DocumentTitle>\n        );\n\n        if (this.props.requestPasswordState.status === LoadStatus.SUCCESS) {\n            return (\n                <div id={this.id} className=\"authenticateUserCol\">\n                    {pageTitle}\n                    <Paragraph\n                        content={t(\"A message has been sent to your email address with password reset instructions.\")}\n                        className=\"authenticateUser-paragraph\"\n                    />\n                    <RememberPasswordLink onClick={this.props.onNavigateAway} />\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"authenticateUserCol\">\n                    {pageTitle}\n                    <Paragraph\n                        content={t(\"RecoverPasswordLabelCode\", \"Enter your email to continue.\")}\n                        className=\"authenticateUser-paragraph\"\n                    />\n                    <form id={this.id} onSubmit={this.handleSubmit} aria-labelledby={this.pageTitleID} noValidate>\n                        <Paragraph\n                            className=\"authenticateUser-paragraph\"\n                            content={getGlobalErrorMessage(this.props.requestPasswordState, [\"email\"])}\n                            isError={true}\n                        />\n                        <InputTextBlock\n                            label={t(\"Email\")}\n                            required={true}\n                            disabled={!this.allowEdit}\n                            errors={getFieldErrors(this.props.requestPasswordState, \"email\")}\n                            value={this.state.email}\n                            onChange={this.handleEmailChange}\n                            ref={this.emainInput}\n                        />\n                        <ButtonSubmit\n                            disabled={!this.allowEdit || this.state.email.length === 0}\n                            content={t(\"Request a new password\")}\n                        />\n                    </form>\n                    <RememberPasswordLink />\n                </div>\n            );\n        }\n    }\n\n    /**\n     * Whenever the component gets new form state, we check for errors and focus the relavent errored inputs.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (this.props.requestPasswordState === prevProps.requestPasswordState) {\n            return;\n        }\n        if (this.props.requestPasswordState.status === LoadStatus.ERROR) {\n            this.emainInput.current!.select();\n        }\n    }\n\n    /**\n     * Change handler for the email input.\n     */\n    private handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ email: value });\n    };\n\n    /**\n     * Submit handler for the form.\n     */\n    private handleSubmit = event => {\n        event.preventDefault();\n        const { email } = this.state;\n        this.props.postRequestPassword({ email });\n    };\n\n    /**\n     * Whether or not the user can edit elements in the form.\n     */\n    private get allowEdit() {\n        return this.props.requestPasswordState.status !== LoadStatus.LOADING;\n    }\n}\n\nfunction mapStateToProps({ users }: IStoreState) {\n    return {\n        requestPasswordState: users.requestPassword,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        postRequestPassword: (params: IRequestPasswordOptions) => {\n            dispatch(postRequestPassword(params));\n        },\n        onNavigateAway: () => {\n            dispatch(afterRequestPasswordSuccessNavigate());\n        },\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\n\nexport default withRedux(RecoverPasswordPage);\n"],"sourceRoot":""}