{"version":3,"sources":["webpack:///./applications/dashboard/src/scripts/apiv2.ts","webpack:///./applications/dashboard/src/scripts/state/utility.ts","webpack:///./applications/dashboard/src/scripts/componentIDs.ts","webpack:///./applications/dashboard/src/scripts/application.tsx","webpack:///./applications/dashboard/src/scripts/gdn.ts","webpack:///./applications/dashboard/src/scripts/state/reducerRegistry.ts","webpack:///./applications/dashboard/src/scripts/state/getStore.ts","webpack:///./applications/dashboard/src/scripts/utility.ts","webpack:///./applications/dashboard/src/scripts/@types/api/general.ts","webpack:///./applications/dashboard/src/scripts/embeds.tsx","webpack:///./applications/dashboard/src/scripts/@types/api/authenticate.ts","webpack:///./applications/dashboard/src/scripts/dom.ts"],"names":["fieldErrorTransformer","responseData","status","errors","length","Object","_dashboard_utility__WEBPACK_IMPORTED_MODULE_1__","api","axios__WEBPACK_IMPORTED_MODULE_2___default","a","create","baseURL","_dashboard_application__WEBPACK_IMPORTED_MODULE_0__","headers","common","X-Requested-With","transformResponse","__spread","defaults","paramsSerializer","params","qs__WEBPACK_IMPORTED_MODULE_3___default","stringify","indices","uploadImage","image","Promise","Error","type","data","FormData","append","name","post","result","_a","sent","getFieldErrors","loadable","field","_dashboard_types_api__WEBPACK_IMPORTED_MODULE_4__","ERROR","LOADING","error","getGlobalErrorMessage","validFields","validFields_1","__values","validFields_1_1","next","done","value","message","__webpack_exports__","createAction","payload","undefined","generateApiActionCreators","requestType","successType","errorType","dummyResponseType","dummyMetaType","request","meta","createApiRequestAction","success","response","createApiSuccessAction","createApiErrorAction","apiThunk","endpoint","actionCreators","dispatch","_dashboard_apiv2__WEBPACK_IMPORTED_MODULE_0__","then","catch","axiosError","uniqueIDFromPrefix","suffix","lodash_uniqueId__WEBPACK_IMPORTED_MODULE_0___default","getRequiredID","props","id","getOptionalID","getMeta","key","defaultValue","_dashboard_gdn__WEBPACK_IMPORTED_MODULE_2__","parts","split","haystack","parts_1","parts_1_1","part","hasOwnProperty","setMeta","last","pop","parts_2","parts_2_1","translate","str","defaultTranslation","substr","translations","t","isAllowedUrl","input","validator_lib_isURL__WEBPACK_IMPORTED_MODULE_4___default","protocols","require_tld","require_protocol","require_host","require_valid_protocol","allow_trailing_dot","allow_protocol_relative_urls","formatUrl","path","indexOf","urlFormat","replace","_components","addComponent","component","toLowerCase","componentExists","getComponent","_mountComponents","parent","querySelectorAll","forEach","node","getAttribute","Component","react_dom__WEBPACK_IMPORTED_MODULE_1___default","render","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","_dashboard_utility__WEBPACK_IMPORTED_MODULE_3__","_routes","addRoutes","routes","Array","isArray","push","apply","getRoutes","_readyHandlers","onReady","callback","_executeReady","resolve","handlerPromises","map","handler","exec","all","document","readyState","addEventListener","onContent","makeProfileUrl","username","encodeURIComponent","gdn","window","permissions","haveGot","wasReadyCalled","reducers","registerReducer","reducer","_dashboard_utility__WEBPACK_IMPORTED_MODULE_0__","getReducers","__assign","_dashboard_application__WEBPACK_IMPORTED_MODULE_1__","reducerRegistry","register","store","initialState","initialActions","__ACTIONS__","middleware","redux_thunk__WEBPACK_IMPORTED_MODULE_2__","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","redux__WEBPACK_IMPORTED_MODULE_0__","enhancer","getStore","_dashboard_state_reducerRegistry__WEBPACK_IMPORTED_MODULE_1__","_debug","debug","newValue","resolvePromisesSequentially","promiseFunctions","reject","count","results","concat","reduce","previousPromise","currentPromise","err","log","_i","arguments","console","logError","logWarning","warn","hashString","prevHash","currVal","charCodeAt","splitStringLoosely","toSplit","splitWith","normalizedName","normalize","normalizedSplitTerm","charactersUsed","RegExp","piece","start","substring","isInstanceOfOneOf","needle","haystack_1","haystack_1_1","simplifyFraction","numerator","denominator","findGCD","b","gcd","shorthand","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","match","rawMatch","IMAGE_REGEX","isFileImage","file","test","capitalizeFirstLetter","charAt","toUpperCase","slice","indexArrayByKey","array","object","array_1","array_1_1","item","SAFE_PROTOCOL_REGEX","sanitizeUrl","url","LoadStatus","FOCUS_CLASS","embedRenderers","embedComponents","getEditorEmbedTypes","keys","registerEmbedRenderer","renderer","registerEmbedComponent","renderEmbed","elements","inEditor","root","classList","add","content","onRenderComplete","AuthenticationStep","escapeHTML","div","appendChild","createTextNode","innerHTML","unescapeHTML","escapedString","child","childNodes","nodeValue","hideElement","element","setAttribute","unhideElement","remove","removeAttribute","elementIsVisible","offsetWidth","offsetHeight","getClientRects","getFormData","formElement","HTMLFormElement","delegatedEventListeners","delegateEvent","eventName","filterSelector","scopeSelector","scope","functionKey","toString","querySelector","HTMLElement","eventHash","includes","wrappedCallback","event","target","closest","call","removeDelegatedEvent","removeEventListener","removeAllDelegatedEvents","toggleAttribute","attribute","dataMap","WeakMap","setData","initialValue","has","get","set","getData","attributeString","hasAttribute","ensureHtmlElement","selectorOrElement","testChar","emojiSupportedCache","isEmojiSupported","canvas","getContext","offset","devicePixelRatio","ctx","fillStyle","textBaseline","font","fillText","getImageData","emojiOptions","className","size","convertToSafeEmojiCharacters","stringOrNode","twemoji__WEBPACK_IMPORTED_MODULE_1___default","parse","loadEventCallbacks","rejectionCache","Map","ensureScript","scriptUrl","existingScript","callbacks","head","getElementsByTagName","script_1","src","onerror","timeout_1","setTimeout","onload","clearTimeout","delete","getNextTabbableElement","options","defaultTabbableOptions","documentElement","excludedElements","excludedRoots","reverse","fromElement","activeElement","allowLooping","finalOptions","tabbables","tabbable__WEBPACK_IMPORTED_MODULE_2___default","filter","tabbableElement","contains","_b","_c","excludedRoot","currentTabIndex","targetIndex","checkDomTreeWasClicked","rootNode","clickedElement","checkDomTreeHasFocus","possibleTargets","relatedTarget","explicitOriginalTarget","possibleTargets_1","possibleTargets_1_1","body","hasFocus","watchFocusInDomTree","triggeringElement","handleStickyHeaderState","goingDown","lastScrollPos","currentScrollPos","isAtTopOfPage","elementHeight","isPastHeader","style","position","offsetTop","elementTop","top","parseInt","toggle","stickyHeader","header","currentScrollPos_1","Math","max","scrollY","lastScrollPos_1","e","lodash_debounce__WEBPACK_IMPORTED_MODULE_3___default","requestAnimationFrame","leading","getDraggedImage","dataTransfer","files","preventDefault","from","getPastedImage","clipboardData","items","getAsFile","Boolean","getElementHeight","previousBottomMargin","height","getBoundingClientRect","getComputedStyle","marginTop","marginBottom","topHeight","bottomHeight","bottomMargin"],"mappings":";;;;;;;80DAcA,SAAAA,EAA+BC,GAK3B,OAJIA,EAAaC,QAAU,KAAOD,EAAaE,QAAUF,EAAaE,OAAOC,OAAS,IAClFH,EAAaE,OAASE,OAAAC,EAAA,EAAAD,CAAgBJ,EAAaE,OAAQ,UAGxDF,EAGX,IAAMM,EAAMC,EAAAC,EAAMC,QACdC,QAASN,OAAAO,EAAA,EAAAP,CAAU,YACnBQ,SACIC,QACIC,mBAAoB,YAG5BC,kBAAiBC,EAAMT,EAAAC,EAAMS,SAASF,mBAAmBhB,IACzDmB,iBAAkB,SAAAC,GAAU,OAAAC,EAAAZ,EAAGa,UAAUF,GAAUG,SAAvB,eAGjBhB,EAST,SAAAiB,EAA4BC,wBAAcC,QAAO,oEACnD,IAAKrB,OAAAC,EAAA,EAAAD,CAAYoB,GACb,MAAM,IAAIE,MACN,qCAAqCF,EAAMG,KAAI,oDAQxC,OAJTC,EAAO,IAAIC,UACZC,OAAO,OAAQN,EAAOA,EAAMO,MACjCH,EAAKE,OAAO,OAAQ,UAEL,EAAMxB,EAAI0B,KAAK,SAAUJ,WAExC,OAFMK,EAASC,EAAAC,QACRP,KAAKD,KAAO,SACnB,EAAOM,EAAOL,WAWZ,SAAAQ,EAAyBC,EAA0BC,GACrD,IAAID,EAASpC,SAAWsC,EAAA,WAAWC,OAASH,EAASpC,SAAWsC,EAAA,WAAWE,UACnEJ,EAASK,OAASL,EAASK,MAAMxC,QAAUmC,EAASK,MAAMxC,OAAOoC,GACjE,OAAOD,EAASK,MAAMxC,OAAOoC,GAanC,SAAAK,EAAgCN,EAA0BO,WAC5D,GAAIP,EAASpC,SAAWsC,EAAA,WAAWC,OAASH,EAASpC,SAAWsC,EAAA,WAAWE,QAAS,KAChF,IAAoB,IAAAI,EAAAC,EAAAF,GAAWG,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAC7B,GAAIZ,EAAeC,EADPU,EAAAG,OAER,yGAIR,GAAIb,EAASK,MACT,OAAOL,EAASK,MAAMS,SAAW/C,OAAAO,EAAA,EAAAP,CAAE,6CA1D/CgD,EAAA,8fAnBArD,qGAQMO,mFAoBAiB,2FAwBAa,8FAgBAO;;;;;;;ACpDA,SAAAU,EAA2D1B,EAAkB2B,GAC/E,YAAmBC,IAAZD,GAA0B3B,KAAIA,IAAOA,KAAIA,EAAE2B,QAAOA,GA4BvD,SAAAE,EAOFC,EACAC,EACAC,EACAC,EACAC,GASA,OACIC,QAAS,SAACC,GAAe,OAAAC,EAAuBP,EAAvBM,IACzBE,QAAS,SAACC,EAA0CH,GAChD,OAAAI,EAAuBT,EAAaK,EAAMG,IAC9CxB,MAAO,SAACA,EAAkBqB,GAAe,OAAAK,EAAqBT,EAAWI,EAAhCrB,KAQ3C,SAAA2B,EACFZ,EACAa,EACAC,EACApD,GAEA,OAAO,SAAAqD,GACHA,EAASD,EAAeT,QAAQ3C,IAChCsD,EAAA,EAAMhB,GAAoBa,EAAUnD,GAC/BuD,KAAK,SAACR,GACHM,EAASD,EAAeN,QAAQC,EAAU/C,MAE7CwD,MAAM,SAACC,GACJ,IAAMlC,EAAQkC,EAAWV,SAAWU,EAAWV,SAAStC,KAAQgD,EAChEJ,EAASD,EAAe7B,MAAMA,OA2C9C,SAAAsB,EACIrC,EACAoC,GAEA,OACIpC,KAAIA,EACJoC,KAAIA,GAWZ,SAAAK,EACIzC,EACAoC,EACArB,GAEA,OACIf,KAAIA,EACJoC,KAAIA,EACJT,QAASZ,GAWjB,SAAAyB,EACIxC,EACAoC,EACAT,GAEA,OACI3B,KAAIA,EACJoC,KAAIA,EACJT,QAAOA,iHAlKTD,oGA6BAG,iHAgCAa,gGAyDNL,8GAiBAI,4GAmBAD;;;;;;;ACrKM,SAAAU,EAA6BC,GAC/B,OAAQA,EAASC,MAGf,SAAAC,EAAwBC,EAA6BH,GACvD,OAAIG,EAAMC,GACCD,EAAMC,GAENL,EAAmBC,GAI5B,SAAAK,EAAwBF,EAA6BH,GACvD,GAAIG,EAAMC,GAAI,CAEV,GAAwB,iBAAbD,EAAMC,GAEb,OAAOD,EAAMC,GACV,GAAwB,kBAAbD,EAAMC,IAAoBJ,EACxC,OAAOD,EAAmBC,GAE9B,MAAM,IAAIpD,MAAM,kDAEhB,OAAO,mHAvBTmD,yGAIAG,oGAQAG;;;;;;;kiBCTA,SAAAC,EAAkBC,EAAaC,WACjC,IAAKC,EAAA,EAAIxB,KACL,OAAOuB,EAGX,IAAME,EAAQH,EAAII,MAAM,KACpBC,EAAWH,EAAA,EAAIxB,SAEnB,IAAmB,IAAA4B,EAAA7C,EAAA0C,GAAKI,EAAAD,EAAA3C,QAAA4C,EAAA3C,KAAA2C,EAAAD,EAAA3C,OAAE,CAArB,IAAM6C,EAAID,EAAA1C,MACX,IAAKwC,EAASI,eAAeD,GACzB,OAAOP,EAEXI,EAAWA,EAASG,qGAExB,OAAOH,EASL,SAAAK,EAAkBV,EAAanC,WAC3BsC,EAAQH,EAAII,MAAM,KAClBO,EAAOR,EAAMS,MAEnB,IAAKD,EACD,MAAM,IAAItE,MAAM,4BAA4B2D,EAAG,KAAKW,EAAI,+BAG5D,IAAIN,EAAWH,EAAA,EAAIxB,SAEnB,IAAmB,IAAAmC,EAAApD,EAAA0C,GAAKW,EAAAD,EAAAlD,QAAAmD,EAAAlD,KAAAkD,EAAAD,EAAAlD,OAAE,CAArB,IAAM6C,EAAIM,EAAAjD,MACY,OAAnBwC,EAASG,IAA4C,iBAAnBH,EAASG,KAC3CH,EAASG,OAEbH,EAAWA,EAASG,qGAExBH,EAASM,GAAQ9C,EAWf,SAAAkD,EAAoBC,EAAaC,GAEnC,MAAyB,MAArBD,EAAIE,OAAO,EAAG,GACPF,EAAIE,OAAO,QAGQhD,IAA1BgC,EAAA,EAAIiB,aAAaH,GACVd,EAAA,EAAIiB,aAAaH,QAGE9C,IAAvB+C,EAAmCA,EAAqBD,EAM5D,IAAMI,EAAIL,EASX,SAAAM,EAAuBC,GAWzB,OAAOC,IAAMD,GARTE,WAAY,OAAQ,SACpBC,aAAa,EACbC,kBAAkB,EAClBC,cAAc,EACdC,wBAAwB,EACxBC,oBAAoB,EACpBC,8BAA8B,IAYhC,SAAAC,EAAoBC,GACtB,GAAIA,EAAKC,QAAQ,OAAS,EACtB,OAAOD,EAGX,IAAME,EAAYnC,EAAQ,YAAa,WAUvC,MAR0B,MAAtBiC,EAAKd,OAAO,EAAG,KACfc,EAAOA,EAAKd,OAAO,IAGnBgB,EAAUD,QAAQ,MAAQ,IAC1BD,EAAOA,EAAKG,QAAQ,IAAK,MAGtBD,EAAUC,QAAQ,SAAUH,GAOvC,IAAMI,KAQA,SAAAC,EAAuB3F,EAAc4F,GACvCF,EAAY1F,EAAK6F,eAAiBD,EAShC,SAAAE,EAA0B9F,GAC5B,YAA2CwB,IAApCkE,EAAY1F,EAAK6F,eAStB,SAAAE,EAAuB/F,GACzB,OAAO0F,EAAY1F,EAAK6F,eAUtB,SAAAG,EAA2BC,GACfA,EAAOC,iBAAiB,gBAAgBC,QAAQ,SAAAC,GAC1D,IAAMpG,EAAOoG,EAAKC,aAAa,eAAiB,GAC1CC,EAAYP,EAAa/F,GAE3BsG,EACAC,EAAA9H,EAAS+H,OAAOC,EAAAhI,EAAAiI,cAACJ,EAAS,MAAKF,GAE/B/H,OAAAsI,EAAA,EAAAtI,CAAS,+BAAgC2B,KASrD,IAAM4G,KAOA,SAAAC,EAAoBC,GACjBC,MAAMC,QAAQF,GAGfF,EAAQK,KAAIC,MAAZN,EAAO3H,EAAS6H,IAFhBF,EAAQK,KAAKH,GAWf,SAAAK,IACF,OAAOP,EAOX,IAAMQ,KAOA,SAAAC,EAAkBC,GACpBF,EAAeH,KAAKK,GAQlB,SAAAC,IACF,OAAO,IAAI7H,QAAQ,SAAA8H,GACf,IAAMC,EAAkBL,EAAeM,IAAI,SAAAC,GAAW,OAAAA,MAChDC,EAAO,WACT,OAAOlI,QAAQmI,IAAIJ,GAAiB9E,KAAK6E,IAG7C,GAA4B,YAAxBM,SAASC,WACT,OAAOH,IAEPE,SAASE,iBAAiB,mBAAoBJ,KAapD,SAAAK,EAAoBX,GACtBQ,SAASE,iBAAiB,oBAAqBV,GAM7C,SAAAY,EAAyBC,GAE3B,OAAO9C,EADU,YAAY+C,mBAAmBD,gWAzP9C9E,8FAuBAW,8FA2BAK,gGAgBOK,wFASPC,mGAqBAU,gGAsBAK,kGAQAC,mGAUAG,sGAUAC,mGAWAC,uGAiBAY,8FAOAC,gGAaAM,gGAQAC,qGAOAC,8FASAE,oGAuBAU,gGAOAC;;;;;;;;AC9PN,IAAMG,EAAMC,OAAOD,QAEb,SAAUA,IACZA,EAAIrG,SAGF,gBAAiBqG,IACnBA,EAAIE,gBAGF,iBAAkBF,IACpBA,EAAI5D,yBAGO4D,EAAfhH,EAAA,oEAdMgH;;;;;;;;;uKCHFG,GAAU,EACVC,GAAiB,EACfC,KAMA,SAAAC,EAA0B3I,EAAc4I,GACtCJ,EACAnK,OAAAwK,EAAA,EAAAxK,CAAS,kEAAmE2B,GAE5E0I,EAAS1I,GAAQ4I,EAInB,SAAAE,IAOF,OANAN,GAAU,EAELC,GACDpK,OAAAwK,EAAA,EAAAxK,CAAS,2CAGb0K,KACOL,GApBXrK,OAAA2K,EAAA,EAAA3K,CAAQ,WACJoK,GAAiB,IA0BrB,IAAMQ,GACFC,SAAUP,EACVG,YAAWA,WAGAG,2KApCXT,uGACAC,8GACEC,wGAMAC,+GAQAG,2GAeAG;;;;;ICvBFE,uXAVEC,KACAC,EAAiBf,OAAOgB,gBAExBC,GAAcC,EAAA,GAGdC,EAAmBnB,OAAOoB,sCAAwCC,EAAA,EAClEC,EAAWH,EAAiBE,EAAA,EAAezC,WAAA,EAAAjI,EAAIsK,KAKvC,SAAAM,IACV,QAAcrI,IAAV2H,EAAqB,CAErB,IAAMP,EAAUvK,OAAAsL,EAAA,EAAAtL,CAAgBA,OAAAyL,EAAA,EAAAzL,IAChC8K,EAAQ9K,OAAAsL,EAAA,EAAAtL,CAAYuK,EAASQ,EAAcQ,GAG3CP,EAAelD,QAAQgD,EAAM1G,UAGjC,OAAO0G,mQAtBLC,qGACAC,uGAEAE,mGAGAE,yGACAG,iGAGFT,8FAEUU;;;;;;;;kiBCXVE,GAAS,EAQP,SAAAC,EAAgBC,GAKlB,YAJiBzI,IAAbyI,IACAF,EAASE,GAGNF,EAsBL,SAAAG,EAAsCC,GACxC,IAAKpD,MAAMC,QAAQmD,GACf,MAAM,IAAIxK,MAAM,mDAGpB,OAAO,IAAID,QAAQ,SAAC8H,EAAS4C,GACzB,IAAIC,EAAQ,EACRC,MAcJH,EAAmBA,EAAiBI,OAAO,WAAM,OAAA7K,QAAA8H,aAEhCgD,OAdjB,SAA2BC,EAAiBC,GACxC,OAAOD,EACF9H,KAAK,SAAAzC,GAKF,OAJgB,GAAZmK,MACAC,EAAUA,EAAQC,OAAOrK,IAGtBwK,EAAexK,EAAQoK,EAASD,KAE1CzH,MAAM,SAAA+H,GAAO,OAAAP,EAAAO,MAKqBjL,QAAQ8H,SAAQ,IAAQ7E,KAAK,WACpE6E,EAAQ8C,OAYd,SAAAM,QAAc,IAAAzJ,KAAA0J,EAAA,EAAAA,EAAAC,UAAA1M,OAAAyM,IAAA1J,EAAA0J,GAAAC,UAAAD,GACZd,GAEAgB,QAAQH,IAAG1D,MAAX6D,QAAO9L,EAAQkC,IASjB,SAAA6J,QAAmB,IAAA7J,KAAA0J,EAAA,EAAAA,EAAAC,UAAA1M,OAAAyM,IAAA1J,EAAA0J,GAAAC,UAAAD,GAErBE,QAAQpK,MAAKuG,MAAb6D,QAAO9L,EAAUkC,IAQf,SAAA8J,QAAqB,IAAA9J,KAAA0J,EAAA,EAAAA,EAAAC,UAAA1M,OAAAyM,IAAA1J,EAAA0J,GAAAC,UAAAD,GAEvBE,QAAQG,KAAIhE,MAAZ6D,QAAO9L,EAASkC,IAWd,SAAAgK,EAAqB7G,GAKvB,OAAOA,EAAIZ,MAAM,IAAI8G,OAJrB,SAAoBY,EAAUC,GAE1B,OAAQD,GAAY,GAAKA,EAAWC,EAAQC,WAAW,IAEnB,GAWtC,SAAAC,EAA6BC,EAAiBC,GAChD,IAAMC,EAAiBF,EAAQG,UAAU,OAAOlG,QAAQ,mBAAoB,IACtEmG,EAAsBH,EAAUE,UAAU,OAAOlG,QAAQ,mBAAoB,IAG/EoG,EAAiB,EACrB,OAHyBH,EAAehI,MAAM,IAAIoI,OAAO,IAAIF,EAAmB,IAAK,MAG7DlE,IAAI,SAAAqE,GACxB,IAAMC,EAAQH,EAEd,OADAA,GAAkBE,EAAM3N,OACjBoN,EAAQS,UAAUD,EAAOH,KAQlC,SAAAK,EAA4BC,EAAaxI,eAC3C,IAAwB,IAAAyI,EAAArL,EAAA4C,GAAQ0I,EAAAD,EAAAnL,QAAAoL,EAAAnL,KAAAmL,EAAAD,EAAAnL,OAAE,CAC9B,GAAIkL,aADYE,EAAAlL,MAEZ,OAAO,oGAIf,OAAO,EAGL,SAAAmL,EAA2BC,EAAmBC,GAChD,IAAMC,EAAU,SAAChO,EAAGiO,GAChB,OAAOA,EAAID,EAAQC,EAAGjO,EAAIiO,GAAKjO,GAE7BkO,EAAMF,EAAQF,EAAWC,GAK/B,OACID,UAJJA,GAAwBI,EAKpBH,YAJJA,GAA4BG,EAKxBC,UAAWJ,EAAc,IAAMD,GAiBjC,SAAAM,EACFC,EACAC,EACAC,QADA,IAAAD,OAAA,QACA,IAAAC,OAAA,GAGA,IAAMC,EAAQH,EAAQpJ,MAAM,MACtBwJ,EAAWD,EAAMA,EAAM7O,OAAS,GAUtC,SAAA+O,EAA+BC,GAC3B,IAAIC,EACA,2CAUJ,OALID,IACAC,GAAY,OAGhBA,GAAY,IAIhB,IAAIC,EACA,OAIAH,GAAsB,GACtB,UAIAA,EAAsBH,GACtB,kBAKAD,IACAO,EAAW,YAAcA,GAE7B,IACMC,EADQ,IAAIzB,OAAOwB,EAAU,MACf1F,KAAKsF,GACzB,OAAIK,GAEIC,SAAUD,EAAM,GAChBA,MAAOA,EAAM,IAAMA,EAAM,IAK1B,KAIX,IAAME,EAAc,2BAad,SAAAC,EAAsBC,GACxB,QAAIF,EAAYG,KAAKD,EAAK/N,QAI1BgL,EAAI,gCAAiC+C,EAAK3N,OACnC,GAGL,SAAA6N,EAAgCvJ,GAClC,OAAOA,EAAIwJ,OAAO,GAAGC,cAAgBzJ,EAAI0J,MAAM,GAW7C,SAAAC,EACFC,EACA5K,WAIM6K,SACN,IAAmB,IAAAC,EAAArN,EAAAmN,GAAKG,EAAAD,EAAAnN,QAAAoN,EAAAnN,KAAAmN,EAAAD,EAAAnN,OAAE,CAArB,IAAMqN,EAAID,EAAAlN,MACPmC,KAAOgL,IACDA,EAAKhL,KAAQ6K,IACfA,EAAOG,EAAKhL,QAEhB6K,EAAOG,EAAKhL,IAAM2D,KAAKqH,sGAG/B,OAAOH,EAGX,IAAMI,EAAsB,2CAatB,SAAAC,EAAsBC,GACxB,OAAIA,EAAIlB,MAAMgB,GACHE,EAEA,UAAYA,+UAxTvB1E,wFAQEC,uFA2BAE,6GAoCAU,qFAYAI,0FAUAC,4FAaAE,4FAgBAI,oGAiBAW,mGAUAI,kGA6BAO,gGAiEAY,6FAaAC,6FASAG,uGAYAI,iGAkBAM,qGAaAC;;;;;AC3TN,IAAkBE,+EAAlB,SAAkBA,GACdA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,cAJJ,CAAkBA;;;;;;;;ACOX,IAAMC,EAAc,yBAkBrBC,KAGAC,KAOA,SAAAC,IACF,OAAOzQ,OAAO0Q,KAAKH,GAMjB,SAAAI,EAAgCpP,EAAcqP,GAChDL,EAAehP,GAAQqP,EAMrB,SAAAC,EAAiCtP,EAAcgG,GACjDiJ,EAAgBjP,GAAQgG,EAMtB,SAAAuJ,EAAsBC,EAA0BvP,EAAkBwP,GACpE,YADoE,IAAAA,OAAA,GAC7D,IAAI3P,QAAQ,SAAC8H,EAAS4C,GACzB,IAAKvK,EAAKD,KACN,MAAM,IAAID,MAAM,oCAGF,SAAdE,EAAKD,OACLwP,EAASE,KAAKC,UAAUC,IAAI,aAC5BJ,EAASK,QAAQF,UAAUC,IAAI,qBAC/BJ,EAASK,QAAQF,UAAUC,IAAI,sBAGjB,UAAd3P,EAAKD,OACLwP,EAASE,KAAKC,UAAUC,IAAI,aAC5BJ,EAASK,QAAQF,UAAUC,IAAI,qBAC/BJ,EAASK,QAAQF,UAAUC,IAAI,uBAGnC,IAAMP,EAAWpP,EAAKD,MAAQgP,EAAe/O,EAAKD,MAC5C0G,EAAYzG,EAAKD,MAAQiP,EAAgBhP,EAAKD,MAEpD,GAAIqP,EACA,OAAOA,EAASG,EAAUvP,EAAMwP,GAC7B,IAAI/I,EAMP,MAAM,IAAI3G,MAAM,kDAAoDE,EAAKD,MALzE2G,EAAA9H,EAAS+H,OACLC,EAAAhI,EAAAiI,cAACJ,GAAUzG,KAAMA,EAAqBwP,SAAUA,EAAUK,iBAAkBlI,IAC5E4H,EAASK,4EA3EZd,6FAkBPC,gGAGAC,iGAOAC,qGAOAE,uGAOAE,wGAOAC;;;;;;;;;ACtCN,IAAkBQ,gDAAlB,SAAkBA,GACdA,EAAA,8BACAA,EAAA,qBAFJ,CAAkBA;;;;;;;gVCHZ,SAAAC,EAAqBtL,GACvB,IAAMuL,EAAM/H,SAASpB,cAAc,OAEnC,OADAmJ,EAAIC,YAAYhI,SAASiI,eAAezL,IACjCuL,EAAIG,UAWT,SAAAC,EAAuBC,GACzB,IAAML,EAAM/H,SAASpB,cAAc,OACnCmJ,EAAIG,UAAYE,EAChB,IAAMC,EAAQN,EAAIO,WAAW,GAC7B,OAAOD,GAASA,EAAME,UAAYF,EAAME,UAAY,GAQlD,SAAAC,EAAsBC,GACxBA,EAAQhB,UAAUC,IAAI,cACtBe,EAAQC,aAAa,cAAe,QAQlC,SAAAC,EAAwBF,GAC1BA,EAAQhB,UAAUmB,OAAO,cACzBH,EAAQI,gBAAgB,eAUtB,SAAAC,EAA2BL,GAC7B,SAAUA,EAAQM,aAAeN,EAAQO,cAAgBP,EAAQQ,iBAAiB3S,QAUhF,SAAA4S,EAAsBC,GACxB,KAAMA,aAAuBC,iBACzB,SAGJ,IACMhR,KAMN,OAPa,IAAIJ,SAASmR,GAGrB9K,QAAQ,SAAC7C,EAAKnC,GACfjB,EAAOoD,GAAOnC,IAGXjB,EAGX,IAAMiR,KAYA,SAAAC,EACFC,EACAC,EACAhK,EACAiK,GAEA,IAEIC,EAFAC,EAAcJ,EAAYC,EAAiBhK,EAASoK,WAIxD,GAA6B,iBAAlBH,EAA4B,CAGnC,KAFAC,EAAQ1J,SAAS6J,cAAcJ,IAG3B,MAAM,IAAI5R,MAAM,6DAA6D4R,GAE7EE,GAAeF,OAGnBC,EADOD,aAAyBK,YACxBL,EAEAzJ,SAGZ,IAAM+J,EAAYhJ,EAAA,EAAmB4I,GAAaC,WAElD,IAAKrT,OAAO0Q,KAAKoC,GAAyBW,SAASD,GAAY,CAC3D,IAAME,EAAkB,SAAAC,GAEpB,IAAMzE,EAAQ+D,EAAiBU,EAAMC,OAAOC,QAAQZ,GAAkBU,EAAMC,OAE5E,GAAI1E,EAEA,OAAOjG,EAAS6K,KAAK5E,EAAOyE,EAAOzE,IAI1BiE,EAAMxJ,iBAAiBqJ,EAAWU,GAMnD,OALAZ,EAAwBU,IACpBL,MAAKA,EACLH,UAASA,EACTU,gBAAeA,GAEZF,GAST,SAAAO,EAA+BP,GAC3B,IAAA1R,EAAAgR,EAAAU,GAAEL,EAAArR,EAAAqR,MAAOH,EAAAlR,EAAAkR,UAAWU,EAAA5R,EAAA4R,gBAC1BP,EAAMa,oBAAoBhB,EAAWU,UAC9BZ,EAAwBU,GAG7B,SAAAS,IACFjU,OAAO0Q,KAAKoC,GAAyBhL,QAAQ,SAAA7C,GACzC8O,EAAqB9O,KAUvB,SAAAiP,EAA0BhC,EAAkBiC,GAC9C,IAAMvI,EAA+C,UAApCsG,EAAQlK,aAAamM,GACtCjC,EAAQC,aAAagC,EAAWvI,GAGpC,IAAMwI,EAAU,IAAIC,QASd,SAAAC,EAAkBpC,EAAkBjN,EAAanC,GACnD,IAAMyR,EAAeH,EAAQI,IAAItC,GAAWkC,EAAQK,IAAIvC,MACxDqC,EAAatP,GAAOnC,EAEpBsR,EAAQM,IAAIxC,EAASqC,GAUnB,SAAAI,EAAkBzC,EAAkBjN,EAAaC,GACnD,GAAIkP,EAAQI,IAAItC,IAAYkC,EAAQK,IAAIvC,GAASjN,GAC7C,OAAOmP,EAAQK,IAAIvC,GAASjN,GAGhC,IAAM2P,EAAkB,QAAQ3P,EAEhC,OAAIiN,EAAQ2C,aAAaD,GACd1C,EAAQlK,aAAa4M,GAGzB1P,EAWL,SAAA4P,EAA4BC,GAK9B,GAJiC,iBAAtBA,IACPA,EAAoBtL,SAAS6J,cAAcyB,MAGzCA,aAA6BxB,aAC/B,MAAM,IAAIjS,MAAM,sCAAsCyT,EAAiB,KAG3E,OAAOA,EAIX,IAAMC,EAAW,KAEbC,EAAsC,KAEpC,SAAAC,IACF,GAA4B,OAAxBD,EACA,OAAOA,EAKP,IAAME,EAAS1L,SAASpB,cAAc,UACtC,GAAI8M,EAAOC,YAAcD,EAAOC,WAAW,MAAO,CAC9C,IACMC,EAAS,IADIpL,OAAOqL,kBAAoB,GAExCC,EAAMJ,EAAOC,WAAW,MAC9BG,EAAKC,UAAY,OACjBD,EAAKE,aAAe,MACpBF,EAAKG,KAAO,aACZH,EAAKI,SAASX,EAAU,EAAG,GAC3BC,EAA0E,IAApDM,EAAKK,aAAaP,EAAQA,EAAQ,EAAG,GAAG7T,KAAK,QAEnEyT,GAAsB,EAM9B,OAAOA,EAGX,IAAMY,GACFC,UAAW,gBACXC,KAAM,SAQJ,SAAAC,EAAuCC,GACzC,OAAIf,IACOe,EAEJC,EAAA9V,EAAQ+V,MAAMF,EAAcJ,GAIvC,IAAMO,EAA4D,IAAI/B,QAChEgC,EAAqC,IAAIC,IAKzC,SAAAC,EAAuBC,GACzB,OAAO,IAAInV,QAAQ,SAAC8H,EAAS4C,GACzB,IAAM0K,EAA2ChN,SAAS6J,cAAc,eAAekD,EAAS,MAIhG,GAHIH,EAAe7B,IAAIgC,IACnBzK,EAAOsK,EAAe5B,IAAI+B,IAE1BC,EACA,GAAIL,EAAmB5B,IAAIiC,GAAiB,CAExC,IAAMC,EAAYN,EAAmB3B,IAAIgC,GACzCC,GAAaA,EAAU9N,KAAKO,QAG5BA,QAED,CAEH,IAAMwN,EAAOlN,SAASmN,qBAAqB,QAAQ,GAC7CC,EAASpN,SAASpB,cAAc,UACtCwO,EAAOtV,KAAO,kBACdsV,EAAOC,IAAMN,EACbK,EAAOE,QAAU,SAACpD,GACd,IAAMrR,EAAQ,IAAIhB,MAAM,0CACxB+U,EAAe3B,IAAI8B,EAAWlU,GAC9ByJ,EAAOzJ,IAGX,IAAM0U,EAAUC,WAAW,WACvB,IAAM3U,EAAQ,IAAIhB,MAAM,yBAAyBkV,EAAS,mBAC1DH,EAAe3B,IAAI8B,EAAWlU,GAC9ByJ,EAAOzJ,IACR,KAEH8T,EAAmB1B,IAAImC,GAAS1N,IAEhC0N,EAAOK,OAAS,SAAAvD,GACZwD,aAAaH,GACb,IAAMN,EAAYN,EAAmB3B,IAAIoC,GACzCH,GAAaA,EAAU5O,QAAQ,SAAAmB,GAAY,OAAAA,EAAA0K,KAC3CyC,EAAmBgB,OAAOP,IAG9BF,EAAKlF,YAAYoF,MA4BvB,SAAAQ,EAAiCC,GACnC,IAAMC,GACFtG,KAAMxH,SAAS+N,gBACfC,oBACAC,iBACAC,SAAS,EACTC,YAAanO,SAASoO,cACtBC,cAAc,GAIZC,EAAerN,KACd6M,EACAD,GAGP,KAAMS,EAAaH,uBAAuBrE,aAEtC,OADAvT,OAAAwK,EAAA,EAAAxK,CAAS,oEAAqE+X,EAAaH,aACpF,KAGX,IAAMI,EAAYC,IAASF,EAAa9G,MAAMiH,OAAO,SAACC,WAMlD,KAFIJ,EAAaH,cAAgBO,GAAmBA,EAAgBC,SAASL,EAAaH,cAErD,CACjC,GAAIG,EAAaN,iBAAiBhE,SAAS0E,GACvC,OAAO,MAEX,IAA2B,IAAAE,EAAA3V,EAAAqV,EAAaL,eAAaY,EAAAD,EAAAzV,QAAA0V,EAAAzV,KAAAyV,EAAAD,EAAAzV,OAAE,CAAlD,IAAM2V,EAAYD,EAAAxV,MACnB,GAAIyV,IAAiBJ,GAAmBI,EAAaH,SAASD,GAC1D,OAAO,qGAKnB,OAAO,IAGLK,EAAkBR,EAAU9Q,QAAQ6Q,EAAaH,aAEvD,GAAIY,EAAkB,EAClB,OAAO,KAGX,IAAIC,EAAcV,EAAaJ,QAAUa,EAAkB,EAAIA,EAAkB,EAWjF,OATIT,EAAaD,eAETW,EAAc,EACdA,EAAcT,EAAUjY,OAAS,EAC1B0Y,GAAeT,EAAUjY,SAChC0Y,EAAc,IAIfT,EAAUS,IAAgB,KAGrC,SAAAC,EAAgCC,EAA0BC,GACtD,OAAOD,GAAYC,IAAmBD,EAASP,SAASQ,IAA8BD,IAAaC,GASvG,SAAAC,EAA8BF,EAA0BhF,EAAmB1K,GACvEgO,WAAW,mBACD6B,GAEFrP,SAASoO,cACTlE,EAAMoF,cACLpF,EAAcqF,wBAGfnB,EAAgB,SACpB,IAAqB,IAAAoB,EAAAvW,EAAAoW,GAAeI,EAAAD,EAAArW,QAAAsW,EAAArW,KAAAqW,EAAAD,EAAArW,OAAE,CAAjC,IAAMgR,EAAMsF,EAAApW,MACb,GAAI8Q,GAAUA,IAAWnK,SAAS0P,KAAM,CACpCtB,EAAgBjE,EAChB,yGAIR,GAAsB,OAAlBiE,EAAwB,CACxB,IAAMuB,EACFT,GAAYd,IAAkBA,IAAkBc,GAAYA,EAASP,SAASP,IAGlF5O,IAAWmQ,KAEhB,GAcD,SAAAC,EAA8BV,EAAmB1P,GACnD0P,EAAShP,iBACL,WACA,SAACgK,GACGkF,EAAqBF,EAAUhF,EAAO,SAAAyF,IACjCA,GAAYnQ,GAAS,OAG9B,GAGJ0P,EAAShP,iBACL,UACA,SAACgK,GACGkF,EAAqBF,EAAUhF,EAAO,SAAAyF,GAClCA,GAAYnQ,GAAS,OAG7B,GAGJQ,SAASE,iBAAiB,QAAS,SAAAgK,GAC/B,IAAM2F,EAAoB3F,EAAMC,OACb8E,EAAuBC,EAAUW,IAEhDrQ,GAAS,KAQrB,SAAAsQ,EAAiCrH,EAAS1Q,GACtC,IAAMgY,EAAYhY,EAAKiY,cAAgBjY,EAAKkY,iBACtCC,EAA0C,IAA1BnY,EAAKkY,iBACrBE,EAAgB1H,EAAQO,aACxBoH,EACyB,UAA3B3H,EAAQ4H,MAAMC,UAAwB7H,EAAQ8H,UAAYJ,GAAiBpY,EAAKkY,iBAC9EO,EAAmC,KAAtB/H,EAAQ4H,MAAMI,KAAaC,SAASjI,EAAQ4H,MAAMI,IAAK,IAE1EhI,EAAQhB,UAAUkJ,OAAO,kBAAmBZ,GAC5CtH,EAAQhB,UAAUkJ,OAAO,iBAAkBZ,GAC3CtH,EAAQhB,UAAUkJ,OAAO,UAAWT,GAEhCH,GACAtH,EAAQ4H,MAAMC,SAAW,GACrBF,EACA3H,EAAQ4H,MAAMI,IAAS1Y,EAAKkY,iBAAmBE,EAAa,KAEvDK,IACD/H,EAAQ4H,MAAMI,IAAS1Y,EAAKkY,iBAAgB,OAKhDlY,EAAKkY,kBAAoBO,IACzB/H,EAAQ4H,MAAMI,IAAM,GACpBhI,EAAQ4H,MAAMC,SAAW,SAQ/B,SAAAM,IACF,IAAMC,EAAS7Q,SAAS6J,cAAc,iBACtC,GAAe,OAAXgH,EAAiB,CACjB,IAAIC,EAAmBC,KAAKC,IAAIxQ,OAAOyQ,QAAS,GAC5CC,GAAiB,EAErBpB,EAAwBe,GACpBZ,iBAAgBa,EAChBd,cAAakB,IAGjB1Q,OAAON,iBAAiB,SAAU,SAAAiR,GAC9BC,IACI,WACI5Q,OAAO6Q,sBAAsB,SAAAtZ,GACzBmZ,EAAgBJ,EAChBA,EAAmBC,KAAKC,IAAIxQ,OAAOyQ,QAAS,GAC5CnB,EAAwBe,GACpBZ,iBAAgBa,EAChBd,cAAakB,OAIzB,KAEII,SAAS,GAbjBF,UAkBJrQ,EAAA,EAAY,0BASd,SAAAwQ,EAA0BrH,GAC5B,GAAIA,EAAMsH,cAAgBtH,EAAMsH,aAAaC,OAASvH,EAAMsH,aAAaC,MAAMnb,OAM3E,OALA4T,EAAMwH,iBACQzS,MAAM0S,KAAKzH,EAAMsH,aAAaC,OAGrB,GAUzB,SAAAG,EAAyB1H,GAC3B,GAAIA,EAAM2H,eAAiB3H,EAAM2H,cAAcC,OAAS5H,EAAM2H,cAAcC,MAAMxb,OAAQ,CACtF,IAAMmb,EAAQxS,MAAM0S,KAAKzH,EAAM2H,cAAcC,OACxClS,IAAI,SAAC4G,GAAc,OAACA,EAAKuL,UAAYvL,EAAKuL,YAAvB,OACnBtD,OAAOuD,SAEZ,GAAIP,EAAMnb,OAAS,EAIf,OAHA4T,EAAMwH,iBAEWD,EAAM,IAqB7B,SAAAQ,EACFxJ,EACAyJ,QAAA,IAAAA,MAAA,GAKA,IAAMC,EAAS1J,EAAQ2J,wBAAwBD,OACzC9Z,EAAAmI,OAAA6R,iBAAA5J,GAAE6J,EAAAja,EAAAia,UAAWC,EAAAla,EAAAka,aAEfC,EAAYF,EAAY5B,SAAS4B,EAAW,IAAM,EAEtDE,EAAYzB,KAAKC,IAAIwB,EAAYN,EAAsB,GAEvD,IAAMO,EAAeF,EAAe7B,SAAS6B,EAAc,IAAM,EAGjE,OACIJ,OAHgBA,EAASK,EAAYC,EAIrCC,aAAcD,gPA/mBhB3K,wFAcAK,0FAYAK,yFAUAG,2FAYAG,8FAWAI,yFAeAG,qGAYAC,2FAoDAgB,kGAMAE,sGAYAC,6FAKAE,qFASAE,qFAcAK,qFAsBAG,+FAaAE,sFAEFC,iGAEEC,8FA2BAW,0FAUAG,0GAQAI,gGACAC,4FAKAE,0FAsEAc,oGA6DNqB,oGAUAG,kGAsCMQ,iGAiCNE,qGAiCMc,0FAuCAW,6FAgBAK,4FA8BAK","file":"applications/dashboard/js/webpack/library-forum.min.js","sourcesContent":["/**\n * Entrypoint for the APIv2 calls. Prepulates an axios instance with some config settings.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { formatUrl, t } from \"@dashboard/application\";\nimport { isFileImage, indexArrayByKey } from \"@dashboard/utility\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { IEmbedData } from \"@dashboard/embeds\";\nimport { IFieldError, LoadStatus, ILoadable } from \"@dashboard/@types/api\";\n\nfunction fieldErrorTransformer(responseData) {\n    if (responseData.status >= 400 && responseData.errors && responseData.errors.length > 0) {\n        responseData.errors = indexArrayByKey(responseData.errors, \"field\");\n    }\n\n    return responseData;\n}\n\nconst api = axios.create({\n    baseURL: formatUrl(\"/api/v2/\"),\n    headers: {\n        common: {\n            \"X-Requested-With\": \"vanilla\",\n        },\n    },\n    transformResponse: [...axios.defaults.transformResponse, fieldErrorTransformer],\n    paramsSerializer: params => qs.stringify(params, { indices: false }),\n});\n\nexport default api;\n\n/**\n * Upload an image using Vanilla's API v2.\n *\n * @param file - The file to upload.\n *\n * @throws If the file given is not an image. You must check yourself first.\n */\nexport async function uploadImage(image: File): Promise<IEmbedData> {\n    if (!isFileImage(image)) {\n        throw new Error(\n            `Unable to upload an image of type ${image.type}. Supported formats included .gif, .jpg and .png`,\n        );\n    }\n\n    const data = new FormData();\n    data.append(\"file\", image, image.name);\n    data.append(\"type\", \"image\");\n\n    const result = await api.post(\"/media\", data);\n    result.data.type = \"image\";\n    return result.data;\n}\n\n/**\n * Extract a field specific error from an ILoadable if applicable.\n *\n * @param loadable - The loadable to extract from.\n * @param field - The field to extract.\n *\n * @returns an array of IFieldErrors if found or undefined.\n */\nexport function getFieldErrors(loadable: ILoadable<any>, field: string): IFieldError[] | undefined {\n    if (loadable.status === LoadStatus.ERROR || loadable.status === LoadStatus.LOADING) {\n        if (loadable.error && loadable.error.errors && loadable.error.errors[field]) {\n            return loadable.error.errors[field];\n        }\n    }\n}\n\n/**\n * Extract a global error message out of an ILoadable if applicable.\n *\n * @param loadable - The loadable to extract from.\n * @param validFields - Field to check for overriding fields errors from. A global error only shows if there are no valid field errors.\n *\n * @returns A global error message or an undefined.\n */\nexport function getGlobalErrorMessage(loadable: ILoadable<any>, validFields: string[]): string | undefined {\n    if (loadable.status === LoadStatus.ERROR || loadable.status === LoadStatus.LOADING) {\n        for (const field of validFields) {\n            if (getFieldErrors(loadable, field)) {\n                return;\n            }\n        }\n\n        if (loadable.error) {\n            return loadable.error.message || t(\"An error has occurred, please try again.\");\n        }\n    }\n}\n","/**\n * State utility functions.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IApiResponse, IApiError } from \"@dashboard/@types/api\";\nimport apiv2 from \"@dashboard/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\n\n// Utility to pull a group of action types out of an actions object\nexport type ActionsUnion<A extends IActionCreatorsMapObject> = ReturnType<A[keyof A]>;\n\n// Utility to create a generic action action.\n\n/**\n * Utility to create an action with our a without a payload of a given type.\n * The action generated can have its type narrowed in a reducer switch statement if the type T matches.\n *\n * @see ActionsUnion\n *\n * @param type The action type.\n * @param payload The payload data.\n */\nexport function createAction<ActionType extends string>(type: ActionType): IAction<ActionType>;\nexport function createAction<ActionType extends string, Payload>(\n    type: ActionType,\n    payload: Payload,\n): IActionWithPayload<ActionType, Payload>;\nexport function createAction<ActionType extends string, Payload>(type: ActionType, payload?: Payload) {\n    return payload === undefined ? { type } : { type, payload };\n}\n\n/**\n * Create request, response, and error action creators.\n *\n * The dummy types are needed because typescript currently requires all generic types to be specified or all to be inferred. They cannot currently be mixed.\n *\n * @see https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n *\n * @param requestType The string for the request type. This should be a unique constant.\n * @param successType The string for the success type. This should be a unique constant.\n * @param errorType The string for the error type. This should be a unique constant.\n * @param dummyResponseType A placeholder to infer the type of the response. This isn't used for anything other than inferring a type.\n * @param dummyMetaType A placeholder to infer the type of the meta. This isn't used for anything other than inferringa  type.\n *\n * @example\n *\n * ```\n * const GET_THING_REQUEST = \"GET_THING_REQUEST\";\n * const GET_THING_SUCCESS = \"GET_THING_SUCCESS\";\n * const GET_THING_ERROR = \"GET_THING_ERROR\";\n * interface IThing { thing: string }\n * interface IThingOptions { page?: number }\n *\n * generateApiActionCreators(GET_THING_REQUEST, GET_THING_SUCCESS, GET_THING_ERROR, {} as IThing, {} as IThingOptions);\n * ```\n */\nexport function generateApiActionCreators<\n    RequestActionType extends string,\n    SuccessActionType extends string,\n    ErrorActionType extends string,\n    ResponseDataType,\n    Meta = any\n>(\n    requestType: RequestActionType,\n    successType: SuccessActionType,\n    errorType: ErrorActionType,\n    dummyResponseType?: ResponseDataType,\n    dummyMetaType?: Meta,\n): {\n    request: (meta?: Meta) => IApiAction<RequestActionType, Meta>;\n    success: (\n        payload: IApiResponse<ResponseDataType>,\n        meta?: Meta,\n    ) => IApiSuccessAction<SuccessActionType, Meta, ResponseDataType>;\n    error: (error: IApiError, meta?: Meta) => IApiErrorAction<ErrorActionType, Meta>;\n} {\n    return {\n        request: (meta: Meta) => createApiRequestAction(requestType, meta),\n        success: (response: IApiResponse<ResponseDataType>, meta: Meta) =>\n            createApiSuccessAction(successType, meta, response),\n        error: (error: IApiError, meta: Meta) => createApiErrorAction(errorType, meta, error),\n    };\n}\n\ntype GeneratedActionCreators = ReturnType<typeof generateApiActionCreators>;\n\n// Thunk types\ntype RequestType = \"get\" | \"post\" | \"put\" | \"delete\" | \"patch\";\nexport function apiThunk(\n    requestType: RequestType,\n    endpoint: string,\n    actionCreators: GeneratedActionCreators,\n    params: any,\n) {\n    return dispatch => {\n        dispatch(actionCreators.request(params));\n        apiv2[requestType as any](endpoint, params)\n            .then((response: AxiosResponse) => {\n                dispatch(actionCreators.success(response, params));\n            })\n            .catch((axiosError: AxiosError) => {\n                const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n                dispatch(actionCreators.error(error));\n            });\n    };\n}\n\n// Action interfaces\nexport interface IAction<T extends string> {\n    type: T;\n}\n\nexport interface IActionWithPayload<T extends string, P> extends IAction<T> {\n    payload: P;\n}\n\nexport interface IActionCreator<T extends string> {\n    (): IAction<T>;\n}\n\ntype FunctionType = (...args: any[]) => any;\ninterface IActionCreatorsMapObject {\n    [actionCreator: string]: FunctionType;\n}\n\n// API Action interfaces\ninterface IApiAction<ActionType, Meta> {\n    type: ActionType;\n    meta: Meta;\n}\n\ninterface IApiErrorAction<ActionType, Meta> extends IApiAction<ActionType, Meta> {\n    payload: IApiError;\n}\n\ninterface IApiSuccessAction<ActionType, Meta, ResponseDataType> extends IApiAction<ActionType, Meta> {\n    payload: IApiResponse<ResponseDataType>;\n}\n\n/**\n * Create an API request action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n */\nfunction createApiRequestAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n): IApiAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n    };\n}\n\n/**\n * Create an API error action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param error An API error.\n */\nfunction createApiErrorAction<ActionType extends string, Meta>(\n    type: ActionType,\n    meta: Meta,\n    error: IApiError,\n): IApiErrorAction<ActionType, Meta> {\n    return {\n        type,\n        meta,\n        payload: error,\n    };\n}\n\n/**\n * Create an API success action. For use in createApiActions().\n *\n * @param type The action's type.\n * @param meta The type of the meta for the action.\n * @param payload The shape of the IApiResponse data.\n */\nfunction createApiSuccessAction<ActionType extends string, Meta, ResponseDataType>(\n    type: ActionType,\n    meta: Meta,\n    payload: IApiResponse<ResponseDataType>,\n): IApiSuccessAction<ActionType, Meta, ResponseDataType> {\n    return {\n        type,\n        meta,\n        payload,\n    };\n}\n","/**\n * Utilities and types for handling unique and/or required HTML ids in react components.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport uniqueId from \"lodash/uniqueId\";\n\n// Optional ID\nexport interface IOptionalComponentID {\n    id?: string | boolean;\n}\n\n// Requires ID\nexport interface IRequiredComponentID {\n    id: string;\n}\n\nexport function uniqueIDFromPrefix(suffix: string) {\n    return (suffix + uniqueId()) as string;\n}\n\nexport function getRequiredID(props: IRequiredComponentID, suffix: string): string {\n    if (props.id) {\n        return props.id;\n    } else {\n        return uniqueIDFromPrefix(suffix);\n    }\n}\n\nexport function getOptionalID(props: IOptionalComponentID, suffix?: string): string | null {\n    if (props.id) {\n        // we want an ID\n        if (typeof props.id === \"string\") {\n            // Handled by parent component\n            return props.id;\n        } else if (typeof props.id === \"boolean\" && suffix) {\n            return uniqueIDFromPrefix(suffix);\n        }\n        throw new Error(\"To generate and ID, you must provide a suffix.\");\n    } else {\n        return null;\n    }\n}\n","/**\n * Application functions for interop between Components in different packages.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React, { ComponentClass } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RouteProps } from \"react-router-dom\";\nimport gdn from \"@dashboard/gdn\";\nimport { PromiseOrNormalCallback, logError } from \"@dashboard/utility\";\nimport isUrl from \"validator/lib/isURL\";\n\n/**\n * Get a piece of metadata passed from the server.\n *\n * @param key - The key to lookup.\n * @param defaultValue - A fallback value in case the key cannot be found.\n *\n * @returns Returns a meta value or the default value.\n */\nexport function getMeta(key: string, defaultValue?: any) {\n    if (!gdn.meta) {\n        return defaultValue;\n    }\n\n    const parts = key.split(\".\");\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (!haystack.hasOwnProperty(part)) {\n            return defaultValue;\n        }\n        haystack = haystack[part];\n    }\n    return haystack;\n}\n\n/**\n * Set a piece of metadata. This will override what was passed from the server.\n *\n * @param key - The key to store under.\n * @param value - The value to set.\n */\nexport function setMeta(key: string, value: any) {\n    const parts = key.split(\".\");\n    const last = parts.pop();\n\n    if (!last) {\n        throw new Error(`Unable to set meta value ${key}. ${last} is not a valid object key.`);\n    }\n\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (haystack[part] === null || typeof haystack[part] !== \"object\") {\n            haystack[part] = {};\n        }\n        haystack = haystack[part];\n    }\n    haystack[last] = value;\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (gdn.translations[str] !== undefined) {\n        return gdn.translations[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n\n/**\n * Determine if a string is an allowed URL.\n *\n * In the future this may be extended to check if we want to whitelist/blacklist various URLs.\n *\n * @param input - The string to check.\n */\nexport function isAllowedUrl(input: string): boolean {\n    // Options https://github.com/chriso/validator.js#validators\n    const options = {\n        protocols: [\"http\", \"https\"],\n        require_tld: true,\n        require_protocol: true,\n        require_host: true,\n        require_valid_protocol: true,\n        allow_trailing_dot: false,\n        allow_protocol_relative_urls: false,\n    };\n    return isUrl(input, options);\n}\n\n/**\n * Format a URL in the format passed from the controller.\n *\n * @param path - The path to format.\n *\n * @returns Returns a URL that can be used in the APP.\n */\nexport function formatUrl(path: string): string {\n    if (path.indexOf(\"//\") >= 0) {\n        return path;\n    } // this is an absolute path.\n\n    const urlFormat = getMeta(\"UrlFormat\", \"/{Path}\");\n\n    if (path.substr(0, 1) === \"/\") {\n        path = path.substr(1);\n    }\n\n    if (urlFormat.indexOf(\"?\") >= 0) {\n        path = path.replace(\"?\", \"&\");\n    }\n\n    return urlFormat.replace(\"{Path}\", path);\n}\n\n/**\n * @type {Object} The currently registered Components.\n * @private\n */\nconst _components = {};\n\n/**\n * Register a component in the Components registry.\n *\n * @param name The name of the component.\n * @param component The component to register.\n */\nexport function addComponent(name: string, component: ComponentClass) {\n    _components[name.toLowerCase()] = component;\n}\n\n/**\n * Test to see if a component has been registered.\n *\n * @param name The name of the component to test.\n * @returns Returns **true** if the component has been registered or **false** otherwise.\n */\nexport function componentExists(name: string): boolean {\n    return _components[name.toLowerCase()] !== undefined;\n}\n\n/**\n * Get a component from the component registry.\n *\n * @param name The name of the component.\n * @returns Returns the component or **undefined** if there is no registered component.\n */\nexport function getComponent(name: string): ComponentClass | undefined {\n    return _components[name.toLowerCase()];\n}\n\n/**\n * Mount all declared Components on the dom.\n *\n * The page signifies that an element contains a component with the `data-react=\"<Component>\"` attribute.\n *\n * @param parent - The parent element to search. This element is not included in the search.\n */\nexport function _mountComponents(parent: Element) {\n    const nodes = parent.querySelectorAll(\"[data-react]\").forEach(node => {\n        const name = node.getAttribute(\"data-react\") || \"\";\n        const Component = getComponent(name);\n\n        if (Component) {\n            ReactDOM.render(<Component />, node);\n        } else {\n            logError(\"Could not find component %s.\", name);\n        }\n    });\n}\n\n/**\n * @type {Array} The currently registered routes.\n * @private\n */\nconst _routes: any[] = [];\n\n/**\n * Register one or more routes to the app component.\n *\n * @param routes An array of routes to add.\n */\nexport function addRoutes(routes: Array<React.ReactElement<RouteProps>>) {\n    if (!Array.isArray(routes)) {\n        _routes.push(routes);\n    } else {\n        _routes.push(...routes);\n    }\n}\n\n/**\n * Get all of the currently registered routes.\n *\n * @returns Returns an array of routes.\n */\nexport function getRoutes(): Array<React.ReactElement<RouteProps>> {\n    return _routes;\n}\n\n/**\n * @type {Array}\n * @private\n */\nconst _readyHandlers: PromiseOrNormalCallback[] = [];\n\n/**\n * Register a callback that executes when the document and the core libraries are ready to use.\n *\n * @param callback - The function to call. This can return a Promise but doesn't have to.\n */\nexport function onReady(callback: PromiseOrNormalCallback) {\n    _readyHandlers.push(callback);\n}\n\n/**\n * Execute all of the registered events in order.\n *\n * @returns A Promise when the events have all fired.\n */\nexport function _executeReady(): Promise<any[]> {\n    return new Promise(resolve => {\n        const handlerPromises = _readyHandlers.map(handler => handler());\n        const exec = () => {\n            return Promise.all(handlerPromises).then(resolve);\n        };\n\n        if (document.readyState !== \"loading\") {\n            return exec();\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", exec);\n        }\n    });\n}\n\n/**\n * Execute a callback when a piece of DOM content is ready to be operated on.\n *\n * This is similar to onReady() but also includes content that is added dynamically (ex. AJAX).\n * Note that this function is meant to bridge the non-react parts of the application with react.\n *\n * @param {function} callback - The callback to execute.\n */\nexport function onContent(callback) {\n    document.addEventListener(\"X-DOMContentReady\", callback);\n}\n\n/**\n * Make a URL to a user's profile.\n */\nexport function makeProfileUrl(username: string) {\n    const userPath = `/profile/${encodeURIComponent(username)}`;\n    return formatUrl(userPath);\n}\n","/**\n * A module to isolate meta data passed from the server into a single dependency.\n * This should always be used instead of accessing window.gdn directly.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\ninterface IGdn {\n    meta: AnyObject;\n    permissions: AnyObject;\n    translations: AnyObject;\n    [key: string]: any;\n}\n\n/** The gdn object may be set in an inline script in the head of the document. */\nconst gdn = window.gdn || {};\n\nif (!(\"meta\" in gdn)) {\n    gdn.meta = {};\n}\n\nif (!(\"permissions\" in gdn)) {\n    gdn.permissions = {};\n}\n\nif (!(\"translations\" in gdn)) {\n    gdn.translations = {};\n}\n\nexport default gdn as IGdn;\n","/**\n * A reducer registry so that we can have dynamically loading reducers.\n *\n * @see http://nicolasgallagher.com/redux-modules-and-code-splitting/\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { logError } from \"@dashboard/utility\";\nimport { Reducer, ReducersMapObject } from \"redux\";\nimport { onReady } from \"@dashboard/application\";\n\nlet haveGot = false;\nlet wasReadyCalled = false;\nconst reducers = {};\n\nonReady(() => {\n    wasReadyCalled = true;\n});\n\nexport function registerReducer(name: string, reducer: Reducer) {\n    if (haveGot) {\n        logError(\"Cannot register reducer %s after reducers applied to the store.\", name);\n    } else {\n        reducers[name] = reducer;\n    }\n}\n\nexport function getReducers(): ReducersMapObject<any, any> {\n    haveGot = true;\n\n    if (!wasReadyCalled) {\n        logError(\"getReducers() was called before onReady\");\n    }\n\n    return {\n        ...reducers,\n    };\n}\n\n/**\n * @deprecated\n */\nconst reducerRegistry = {\n    register: registerReducer,\n    getReducers,\n};\n\nexport default reducerRegistry;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { createStore, compose, applyMiddleware, combineReducers, Store } from \"redux\";\nimport { getReducers } from \"@dashboard/state/reducerRegistry\";\nimport thunk from \"redux-thunk\";\nimport { IStoreState } from \"@dashboard/@types/state\";\n\n// There may be an initial state to import.\nconst initialState = {};\nconst initialActions = window.__ACTIONS__ || [];\n\nconst middleware = [thunk];\n\n// Browser may have redux dev tools installed, if so integrate with it.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n// Build the store, add devtools extension support if it's available.\nlet store;\n\nexport default function getStore<S extends IStoreState = IStoreState>(): Store<S> {\n    if (store === undefined) {\n        // Get our reducers.\n        const reducer = combineReducers(getReducers());\n        store = createStore(reducer, initialState, enhancer);\n\n        // Dispatch initial actions returned from the server.\n        initialActions.forEach(store.dispatch);\n    }\n\n    return store;\n}\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\n/**\n * @type {boolean} The current debug setting.\n * @private\n */\nlet _debug = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        _debug = newValue;\n    }\n\n    return _debug;\n}\n\ntype NormalCallback = (...args: any[]) => any;\ntype PromiseCallback = (...args: any[]) => Promise<any>;\n\nexport type PromiseOrNormalCallback = NormalCallback | PromiseCallback;\n\n/**\n * Resolve an array of functions that return promises sequentially.\n *\n * @param promiseFunctions - The functions to execute.\n *\n * @returns An array of all results in sequential order.\n *\n * @example\n * const urls = ['/url1', '/url2', '/url3']\n * const functions = urls.map(url => () => fetch(url))\n * resolvePromisesSequentially(funcs)\n *   .then(console.log)\n *   .catch(console.error)\n */\nexport function resolvePromisesSequentially(promiseFunctions: PromiseOrNormalCallback[]): Promise<any[]> {\n    if (!Array.isArray(promiseFunctions)) {\n        throw new Error(\"First argument needs to be an array of Promises\");\n    }\n\n    return new Promise((resolve, reject) => {\n        let count = 0;\n        let results = [];\n\n        function iterationFunction(previousPromise, currentPromise) {\n            return previousPromise\n                .then(result => {\n                    if (count++ !== 0) {\n                        results = results.concat(result);\n                    }\n\n                    return currentPromise(result, results, count);\n                })\n                .catch(err => reject(err));\n        }\n\n        promiseFunctions = promiseFunctions.concat(() => Promise.resolve());\n\n        promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(() => {\n            resolve(results);\n        });\n    });\n}\n\n/**\n * Log something to console.\n *\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function log(...value: any[]) {\n    if (_debug) {\n        // tslint:disable-next-line:no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.warn(...value);\n}\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IClass {\n    new (): any;\n}\n\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    log(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nexport const enum LoadStatus {\n    PENDING = \"PENDING\",\n    LOADING = \"LOADING\",\n    SUCCESS = \"SUCCESS\",\n    ERROR = \"ERROR\",\n}\n\ninterface IPendingValue {\n    status: LoadStatus.PENDING;\n}\n\ninterface ILoadingValue<T> {\n    status: LoadStatus.LOADING;\n    data?: T;\n    error?: IApiError;\n}\n\ninterface ISuccessValue<T> {\n    status: LoadStatus.SUCCESS;\n    data: T;\n    error?: undefined;\n}\n\ninterface IErrorValue<T> {\n    status: LoadStatus.ERROR;\n    error: IApiError;\n    data?: T;\n}\n\nexport type ILoadable<T> = IPendingValue | ILoadingValue<T> | ISuccessValue<T> | IErrorValue<T>;\n\nexport interface IApiResponse<DataType = any> {\n    data: DataType;\n    status: number;\n    headers: any;\n}\n\nexport interface IFieldError {\n    message: string; // translated message\n    code: string; // translation code\n    field: string;\n    status?: number; // HTTP status\n}\n\nexport interface IApiError {\n    message: string;\n    status: number;\n    errors?: {\n        [key: string]: IFieldError[];\n    };\n}\n","/**\n * Embed utility functions and types.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { IDiscussionEmbed, ICommentEmbed, IScrapeData } from \"@dashboard/@types/api\";\n\nexport const FOCUS_CLASS = \"embed-focusableElement\";\n\nexport type IQuoteEmbedData = IDiscussionEmbed | ICommentEmbed;\nexport type IEmbedData = IScrapeData;\n\nexport interface IEmbedElements {\n    root: HTMLElement;\n    content: HTMLElement;\n}\n\nexport type EmbedRenderer = (elements: IEmbedElements, data: IEmbedData, inEditor: boolean) => Promise<void>;\n\nexport interface IEmbedProps<T = IScrapeData> {\n    data: T;\n    inEditor: boolean;\n    onRenderComplete: () => void;\n}\n\nconst embedRenderers: {\n    [type: string]: EmbedRenderer;\n} = {};\nconst embedComponents: {\n    [type: string]: React.ComponentClass<IEmbedProps>;\n} = {};\n\n/**\n * Get all of the registered embed types.\n */\nexport function getEditorEmbedTypes() {\n    return Object.keys(embedRenderers);\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedRenderer(type: string, renderer: EmbedRenderer) {\n    embedRenderers[type] = renderer;\n}\n\n/**\n * Register an embed rendering function.\n */\nexport function registerEmbedComponent(type: string, component: React.ComponentClass<IEmbedProps>) {\n    embedComponents[type] = component;\n}\n\n/**\n * Render an embed into a DOM node based on it's type.\n */\nexport function renderEmbed(elements: IEmbedElements, data: IEmbedData, inEditor = true): Promise<void> {\n    return new Promise((resolve, reject) => {\n        if (!data.type) {\n            throw new Error(\"The embed type was not provided.\");\n        }\n\n        if (data.type === \"link\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedLink-content\");\n        }\n\n        if (data.type === \"quote\") {\n            elements.root.classList.add(\"embedText\");\n            elements.content.classList.add(\"embedText-content\");\n            elements.content.classList.add(\"embedQuote-content\");\n        }\n\n        const renderer = data.type && embedRenderers[data.type];\n        const Component = data.type && embedComponents[data.type];\n\n        if (renderer) {\n            return renderer(elements, data, inEditor);\n        } else if (Component) {\n            ReactDOM.render(\n                <Component data={data as IScrapeData} inEditor={inEditor} onRenderComplete={resolve} />,\n                elements.content,\n            );\n        } else {\n            throw new Error(\"Could not find a renderer for the embed type - \" + data.type);\n        }\n    });\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IUserFragment } from \"@dashboard/@types/api\";\n\nexport interface IUserAuthenticator {\n    authenticatorID: string;\n    type: string;\n    isUnique: boolean;\n    name: string;\n    ui: {\n        url: string;\n        buttonName: string;\n        photoUrl: string | null;\n        backgroundColor: string | null;\n        foregroundColor: string | null;\n    };\n    isUserLinked?: boolean;\n    sso?: any;\n}\n\nexport const enum AuthenticationStep {\n    AUTHENTICATED = \"authenticated\",\n    LINK_USER = \"linkUser\",\n}\n\nexport interface IAuthenticateResponse {\n    authenticationStep: AuthenticationStep;\n    user?: IUserFragment;\n    authSessionID?: string;\n    targetUrl?: string;\n}\n\nexport interface IAuthenticatePasswordParams {\n    username: string;\n    password: string;\n    persist?: boolean;\n}\n\nexport interface IAuthenticatePasswordResponseData extends IUserFragment {}\n","/**\n * Utilities that have a hard dependency on the DOM.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as utility from \"@dashboard/utility\";\nimport twemoji from \"twemoji\";\nimport tabbable from \"tabbable\";\nimport { logError, log } from \"@dashboard/utility\";\nimport debounce from \"lodash/debounce\";\n\n/**\n * Use the browser's built-in functionality to quickly and safely escape a string.\n *\n * @param str - The string to escape.\n *\n * @returns Escaped HTML.\n */\nexport function escapeHTML(str: string): string {\n    const div = document.createElement(\"div\");\n    div.appendChild(document.createTextNode(str));\n    return div.innerHTML;\n}\n\n/**\n * Use the browser's built-in functionality to quickly unescape a string.\n * UNSAFE with unsafe strings; only use on previously-escaped ones!\n *\n * @param escapedString - A previously escaped string.\n *\n * @returns The unescaped string.\n */\nexport function unescapeHTML(escapedString: string): string {\n    const div = document.createElement(\"div\");\n    div.innerHTML = escapedString;\n    const child = div.childNodes[0];\n    return child && child.nodeValue ? child.nodeValue : \"\";\n}\n\n/**\n * Add the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function hideElement(element: Element) {\n    element.classList.add(\"u-isHidden\");\n    element.setAttribute(\"aria-hidden\", \"true\");\n}\n\n/**\n * Remove the hidden class and aria-hidden attribute to an Element.\n *\n * @param element - The DOM Element to modify.\n */\nexport function unhideElement(element: Element) {\n    element.classList.remove(\"u-isHidden\");\n    element.removeAttribute(\"aria-hidden\");\n}\n\n/**\n * Check if an element is visible or not.\n *\n * @param element - The element to check.\n *\n * @returns The visibility.\n */\nexport function elementIsVisible(element: HTMLElement): boolean {\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n\n/**\n * Get the form data out of a form element.\n *\n * @param {Element} formElement - The element to get the data out of.\n *\n * @returns {Object}\n */\nexport function getFormData(formElement) {\n    if (!(formElement instanceof HTMLFormElement)) {\n        return {};\n    }\n\n    const data = new FormData(formElement) as any;\n    const result = {};\n\n    data.forEach((key, value) => {\n        result[key] = value;\n    });\n\n    return result;\n}\n\nconst delegatedEventListeners = {};\n\n/**\n * Create an event listener using event delegation.\n *\n * @param eventName - The Event to listen for.\n * @param filterSelector - A CSS selector to match against.\n * @param callback - The callback function. This gets passed the fired event.\n * @param scopeSelector - And element to scope the event listener to.\n *\n * @returns The hash of the event. Save this to use removeDelegatedEvent().\n */\nexport function delegateEvent(\n    eventName: string,\n    filterSelector: string,\n    callback: (event: Event, triggeringElement: HTMLElement) => boolean | void,\n    scopeSelector?: string | HTMLElement,\n): string | undefined {\n    let functionKey = eventName + filterSelector + callback.toString();\n\n    let scope;\n\n    if (typeof scopeSelector === \"string\") {\n        scope = document.querySelector(scopeSelector);\n\n        if (!scope) {\n            throw new Error(`Unable to find element in the document for scopeSelector: ${scopeSelector}`);\n        } else {\n            functionKey += scopeSelector;\n        }\n    } else if (scopeSelector instanceof HTMLElement) {\n        scope = scopeSelector;\n    } else {\n        scope = document;\n    }\n\n    const eventHash = utility.hashString(functionKey).toString();\n\n    if (!Object.keys(delegatedEventListeners).includes(eventHash)) {\n        const wrappedCallback = event => {\n            // Get the nearest DOMNode that matches the given selector.\n            const match = filterSelector ? event.target.closest(filterSelector) : event.target;\n\n            if (match) {\n                // Call the callback with the matching element as the context.\n                return callback.call(match, event, match);\n            }\n        };\n\n        const listener = scope.addEventListener(eventName, wrappedCallback);\n        delegatedEventListeners[eventHash] = {\n            scope,\n            eventName,\n            wrappedCallback,\n        };\n        return eventHash;\n    }\n}\n\n/**\n * Remove a delegated event listener.\n *\n * @param eventHash - The event hash passed from delegateEvent().\n */\nexport function removeDelegatedEvent(eventHash: string) {\n    const { scope, eventName, wrappedCallback } = delegatedEventListeners[eventHash];\n    scope.removeEventListener(eventName, wrappedCallback);\n    delete delegatedEventListeners[eventHash];\n}\n\nexport function removeAllDelegatedEvents() {\n    Object.keys(delegatedEventListeners).forEach(key => {\n        removeDelegatedEvent(key);\n    });\n}\n\n/**\n * Toggle any attribute on an element.\n *\n * @param element - The element to toggle on.\n * @param attribute - The attribute to toggle.\n */\nexport function toggleAttribute(element: Element, attribute: string) {\n    const newValue = element.getAttribute(attribute) === \"false\";\n    element.setAttribute(attribute, newValue);\n}\n\nconst dataMap = new WeakMap();\n\n/**\n * Set a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to assosciate the data with.\n * @param key - The key to assosciate the data with.\n * @param value - The value to store.\n */\nexport function setData(element: Element, key: string, value: any) {\n    const initialValue = dataMap.has(element) ? dataMap.get(element) : {};\n    initialValue[key] = value;\n\n    dataMap.set(element, initialValue);\n}\n\n/**\n * Get a piece of data specific to a DOM Element. Similar to `$.data`.\n *\n * @param element - The DOM Element to lookup.\n * @param key - The key to lookup.\n * @param defaultValue - A value to use if the element or key aren't found.\n */\nexport function getData(element: Element, key: string, defaultValue?: any) {\n    if (dataMap.has(element) && dataMap.get(element)[key]) {\n        return dataMap.get(element)[key];\n    }\n\n    const attributeString = `data-${key}`;\n\n    if (element.hasAttribute(attributeString)) {\n        return element.getAttribute(attributeString);\n    }\n\n    return defaultValue;\n}\n\n/**\n * Get an HTML element from a CSS selector or DOM Node.\n *\n * @param {string|Node} selectorOrElement - A CSS selector or an HTML element.\n *\n * @throws {Error} - If no element was found.\n * @returns {HTMLElement} - An HTMLElement no matter what.\n */\nexport function ensureHtmlElement(selectorOrElement) {\n    if (typeof selectorOrElement === \"string\") {\n        selectorOrElement = document.querySelector(selectorOrElement);\n    }\n\n    if (!(selectorOrElement instanceof HTMLElement)) {\n        throw new Error(`HTMLElement could not be found for ${selectorOrElement}.`);\n    }\n\n    return selectorOrElement;\n}\n\n// Test Char for Emoji 5.0\nconst testChar = \"\\uD83E\\uDD96\"; // U+1F996 T-Rex -> update test character with new emoji version support.\n\nlet emojiSupportedCache: boolean | null = null;\n\nexport function isEmojiSupported() {\n    if (emojiSupportedCache !== null) {\n        return emojiSupportedCache;\n    }\n\n    if (process.env.NODE_ENV !== \"test\") {\n        // Test environment\n        const canvas = document.createElement(\"canvas\");\n        if (canvas.getContext && canvas.getContext(\"2d\")) {\n            const pixelRatio = window.devicePixelRatio || 1;\n            const offset = 12 * pixelRatio;\n            const ctx = canvas.getContext(\"2d\");\n            ctx!.fillStyle = \"#f00\";\n            ctx!.textBaseline = \"top\";\n            ctx!.font = \"32px Arial\";\n            ctx!.fillText(testChar, 0, 0);\n            emojiSupportedCache = ctx!.getImageData(offset, offset, 1, 1).data[0] !== 0;\n        } else {\n            emojiSupportedCache = false;\n        }\n    } else {\n        emojiSupportedCache = true;\n    }\n\n    return emojiSupportedCache;\n}\n\nconst emojiOptions = {\n    className: \"fallBackEmoji\",\n    size: \"72x72\",\n};\n\n/**\n * Returns either native emoji or fallback image\n *\n * @param stringOrNode - A DOM Node or string to convert.\n */\nexport function convertToSafeEmojiCharacters(stringOrNode: string | Node) {\n    if (isEmojiSupported()) {\n        return stringOrNode;\n    }\n    return twemoji.parse(stringOrNode, emojiOptions);\n}\n\n// A weakmap so we can store multiple load callbacks per script.\nconst loadEventCallbacks: WeakMap<Node, Array<(event) => void>> = new WeakMap();\nconst rejectionCache: Map<string, Error> = new Map();\n\n/**\n * Dynamically load a javascript file.\n */\nexport function ensureScript(scriptUrl: string) {\n    return new Promise((resolve, reject) => {\n        const existingScript: HTMLScriptElement | null = document.querySelector(`script[src='${scriptUrl}']`);\n        if (rejectionCache.has(scriptUrl)) {\n            reject(rejectionCache.get(scriptUrl));\n        }\n        if (existingScript) {\n            if (loadEventCallbacks.has(existingScript)) {\n                // Add another resolveCallback into the weakmap.\n                const callbacks = loadEventCallbacks.get(existingScript);\n                callbacks && callbacks.push(resolve);\n            } else {\n                // Script is already loaded. Resolve immediately.\n                resolve();\n            }\n        } else {\n            // The script doesn't exist. Lets create it.\n            const head = document.getElementsByTagName(\"head\")[0];\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.src = scriptUrl;\n            script.onerror = (event: ErrorEvent) => {\n                const error = new Error(\"Failed to load a required embed script\");\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            };\n\n            const timeout = setTimeout(() => {\n                const error = new Error(`Loading of the script ${scriptUrl} has timed out.`);\n                rejectionCache.set(scriptUrl, error);\n                reject(error);\n            }, 10000);\n\n            loadEventCallbacks.set(script, [resolve]);\n\n            script.onload = event => {\n                clearTimeout(timeout);\n                const callbacks = loadEventCallbacks.get(script);\n                callbacks && callbacks.forEach(callback => callback(event));\n                loadEventCallbacks.delete(script);\n            };\n\n            head.appendChild(script);\n        }\n    });\n}\n\ninterface ITabbableOptions {\n    root: Element;\n    excludedElements: Element[];\n    excludedRoots: Element[];\n    reverse: boolean;\n    fromElement: Element;\n    allowLooping: boolean;\n}\n\n/**\n * Get the next tabbable item within a given tabindex.\n *\n * WARNING: Performance can be poor if you pass many excluded roots and do not\n * sufficiently narrow the tree your are looking in.\n *\n * @param options\n * @property root - The root element to look in.\n * @property excludedElements - Elements to ignore.\n * @property excludedRoots - These element's children will be ignored.\n * @property reverse - True to get the previous element instead.\n * @property fromElement - The currently focused element.\n * @property allowLooping - Whether or not the focus should loop around from beginning <-> end.\n */\nexport function getNextTabbableElement(options?: Partial<ITabbableOptions>): HTMLElement | null {\n    const defaultTabbableOptions: ITabbableOptions = {\n        root: document.documentElement,\n        excludedElements: [],\n        excludedRoots: [],\n        reverse: false,\n        fromElement: document.activeElement,\n        allowLooping: true,\n    };\n\n    // Merge the passed options and the defaults.\n    const finalOptions = {\n        ...defaultTabbableOptions,\n        ...options,\n    } as ITabbableOptions;\n\n    if (!(finalOptions.fromElement instanceof HTMLElement)) {\n        logError(\"Unable to tab to next element, `fromElement` given is not valid: \", finalOptions.fromElement);\n        return null;\n    }\n\n    const tabbables = tabbable(finalOptions.root).filter((tabbableElement: Element) => {\n        // We want to excempt items that are the active item or a parent of the active item\n        // because otherwise we would not be able to tab away from them.\n        const elementIsActiveOrChildOfActive =\n            finalOptions.fromElement === tabbableElement || tabbableElement.contains(finalOptions.fromElement);\n\n        if (!elementIsActiveOrChildOfActive) {\n            if (finalOptions.excludedElements.includes(tabbableElement)) {\n                return false;\n            }\n            for (const excludedRoot of finalOptions.excludedRoots) {\n                if (excludedRoot !== tabbableElement && excludedRoot.contains(tabbableElement)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    });\n\n    const currentTabIndex = tabbables.indexOf(finalOptions.fromElement);\n\n    if (currentTabIndex < 0) {\n        return null;\n    }\n\n    let targetIndex = finalOptions.reverse ? currentTabIndex - 1 : currentTabIndex + 1;\n\n    if (finalOptions.allowLooping) {\n        // Loop over the beginning and ends\n        if (targetIndex < 0) {\n            targetIndex = tabbables.length - 1;\n        } else if (targetIndex >= tabbables.length) {\n            targetIndex = 0;\n        }\n    }\n\n    return tabbables[targetIndex] || null;\n}\n\nfunction checkDomTreeWasClicked(rootNode: Element | null, clickedElement: Element) {\n    return rootNode && clickedElement && (rootNode.contains(clickedElement as Element) || rootNode === clickedElement);\n}\n\n/**\n * Determine if the currently focused element is somewhere inside of (or the same as)\n * a given Element.\n *\n * @param rootNode - The root node to look in.\n */\nfunction checkDomTreeHasFocus(rootNode: Element | null, event: FocusEvent, callback: (hasFocus: boolean) => void) {\n    setTimeout(() => {\n        const possibleTargets = [\n            // NEEDS TO COME FIRST, because safari will populate relatedTarget on focusin, and its not what we're looking for.\n            document.activeElement, // IE11, Safari.\n            event.relatedTarget as Element, // Chrome (The actual standard)\n            (event as any).explicitOriginalTarget, // Firefox\n        ];\n\n        let activeElement = null;\n        for (const target of possibleTargets) {\n            if (target && target !== document.body) {\n                activeElement = target;\n                break;\n            }\n        }\n\n        if (activeElement !== null) {\n            const hasFocus =\n                rootNode && activeElement && (activeElement === rootNode || rootNode.contains(activeElement));\n\n            // We will only invalidate based on something actually getting focus.\n            callback(!!hasFocus);\n        }\n    }, 0);\n}\n\n/**\n * Register a callback for focusin and focusin out events. The main improvement here over registering\n * the listeners yourself is that the events fire for the whole tree as 1 item instead of as\n * individual notes.\n *\n * This is particularly useful when you want to track focus leaving or enterring a component\n * without caring about the individual contents inside.\n *\n * @param rootNode - The root dom node to watch on.\n * @param callback - A callback for when the tree focuses and blurs.\n */\nexport function watchFocusInDomTree(rootNode: Element, callback: (hasFocus: boolean) => void) {\n    rootNode.addEventListener(\n        \"focusout\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                !hasFocus && callback(false);\n            });\n        },\n        true,\n    );\n\n    rootNode.addEventListener(\n        \"focusin\",\n        (event: FocusEvent) => {\n            checkDomTreeHasFocus(rootNode, event, hasFocus => {\n                hasFocus && callback(true);\n            });\n        },\n        true,\n    );\n\n    document.addEventListener(\"click\", event => {\n        const triggeringElement = event.target as Element;\n        const wasClicked = checkDomTreeWasClicked(rootNode, triggeringElement);\n        if (!wasClicked) {\n            callback(false);\n        }\n    });\n}\n\n/**\n * Sticky header handling\n */\nfunction handleStickyHeaderState(element, data) {\n    const goingDown = data.lastScrollPos < data.currentScrollPos;\n    const isAtTopOfPage = data.currentScrollPos === 0;\n    const elementHeight = element.offsetHeight;\n    const isPastHeader =\n        element.style.position !== \"fixed\" && element.offsetTop + elementHeight <= data.currentScrollPos;\n    const elementTop = element.style.top !== \"\" ? parseInt(element.style.top, 10) : false;\n\n    element.classList.toggle(\"isScrollingDown\", goingDown);\n    element.classList.toggle(\"isScrollingUp\", !goingDown);\n    element.classList.toggle(\"isAtTop\", isAtTopOfPage);\n\n    if (goingDown) {\n        element.style.position = \"\";\n        if (isPastHeader) {\n            element.style.top = `${data.currentScrollPos - elementHeight}px`;\n        } else {\n            if (!elementTop) {\n                element.style.top = `${data.currentScrollPos}px`;\n            }\n        }\n    } else {\n        // going UP\n        if (data.currentScrollPos <= elementTop) {\n            element.style.top = \"\";\n            element.style.position = \"fixed\";\n        }\n    }\n}\n\n/**\n * Vanilla's default way to handle sticky headers\n */\nexport function stickyHeader() {\n    const header = document.querySelector(\".stickyHeader\");\n    if (header !== null) {\n        let currentScrollPos = Math.max(window.scrollY, 0);\n        let lastScrollPos = -1;\n\n        handleStickyHeaderState(header, {\n            currentScrollPos,\n            lastScrollPos,\n        });\n\n        window.addEventListener(\"scroll\", e => {\n            debounce(\n                () => {\n                    window.requestAnimationFrame(data => {\n                        lastScrollPos = currentScrollPos;\n                        currentScrollPos = Math.max(window.scrollY, 0);\n                        handleStickyHeaderState(header, {\n                            currentScrollPos,\n                            lastScrollPos,\n                        });\n                    });\n                },\n                100,\n                {\n                    leading: true,\n                },\n            )();\n        });\n    } else {\n        utility.log(\"No sticky header found\");\n    }\n}\n\n/**\n * Handler for an file being dragged and dropped.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getDraggedImage(event: DragEvent): File | undefined {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length) {\n        event.preventDefault();\n        const files = Array.from(event.dataTransfer.files);\n\n        // Currently only 1 file is supported.\n        const mainFile = files[0];\n        return mainFile;\n    }\n}\n\n/**\n * Handler for an file being pasted.\n *\n * @param event - https://developer.mozilla.org/en-US/docs/Web/API/DragEvent\n */\nexport function getPastedImage(event: ClipboardEvent): File | undefined | null {\n    if (event.clipboardData && event.clipboardData.items && event.clipboardData.items.length) {\n        const files = Array.from(event.clipboardData.items)\n            .map((item: any) => (item.getAsFile ? item.getAsFile() : null))\n            .filter(Boolean);\n\n        if (files.length > 0) {\n            event.preventDefault();\n            // Currently only 1 file is supported.\n            const mainFile = files[0];\n            return mainFile;\n        }\n    }\n}\n\n/**\n * Calculate the height of element with simulated margin collapse.\n *\n * This is ideal for getting the calculate height of a fixed number of items. (not the entire parent).\n *\n * It considers:\n * - Element height\n * - Padding\n * - Borders\n * - Margins\n * - Margin collapsing.\n *\n * @param element - The element to measure\n * @param previousBottomMargin - The bottom margin of the previous element. You can use the returned bottom margin from this function to get this.\n */\nexport function getElementHeight(\n    element: Element,\n    previousBottomMargin: number = 0,\n): {\n    height: number;\n    bottomMargin: number;\n} {\n    const height = element.getBoundingClientRect().height;\n    const { marginTop, marginBottom } = window.getComputedStyle(element);\n\n    let topHeight = marginTop ? parseInt(marginTop, 10) : 0;\n    // Simulate a margin-collapsed height.\n    topHeight = Math.max(topHeight - previousBottomMargin, 0);\n\n    const bottomHeight = marginBottom ? parseInt(marginBottom, 10) : 0;\n    const finalHeight = height + topHeight + bottomHeight;\n\n    return {\n        height: finalHeight,\n        bottomMargin: bottomHeight,\n    };\n}\n"],"sourceRoot":""}