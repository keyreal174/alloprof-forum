{"version":3,"sources":["webpack:///./applications/dashboard/src/scripts/components/forms/Or.tsx","webpack:///./applications/dashboard/src/scripts/state/authenticate/authenticatorsActions.ts","webpack:///./applications/dashboard/src/scripts/app/authenticate/SignInPage.tsx","webpack:///./applications/dashboard/src/scripts/app/authenticate/PasswordPage.tsx","webpack:///./applications/dashboard/src/scripts/components/NotFoundPage.tsx","webpack:///./applications/dashboard/src/scripts/components/Router.tsx","webpack:///./applications/dashboard/src/scripts/state/authenticate/authenticatorsReducer.ts","webpack:///./applications/dashboard/src/scripts/state/authenticate/passwordReducer.ts","webpack:///./applications/dashboard/src/scripts/state/authenticate/authenticateReducer.ts","webpack:///./applications/dashboard/src/scripts/state/users/requestPasswordReducer.ts","webpack:///./applications/dashboard/src/scripts/state/users/usersReducer.ts","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/BaseEmbed.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/codepen.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/giphy.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/image.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/imgur.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/instagram.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/link.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/soundcloud.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/twitter.ts","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/video.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/spoilers.ts","webpack:///./applications/dashboard/src/scripts/app/user-content/CollapsableContent.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/quote.tsx","webpack:///./applications/dashboard/src/scripts/app/user-content/emoji.ts","webpack:///./applications/dashboard/src/scripts/app/index.tsx","webpack:///./build/entries/public-path.ts","webpack:///./applications/dashboard/src/scripts/app/user-content/embeds/getty.ts"],"names":["_super","Or","__extends","prototype","render","this","props","visible","react_default","a","createElement","className","Object","application","defaultProps","PureComponent","GET_USER_AUTHENTICATORS_REQUEST","GET_USER_AUTHENTICATORS_SUCCESS","GET_USER_AUTHENTICATORS_ERROR","getAuthenticatorsActions","utility","getUserAuthenticators","undefined","SignInPage_SignInPage","SignInPage","_this","call","state","id","componentIDs","SignInPage_extends","defineProperty","componentDidMount","authenticatorState","status","api","PENDING","loadAuthenticators","SUCCESS","showPassword","ssoMethods","data","filter","type","react","DocumentTitle","title","titleID","SSOMethods","forms_Or","length","PasswordForm","authenticate_SignInPage","es","_a","authenticate","authenticators","dispatch","apply","arguments","PasswordPage_extends","NotFoundPage","NotFoundPage_extends","message","sprintf","toLowerCase","Router","Router_extends","routes","map","route","__assign","key","path","exact","push","Route","component","components_NotFoundPage","store","getStore","BrowserRouter","basename","Switch","initialState","passwordReducer_initialState","authenticate_authenticateReducer","redux","action","authenticatorsReducer_assign","LOADING","payload","error","ERROR","password","passwordActions","passwordReducer_assign","requestPasswordReducer_initialState","users_usersReducer","requestPassword","requestPasswordActions","requestPasswordReducer_assign","BaseEmbed","BaseEmbed_extends","onRenderComplete","Component","codepen_CodePenEmbed","CodePenEmbed","codepen_extends","attributes","height","src","style","scrolling","embeds_BaseEmbed","giphy_GiphyEmbed","GiphyEmbed","giphy_extends","width","postID","ratioStyle","maxWidth","paddingBottom","Error","image_ImageEmbed","ImageEmbed","image_extends","url","name","sanitizedUrl","scripts_utility","href","rel","target","alt","imgur_ImgurEmbed","ImgurEmbed","imgur_extends","dataID","isAlbum","data-id","convertImgurEmbeds","then","componentDidUpdate","images","Array","from","document","querySelectorAll","dom","sent","window","imgurEmbed","createIframe","imagesLength","i","tasks","instagram_InstagramEmbed","InstagramEmbed","instagram_extends","permaLink","versionNumber","isCaptioned","data-instgrmPermalink","data-instgrmVersion","data-instgrmCaptioned","convertInstagramEmbeds","instgrm","Embeds","process","link_LinkEmbed","LinkEmbed","link_extends","photoUrl","body","source","linkImage","aria-hidden","dateTime","timestamp","humanTime","truncateEmbedLinks","container","forEach","el","untruncatedText","innerHTML","excerpt","maxHeight","parseInt","getComputedStyle","shave_es","truncateTextBasedOnMaxHeight","soundcloud_SoundcloudEmbed","SoundcloudEmbed","soundcloud_extends","visual","showArtwork","embedUrl","frameBorder","renderTweet","elements","contentElement","content","twttr","statusID","classList","contains","add","options","conversation","widgets","createTweet","querySelector","remove","convertTwitterEmbeds","tweets","promises","getAttribute","root","Promise","all","video_VideoEmbed","VideoEmbed","clickHandler","setState","isPlaying","video_extends","ratioClass","paddingTop","thumbnail","data-url","aria-label","onClick","role","PlayIcon","VideoIframe","shorthand","allow","allowFullScreen","fill","strokeWidth","xmlns","viewBox","d","points","handlePlayVideo","closest","dataset","react_dom_default","handleToggleSpoiler","spoilerContainer","toggle","CollapsableUserContent","selfRef","createRef","CollapsableContent_extends","overflow","ref","dangerouslySetInnerHTML","calcMaxHeight","addEventListener","debounce_default","prevProps","__html","isCollapsed","getHeightInfo","self","current","needsCollapser","childElementCount","finalMaxHeight","lastBottomMargin","_b","__values","children","_c","next","done","child","value","preferredMaxHeight","_d","bottomMargin","scrollHeight","setNeedsCollapser","mountQuoteEmbeds","embeds","embed","quoteData","JSON","parse","quote_QuoteEmbed","inEditor","removeAttribute","embeds_1","quote_values","embeds_1_1","ChevronUpIcon","ChevronDownIcon","transform","QuoteEmbed","renderedBody","needsCollapseButton","toggleCollapseState","event","preventDefault","quote_extends","insertUser","uniqueId_default","bodyClasses","classnames_default","userUrl","tabIndex","titleTime","aria-pressed","CollapsableContent","format","stringify","bodyRaw","apiv2","post","response","quote","dateUpdated","dateInserted","Date","toLocaleString","year","month","day","weekday","hour","minute","scripts_embeds","getty","reducerRegistry","components_Router","PasswordPage","RecoverPasswordPage","potentialPublicPath","gdn","meta","WebRoot","finalPublicPath","__webpack_require__","p","_dashboard_application__WEBPACK_IMPORTED_MODULE_2__","initGettyEmbeds","_dashboard_embeds__WEBPACK_IMPORTED_MODULE_0__","renderGetty","convertGettyEmbeds","newLink","setAttribute","appendChild","setImmediate","loadGettyImages","gettyPosts","gettyPosts_1","gettyPosts_1_1","sig","Number","items","capt","tld","i360","fallbackCallback","c","gie","q","load","w","h","caption","is360","_dashboard_dom__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"/applications/dashboard/js/webpack/forum.min.js","sourcesContent":["/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { t } from \"@dashboard/application\";\n\ninterface IProps {\n    visible: boolean;\n}\n\nexport default class Or extends React.PureComponent<IProps, {}> {\n    public static defaultProps: IProps = {\n        visible: true,\n    };\n\n    public render() {\n        return this.props.visible ? (\n            <div className=\"inputBlock-labelText authenticateUser-divider\">{t(\"or\")}</div>\n        ) : null;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@dashboard/state/utility\";\nimport { IUserAuthenticator } from \"@dashboard/@types/api\";\n\nexport const GET_USER_AUTHENTICATORS_REQUEST = \"GET_USER_AUTHENTICATORS_REQUEST\";\nexport const GET_USER_AUTHENTICATORS_SUCCESS = \"GET_USER_AUTHENTICATORS_SUCCESS\";\nexport const GET_USER_AUTHENTICATORS_ERROR = \"GET_USER_AUTHENTICATORS_ERROR\";\n\nconst getAuthenticatorsActions = generateApiActionCreators(\n    GET_USER_AUTHENTICATORS_REQUEST,\n    GET_USER_AUTHENTICATORS_SUCCESS,\n    GET_USER_AUTHENTICATORS_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IUserAuthenticator[],\n);\n\nexport const getUserAuthenticators = () =>\n    apiThunk(\"get\", \"authenticate/authenticators\", getAuthenticatorsActions, undefined);\n\nexport type ActionTypes = ActionsUnion<typeof getAuthenticatorsActions>;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\nimport PasswordForm from \"./components/PasswordForm\";\nimport SSOMethods from \"./components/SSOMethods\";\nimport { getRequiredID, IRequiredComponentID } from \"@dashboard/componentIDs\";\nimport Or from \"@dashboard/components/forms/Or\";\nimport PageLoading from \"@dashboard/components/PageLoading\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\nimport { IStoreState, IAuthenticatorState } from \"@dashboard/@types/state\";\nimport { getUserAuthenticators } from \"@dashboard/state/authenticate/authenticatorsActions\";\n\ninterface IProps {\n    authenticatorState: IAuthenticatorState;\n    loadAuthenticators: typeof getUserAuthenticators;\n}\n\nexport class SignInPage extends React.Component<IProps, IRequiredComponentID> {\n    public pageTitleID: string;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"SignInPage\"),\n        };\n    }\n\n    get titleID(): string {\n        return this.state.id + \"-pageTitle\";\n    }\n\n    public componentDidMount() {\n        if (this.props.authenticatorState.status === LoadStatus.PENDING) {\n            this.props.loadAuthenticators();\n        }\n    }\n\n    public render() {\n        const { authenticatorState } = this.props;\n\n        if (authenticatorState.status !== LoadStatus.SUCCESS) {\n            // TODO: Use a generic fallback component for the other states.\n            return null;\n        }\n\n        let showPassword = false;\n        const ssoMethods = authenticatorState.data.filter(a => {\n            if (a.type === \"password\") {\n                showPassword = true;\n                return false;\n            }\n            return true;\n        });\n\n        return (\n            <div id={this.state.id} className=\"authenticateUserCol\">\n                <DocumentTitle title={t(\"Sign In\")}>\n                    <h1 id={this.titleID} className=\"isCentered\">\n                        {t(\"Sign In\")}\n                    </h1>\n                </DocumentTitle>\n                <SSOMethods ssoMethods={ssoMethods} />\n                <Or visible={showPassword && ssoMethods.length > 0} />\n                {showPassword && <PasswordForm />}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        authenticatorState: authenticate.authenticators,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadAuthenticators: () => {\n            dispatch(getUserAuthenticators());\n        },\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SignInPage);\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\nimport PasswordForm from \"./components/PasswordForm\";\nimport { uniqueIDFromPrefix } from \"@dashboard/componentIDs\";\n\nexport default class SignInPage extends React.Component {\n    private id = uniqueIDFromPrefix(\"PasswordPage\");\n\n    get titleID(): string {\n        return this.id + \"-pageTitle\";\n    }\n\n    public render() {\n        return (\n            <div className=\"authenticateUserCol\">\n                <DocumentTitle title={t(\"Sign In\")}>\n                    <h1 id={this.titleID} className=\"isCentered\">\n                        {t(\"Sign In\")}\n                    </h1>\n                </DocumentTitle>\n                <PasswordForm />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { sprintf } from \"sprintf-js\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\n\nexport default class NotFoundPage extends React.PureComponent<IProps> {\n    public static defaultProps = {\n        type: \"Page\",\n    };\n\n    public render() {\n        return (\n            <div className=\"Center SplashInfo\">\n                <DocumentTitle title={this.title} />\n                <div>{this.message}</div>\n            </div>\n        );\n    }\n\n    private get title() {\n        return this.props.title || sprintf(t(\"%s Not Found\"), t(this.props.type));\n    }\n\n    private get message() {\n        return (\n            this.props.message ||\n            sprintf(t(\"The %s you were looking for could not be found.\"), t(this.props.type.toLowerCase()))\n        );\n    }\n}\n\ninterface IProps {\n    type: string;\n    title?: string;\n    message?: string;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { BrowserRouter, Route, RouteProps, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { getRoutes, getMeta } from \"@dashboard/application\";\nimport NotFoundPage from \"@dashboard/components/NotFoundPage\";\nimport getStore from \"@dashboard/state/getStore\";\n\n/**\n * The root application component.\n *\n * This component renders the top-level pages that have been registered with {@link module:application.addRoutes}.\n */\nexport default class Router extends React.PureComponent {\n    public render() {\n        const routes = getRoutes().map((route: React.ReactElement<RouteProps>) => {\n            return <route.type key={route.key || route.props.path + (route.props.exact ? \"!\" : \"\")} {...route.props} />;\n        });\n\n        routes.push(<Route key=\"@not-found\" component={NotFoundPage} />);\n\n        return (\n            <Provider store={getStore()}>\n                <BrowserRouter basename={getMeta(\"context.basePath\", \"\")}>\n                    <Switch>{routes}</Switch>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport * as actions from \"@dashboard/state/authenticate/authenticatorsActions\";\nimport { IAuthenticatorState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\n\nconst initialState: IAuthenticatorState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function authenticatorsReducer(\n    state: IAuthenticatorState = initialState,\n    action: actions.ActionTypes,\n): IAuthenticatorState {\n    switch (action.type) {\n        case actions.GET_USER_AUTHENTICATORS_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.GET_USER_AUTHENTICATORS_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.GET_USER_AUTHENTICATORS_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport * as actions from \"@dashboard/state/authenticate/passwordActions\";\nimport { IPasswordState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\n\nconst initialState: IPasswordState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function passwordReducer(\n    state: IPasswordState = initialState,\n    action: actions.ActionTypes,\n): IPasswordState {\n    switch (action.type) {\n        case actions.POST_AUTHENTICATE_PASSWORD_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.POST_AUTHENTICATE_PASSWORD_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.POST_AUTHENTICATE_PASSWORD_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { combineReducers } from \"redux\";\nimport authenticatorsReducer from \"@dashboard/state/authenticate/authenticatorsReducer\";\nimport passwordReducer from \"@dashboard/state/authenticate/passwordReducer\";\n\nconst authenticateReducer = combineReducers({\n    authenticators: authenticatorsReducer,\n    password: passwordReducer,\n});\n\nexport default authenticateReducer;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport * as actions from \"@dashboard/state/users/requestPasswordActions\";\nimport { IRequestPasswordState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\n\nconst initialState: IRequestPasswordState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function passwordReducer(\n    state: IRequestPasswordState = initialState,\n    action: actions.ActionTypes,\n): IRequestPasswordState {\n    switch (action.type) {\n        case actions.POST_REQUEST_PASSWORD_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.POST_REQUEST_PASSWORD_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.POST_REQUEST_PASSWORD_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        case actions.AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { combineReducers } from \"redux\";\nimport requestPasswordReducer from \"@dashboard/state/users/requestPasswordReducer\";\n\nconst usersReducer = combineReducers({\n    requestPassword: requestPasswordReducer,\n});\n\nexport default usersReducer;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { IEmbedProps } from \"@dashboard/embeds\";\n\n/**\n * A base embed react component class.\n * @see {registerEmbedComponent}\n */\nexport default abstract class BaseEmbed<P extends IEmbedProps = IEmbedProps, S = {}> extends React.Component<P, S> {\n    public componentDidMount() {\n        this.props.onRenderComplete();\n    }\n\n    public abstract render();\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initCodePenEmbeds() {\n    registerEmbedComponent(\"codepen\", CodePenEmbed);\n}\n\nexport class CodePenEmbed extends BaseEmbed {\n    public render() {\n        const { attributes, height } = this.props.data;\n        const { id, src, style } = attributes;\n\n        return <iframe id={id} src={src} height={height || 300} style={style} scrolling=\"no\" />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initGiphyEmbeds() {\n    registerEmbedComponent(\"giphy\", GiphyEmbed);\n}\n\nexport class GiphyEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, width, height } = data;\n        const { postID } = attributes;\n        const paddingBottom = ((height || 1) / (width || 1)) * 100 + \"%\";\n        const ratioStyle: React.CSSProperties = {\n            maxWidth: width ? width + \"px\" : \"100%\",\n            paddingBottom,\n        };\n\n        if (!postID) {\n            throw new Error(\"Giphy embed fail, the post could not be found\");\n        }\n        const src = `https://giphy.com/embed/${postID}`;\n\n        return (\n            <div className=\"embedExternal-ratio\" style={ratioStyle}>\n                <iframe src={src} className=\"giphy-embed embedGiphy-iframe\" />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\n\nexport function initImageEmbeds() {\n    registerEmbedComponent(\"image\", ImageEmbed);\n}\n\nexport class ImageEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { url, name } = data;\n        const sanitizedUrl = sanitizeUrl(url);\n\n        // Yes we actually want a target blank here (even if we don't want it on normal links).\n        return (\n            <a className=\"embedImage-link\" href={sanitizedUrl || \"\"} rel=\"nofollow noopener\" target=\"_blank\">\n                <img className=\"embedImage-img\" src={url || \"\"} alt={name || \"\"} />\n            </a>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initImgurEmbeds() {\n    registerEmbedComponent(\"imgur\", ImgurEmbed);\n    onContent(convertImgurEmbeds);\n}\n\nexport class ImgurEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes } = data;\n        const { postID, isAlbum } = attributes;\n\n        const dataID = isAlbum ? `a/${postID}` : postID;\n        const url = `//imgur.com/${postID}`;\n\n        return <blockquote className=\"imgur-embed-pub\" data-id={dataID} />;\n    }\n\n    public componentDidMount() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted imgur embeds.\n */\nasync function convertImgurEmbeds() {\n    const images = Array.from(document.querySelectorAll(\".imgur-embed-pub\"));\n    if (images.length > 0) {\n        await ensureScript(\"//s.imgur.com/min/embed.js\");\n\n        if (!window.imgurEmbed) {\n            throw new Error(\"The Imgur post failed to load\");\n        }\n\n        if (window.imgurEmbed.createIframe) {\n            const imagesLength = images.length;\n            for (let i = 0; i < imagesLength; i++) {\n                window.imgurEmbed.createIframe();\n            }\n        } else {\n            window.imgurEmbed.tasks = images.length;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initInstagramEmbeds() {\n    registerEmbedComponent(\"instagram\", InstagramEmbed);\n    onContent(convertInstagramEmbeds);\n}\n\nexport class InstagramEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, url } = data;\n        const { permaLink, versionNumber, isCaptioned } = attributes;\n        if (!data.attributes.permaLink) {\n            throw new Error(\"Attempted to embed a Instagram post failed link is invalid\");\n        }\n\n        return (\n            <blockquote\n                className=\"instagram-media\"\n                data-instgrmPermalink={permaLink}\n                data-instgrmVersion={versionNumber}\n                data-instgrmCaptioned={isCaptioned}\n            >\n                <a href={url}>{url}</a>\n            </blockquote>\n        );\n    }\n\n    public componentDidMount() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted instagram embeds.\n */\nasync function convertInstagramEmbeds() {\n    const instagramEmbeds = document.querySelectorAll(\".instagram-media\");\n    if (instagramEmbeds.length > 0) {\n        await ensureScript(\"//platform.instagram.com/en_US/embeds.js\");\n\n        if (!window.instgrm) {\n            throw new Error(\"The Instagram post failed to load\");\n        }\n\n        window.instgrm.Embeds.process();\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\nimport { getData, setData } from \"@dashboard/dom\";\nimport debounce from \"lodash/debounce\";\nimport shave from \"shave\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initLinkEmbeds() {\n    registerEmbedComponent(\"link\", LinkEmbed);\n    truncateEmbedLinks();\n\n    // Retruncate links when the window resizes.\n    window.addEventListener(\"resize\", () => debounce(truncateEmbedLinks, 200)());\n}\n\nexport class LinkEmbed extends BaseEmbed {\n    public render() {\n        const { name, attributes, url, photoUrl, body } = this.props.data;\n        const title = name ? <h3 className=\"embedText-title embedLink-title\">{name}</h3> : null;\n\n        const source = <span className=\"embedLink-source meta\">{url}</span>;\n\n        let linkImage: JSX.Element | null = null;\n        if (photoUrl) {\n            linkImage = <img src={photoUrl} className=\"embedLink-image\" aria-hidden=\"true\" />;\n        }\n        const dateTime =\n            attributes.timestamp && attributes.humanTime ? (\n                <time className=\"embedLink-dateTime meta\" dateTime={attributes.timestamp}>\n                    {attributes.humanTime}\n                </time>\n            ) : null;\n\n        const sanitizedUrl = sanitizeUrl(url);\n        return (\n            <a className=\"embedLink-link\" href={sanitizedUrl} rel=\"noreferrer\">\n                <article className=\"embedText-body embedLink-body\">\n                    {linkImage}\n                    <div className=\"embedText-main embedLink-main\">\n                        <div className=\"embedText-header embedLink-header\">\n                            {title}\n                            {dateTime}\n                            {source}\n                        </div>\n                        <div className=\"embedLink-excerpt\">{body}</div>\n                    </div>\n                </article>\n            </a>\n        );\n    }\n}\n\n/**\n * Truncate embed link excerpts in a container\n *\n * @param container - Element containing embeds to truncate\n */\nfunction truncateEmbedLinks(container = document.body) {\n    const embeds = container.querySelectorAll(\".embedLink-excerpt\");\n    embeds.forEach(el => {\n        let untruncatedText = getData(el, \"untruncatedText\");\n\n        if (!untruncatedText) {\n            untruncatedText = el.innerHTML;\n            setData(el, \"untruncatedText\", untruncatedText);\n        } else {\n            el.innerHTML = untruncatedText;\n        }\n        truncateTextBasedOnMaxHeight(el);\n    });\n}\n\n/**\n * Truncate element text based on max-height\n *\n * @param excerpt - The excerpt to truncate.\n */\nfunction truncateTextBasedOnMaxHeight(excerpt: Element) {\n    const maxHeight = parseInt(getComputedStyle(excerpt)[\"max-height\"], 10);\n    if (maxHeight && maxHeight > 0) {\n        shave(excerpt, maxHeight);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initSoundcloudEmbeds() {\n    registerEmbedComponent(\"soundcloud\", SoundcloudEmbed);\n}\n\nexport class SoundcloudEmbed extends BaseEmbed {\n    public render() {\n        const { attributes } = this.props.data;\n        const { postID, visual, showArtwork, embedUrl } = attributes;\n\n        // Ensure this is a track.\n        if (postID == null) {\n            throw new Error(\"Soundcloud embed fail, the track could not be found\");\n        }\n\n        const url = embedUrl + postID + \"&visual=\" + (visual || \"false\") + \"&show_artwork=\" + (showArtwork || \"false\");\n\n        return <iframe width=\"100%\" scrolling=\"no\" frameBorder=\"no\" src={url} />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initTwitterEmbeds() {\n    registerEmbedRenderer(\"twitter\", renderTweet);\n    onContent(convertTwitterEmbeds);\n    void convertTwitterEmbeds().then();\n}\n\n/**\n * Render a single twitter embed.\n */\nexport async function renderTweet(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    // Ensure the twitter library is loaded.\n    await ensureScript(\"//platform.twitter.com/widgets.js\");\n\n    if (!window.twttr) {\n        throw new Error(\"The Twitter widget failed to load.\");\n    }\n\n    // Ensure we have a status id to look up.\n    if (data.attributes.statusID == null) {\n        throw new Error(\"Attempted to embed a tweet but the statusID could not be found\");\n    }\n\n    // Check that we haven't already started to load this embed (In the case multiple onContents are fired off).\n    if (\n        !contentElement.classList.contains(\"js-twitterCardLoaded\") &&\n        !contentElement.classList.contains(\"js-twitterCardPreload\")\n    ) {\n        contentElement.classList.add(\"js-twitterCardPreload\");\n\n        // Render the embed.\n        const options = { conversation: \"none\" };\n        await window.twttr.widgets.createTweet(data.attributes.statusID, contentElement, options);\n        // Remove a url if there is one around.\n        const url = contentElement.querySelector(\".tweet-url\");\n        if (url) {\n            url.remove();\n        }\n\n        // Fade it in.\n        contentElement.classList.add(\"js-twitterCardLoaded\");\n    }\n}\n\n/**\n * Convert all of the twitter embeds in the page. This is for transforming twitter embeds that were\n * server rendered.\n *\n * @see library/Vanilla/Embeds/EmbedManager.php\n */\nasync function convertTwitterEmbeds() {\n    const tweets = Array.from(document.querySelectorAll(\".js-twitterCard\"));\n    if (tweets.length > 0) {\n        await ensureScript(\"//platform.twitter.com/widgets.js\");\n        if (window.twttr) {\n            const promises = tweets.map(contentElement => {\n                // Get embed data out of the data attributes.\n                const statusID = contentElement.getAttribute(\"data-tweetid\");\n                const url = contentElement.getAttribute(\"data-tweeturl\") || \"\";\n\n                const renderData: IEmbedData = {\n                    type: \"twitter\",\n                    url,\n                    attributes: { statusID },\n                };\n\n                return renderTweet({ content: contentElement as HTMLElement, root: null as any }, renderData);\n            });\n\n            // Render all the pages twitter embeds at the same time.\n            await Promise.all(promises);\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { IEmbedProps, registerEmbedComponent } from \"@dashboard/embeds\";\nimport { simplifyFraction } from \"@dashboard/utility\";\nimport { t } from \"@dashboard/application\";\nimport { delegateEvent } from \"@dashboard/dom\";\nimport ReactDOM from \"react-dom\";\n\nexport function initVideoEmbeds() {\n    registerEmbedComponent(\"youtube\", VideoEmbed);\n    registerEmbedComponent(\"vimeo\", VideoEmbed);\n    registerEmbedComponent(\"twitch\", VideoEmbed);\n    registerEmbedComponent(\"wistia\", VideoEmbed);\n    delegateEvent(\"click\", \".js-playVideo\", handlePlayVideo);\n}\n\ninterface IState {\n    isPlaying: boolean;\n}\n\nexport class VideoEmbed extends BaseEmbed<IEmbedProps, IState> {\n    public constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false,\n        };\n    }\n    public render() {\n        const { name, height, width, attributes, photoUrl } = this.props.data;\n        const { embedUrl } = attributes;\n\n        const ratioClass = this.ratioClass;\n        const style: React.CSSProperties = ratioClass\n            ? {}\n            : {\n                  paddingTop: ((height || 3) / (width || 4)) * 100 + \"%\",\n              };\n\n        const thumbnail = (\n            <div className={`embedVideo-ratio ${ratioClass}`} style={style}>\n                <button\n                    type=\"button\"\n                    data-url={embedUrl}\n                    aria-label={name || undefined}\n                    className=\"embedVideo-playButton iconButton\"\n                >\n                    <img\n                        onClick={this.clickHandler}\n                        src={photoUrl || undefined}\n                        role=\"presentation\"\n                        className=\"embedVideo-thumbnail\"\n                    />\n                    <span className=\"embedVideo-scrim\" />\n                    <PlayIcon />\n                </button>\n            </div>\n        );\n\n        return this.state.isPlaying ? <VideoIframe url={embedUrl} /> : thumbnail;\n    }\n\n    private clickHandler = () => {\n        this.setState({ isPlaying: true });\n    };\n\n    private get ratioClass(): string | undefined {\n        const { height, width } = this.props.data;\n        const ratio = simplifyFraction(height || 3, width || 4);\n        switch (ratio.shorthand) {\n            case \"21:9\":\n                return \"is21by9\";\n            case \"16:9\":\n                return \"is16by9\";\n            case \"4:3\":\n                return \"is4by3\";\n            case \"1:1\":\n                return \"is1by1\";\n        }\n    }\n}\n\nfunction VideoIframe(props: { url: string }) {\n    return (\n        <iframe\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            className=\"embedVideo-iframe\"\n            src={props.url}\n            allowFullScreen={true}\n        />\n    );\n}\n\nfunction PlayIcon() {\n    const style: React.CSSProperties = { fill: \"currentColor\", strokeWidth: 0.3 };\n\n    return (\n        <svg className=\"embedVideo-playIcon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 -1 24 24\">\n            <title>{t(\"Play Video\")}</title>\n            <path\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-circle\"\n                style={style}\n                d=\"M11,0A11,11,0,1,0,22,11,11,11,0,0,0,11,0Zm0,20.308A9.308,9.308,0,1,1,20.308,11,9.308,9.308,0,0,1,11,20.308Z\"\n            />\n            <polygon\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-triangle\"\n                style={style}\n                points=\"8.609 6.696 8.609 15.304 16.261 11 8.609 6.696\"\n            />\n        </svg>\n    );\n}\n\n/**\n * Handle a click on a video.\n */\nfunction handlePlayVideo() {\n    // Inside of delegate event `this` is the current target of the event.\n    const playButton: HTMLElement = this;\n    const container = playButton.closest(\".embedVideo-ratio\");\n    if (container) {\n        const url = playButton.dataset.url as string;\n\n        ReactDOM.render(<VideoIframe url={url} />, container);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { delegateEvent } from \"@dashboard/dom\";\n\nexport function initSpoilers() {\n    // Setup\n    delegateEvent(\"click\", \".js-toggleSpoiler\", handleToggleSpoiler);\n}\n\n/**\n * Toggle a spoiler open and closed.\n */\nfunction handleToggleSpoiler() {\n    const toggleButton: HTMLElement = this;\n\n    const spoilerContainer = toggleButton.closest(\".spoiler\");\n    if (spoilerContainer) {\n        spoilerContainer.classList.toggle(\"isShowingSpoiler\");\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { getElementHeight } from \"@dashboard/dom\";\n\ninterface IProps {\n    id: string;\n    isCollapsed: boolean;\n    preferredMaxHeight: number; // The actual max height could exceed this, but once we pass it stop adding elements.\n    setNeedsCollapser?: (needsCollapser: boolean) => void;\n    dangerouslySetInnerHTML: {\n        __html: string;\n    };\n}\n\ninterface IState {\n    maxHeight: number | string;\n}\n\ninterface IHeightInfo {}\n\n/**\n * A class for dynamic collapsable user content.\n */\nexport default class CollapsableUserContent extends React.PureComponent<IProps, IState> {\n    public state = {\n        maxHeight: \"100%\",\n    };\n    private selfRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n    public render() {\n        const style: React.CSSProperties = { overflow: \"hidden\", maxHeight: this.state.maxHeight };\n\n        return (\n            <div\n                id={this.props.id}\n                className=\"collapsableContent userContent\"\n                style={style}\n                ref={this.selfRef}\n                dangerouslySetInnerHTML={this.props.dangerouslySetInnerHTML}\n            />\n        );\n    }\n\n    /**\n     * Do the initial height calculation and recalcuate if the window dimensions change.\n     */\n    public componentDidMount() {\n        this.calcMaxHeight();\n        window.addEventListener(\"resize\", () =>\n            debounce(() => {\n                this.calcMaxHeight();\n            }, 200)(),\n        );\n    }\n\n    /**\n     * If certain primary props change we need to recalculate the content height.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (\n            prevProps.dangerouslySetInnerHTML.__html !== this.props.dangerouslySetInnerHTML.__html ||\n            prevProps.isCollapsed !== this.props.isCollapsed\n        ) {\n            this.calcMaxHeight();\n        }\n    }\n\n    /**\n     * Calculate the exact pixel max height of the content around the threshold of preferredMaxHeight.\n     */\n    private getHeightInfo(): {\n        height: number | null;\n        needsCollapser: boolean;\n    } {\n        const self = this.selfRef.current;\n\n        if (self === null) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        if (self.childElementCount <= 1) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        let finalMaxHeight = 0;\n        let lastBottomMargin = 0;\n        for (const child of Array.from(self.children)) {\n            if (finalMaxHeight > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n\n            const { height, bottomMargin } = getElementHeight(child, lastBottomMargin);\n            if (finalMaxHeight > 0 && height > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n            lastBottomMargin = bottomMargin;\n\n            finalMaxHeight += height;\n        }\n\n        return {\n            height: finalMaxHeight,\n            needsCollapser: finalMaxHeight > this.props.preferredMaxHeight,\n        };\n    }\n\n    /**\n     * Calculate the CSS max height that we want to apply to the container div.\n     */\n    private calcMaxHeight() {\n        const { height, needsCollapser } = this.getHeightInfo();\n        if (needsCollapser && this.props.isCollapsed) {\n            this.setState({ maxHeight: height! });\n        } else {\n            this.setState({ maxHeight: this.selfRef.current!.scrollHeight });\n        }\n\n        this.props.setNeedsCollapser && this.props.setNeedsCollapser(needsCollapser);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { registerEmbedComponent, IEmbedProps, IEmbedData, IQuoteEmbedData } from \"@dashboard/embeds\";\nimport { onContent, t, formatUrl, makeProfileUrl } from \"@dashboard/application\";\nimport CollapsableUserContent from \"@dashboard/app/user-content/CollapsableContent\";\nimport uniqueId from \"lodash/uniqueId\";\nimport classnames from \"classnames\";\nimport api from \"@dashboard/apiv2\";\n\nexport function initQuoteEmbeds() {\n    registerEmbedComponent(\"quote\", QuoteEmbed as any);\n    onContent(mountQuoteEmbeds);\n}\n\n/**\n * Mount all of the existing quote embeds in the page.\n *\n * Data (including server rendered HTML content should be coming down in JSON encoded attribute data-json).\n */\nexport function mountQuoteEmbeds() {\n    const embeds = document.querySelectorAll(\".js-quoteEmbed\");\n    for (const embed of embeds) {\n        const data = embed.getAttribute(\"data-json\");\n        if (data) {\n            const quoteData = JSON.parse(data) as IEmbedData;\n            const onRenderComplete = () => {\n                embed.removeAttribute(\"data-json\");\n            };\n            ReactDOM.render(\n                <QuoteEmbed data={quoteData} inEditor={false} onRenderComplete={onRenderComplete} />,\n                embed,\n            );\n        }\n    }\n}\n\ninterface IState {\n    isCollapsed: boolean;\n    needsCollapseButton: boolean;\n    renderedBody: string;\n}\n\nfunction ChevronUpIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronUp\">\n            <title>{t(\"▲\")}</title>\n            <path\n                fill=\"currentColor\"\n                d=\"M0,3.6c0-0.1,0-0.2,0.1-0.3l3.5-3.1C3.7,0,3.9,0,4,0c0.1,0,0.3,0,0.4,0.1l3.5,3.1C8,3.3,8,3.4,8,3.6s0,0.2-0.1,0.3C7.8,4,7.6,4,7.5,4h-7C0.4,4,0.2,4,0.1,3.9C0,3.8,0,3.7,0,3.6z\"\n            />\n        </svg>\n    );\n}\n\nfunction ChevronDownIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronDown\">\n            <title>{t(\"▼\")}</title>\n            <path\n                fill=\"currentColor\"\n                d=\"M8,3.55555556 C8,3.43518519 7.95052083,3.33101852 7.8515625,3.24305556 L4.3515625,0.131944444 C4.25260417,0.0439814815 4.13541667,0 4,0 C3.86458333,0 3.74739583,0.0439814815 3.6484375,0.131944444 L0.1484375,3.24305556 C0.0494791667,3.33101852 -4.4408921e-16,3.43518519 -4.4408921e-16,3.55555556 C-4.4408921e-16,3.67592593 0.0494791667,3.78009259 0.1484375,3.86805556 C0.247395833,3.95601852 0.364583333,4 0.5,4 L7.5,4 C7.63541667,4 7.75260417,3.95601852 7.8515625,3.86805556 C7.95052083,3.78009259 8,3.67592593 8,3.55555556 Z\"\n                transform=\"matrix(1 0 0 -1 0 4)\"\n            />\n        </svg>\n    );\n}\n\n/**\n * An embed class for quoted user content on the same site.\n *\n * This is not an editable quote. Instead it an expandable/collapsable snapshot of the quoted/embedded comment/discussion.\n *\n * This can either recieve the post format and body (when created directly in the editor) or be given the fully rendered content (when mounting on top of existing server rendered DOM stuff).\n */\nexport class QuoteEmbed extends React.Component<IEmbedProps<IEmbedData>, IState> {\n    public state: IState = {\n        isCollapsed: true,\n        renderedBody: \"\",\n        needsCollapseButton: false,\n    };\n\n    public render() {\n        const { body, insertUser } = this.quoteData;\n        const id = uniqueId(\"collapsableContent-\");\n\n        const name = (this.quoteData as any).name;\n        const title = name ? <h3 className=\"embedText-title embedQuote-title\">{name}</h3> : null;\n\n        const bodyClasses = classnames(\"embedText-body\", \"embedQuote-body\", { isCollapsed: this.state.isCollapsed });\n        const userUrl = makeProfileUrl(insertUser.name);\n\n        return (\n            <blockquote className={bodyClasses}>\n                <div className=\"embedText-header embedQuote-header\">\n                    {title}\n                    <a href={userUrl} className=\"embedQuote-userLink\">\n                        <span className=\"embedQuote-userPhotoWrap\">\n                            <img\n                                src={insertUser.photoUrl}\n                                alt={insertUser.name}\n                                className=\"embedQuote-userPhoto\"\n                                tabIndex={-1}\n                            />\n                        </span>\n                        <span className=\"embedQuote-userName\">{insertUser.name}</span>\n                    </a>\n                    <time\n                        className=\"embedText-dateTime embedQuote-dateTime meta\"\n                        dateTime={this.dateTime}\n                        title={this.titleTime}\n                    >\n                        {this.humanTime}\n                    </time>\n\n                    {this.state.needsCollapseButton && (\n                        <button\n                            type=\"button\"\n                            className=\"embedQuote-collapseButton\"\n                            aria-label={t(\"Toggle Quote\")}\n                            onClick={this.toggleCollapseState}\n                            aria-pressed={this.state.isCollapsed}\n                        >\n                            {this.state.isCollapsed ? <ChevronDownIcon /> : <ChevronUpIcon />}\n                        </button>\n                    )}\n                </div>\n                <div className=\"embedText-main embedQuote-main\">\n                    <div className=\"embedQuote-excerpt userContent\">\n                        <CollapsableUserContent\n                            setNeedsCollapser={this.setNeedsCollapser}\n                            isCollapsed={this.state.isCollapsed}\n                            id={id}\n                            preferredMaxHeight={100}\n                            dangerouslySetInnerHTML={{ __html: body ? body : this.state.renderedBody }}\n                        />\n                    </div>\n                </div>\n            </blockquote>\n        );\n    }\n\n    /**\n     * When the component mounts we need to ensure we have rendered post content.\n     *\n     * Either we were passed the content, or we need to make an API call to render it.\n     */\n    public componentDidMount() {\n        if (this.quoteData.body) {\n            this.props.onRenderComplete();\n        } else {\n            const body =\n                this.quoteData.format === \"Rich\" ? JSON.stringify(this.quoteData.bodyRaw) : this.quoteData.bodyRaw;\n            void api\n                .post(\"/rich/quote\", {\n                    body,\n                    format: this.quoteData.format,\n                })\n                .then(response => {\n                    this.setState({ renderedBody: response.data.quote }, this.props.onRenderComplete);\n                });\n        }\n    }\n\n    /**\n     * Callback for the collapser to determine if we need to show the collapse toggle or not.\n     */\n    private setNeedsCollapser = needsCollapser => {\n        this.setState({ needsCollapseButton: needsCollapser });\n    };\n\n    /**\n     * Toggle the state of whether or not we are collapsed.\n     */\n    private toggleCollapseState = (event: React.ChangeEvent<any>) => {\n        event.preventDefault();\n        this.setState({ isCollapsed: !this.state.isCollapsed });\n    };\n\n    /**\n     * Get the quote embed data out of the scrape data.\n     */\n    private get quoteData(): IQuoteEmbedData {\n        return this.props.data.attributes as IQuoteEmbedData;\n    }\n\n    /**\n     * Get the timestamp to display.\n     */\n    private get dateTime(): string {\n        return this.quoteData.dateUpdated || this.quoteData.dateInserted;\n    }\n\n    /**\n     * Get the title of the time tag (long extended date)\n     */\n    private get titleTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(\n            undefined,\n            { year: \"numeric\", month: \"long\", day: \"numeric\", weekday: \"long\", hour: \"numeric\", minute: \"numeric\" },\n        );\n    }\n\n    /**\n     * Get a shorter human readable time for the time tag.\n     */\n    private get humanTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(\n            undefined,\n            { year: \"numeric\", month: \"short\", day: \"numeric\" },\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onReady, onContent } from \"@dashboard/application\";\nimport { convertToSafeEmojiCharacters } from \"@dashboard/dom\";\n\nexport function initEmojiSupport() {\n    // Emoji\n    onReady(() => convertToSafeEmojiCharacters(document.body));\n    onContent(() => convertToSafeEmojiCharacters(document.body));\n}\n","/**\n * Wire together the different parts of the application.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { addRoutes, addComponent, onReady } from \"@dashboard/application\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport SignInPage from \"@dashboard/app/authenticate/SignInPage\";\nimport PasswordPage from \"@dashboard/app/authenticate/PasswordPage\";\nimport RecoverPasswordPage from \"@dashboard/app/authenticate/RecoverPasswordPage\";\nimport Router from \"@dashboard/components/Router\";\nimport { stickyHeader } from \"@dashboard/dom\";\nimport { registerReducer } from \"@dashboard/state/reducerRegistry\";\nimport authenticateReducer from \"@dashboard/state/authenticate/authenticateReducer\";\nimport usersReducer from \"@dashboard/state/users/usersReducer\";\nimport { initCodePenEmbeds } from \"@dashboard/app/user-content/embeds/codepen\";\nimport { initGettyEmbeds } from \"@dashboard/app/user-content/embeds/getty\";\nimport { initGiphyEmbeds } from \"@dashboard/app/user-content/embeds/giphy\";\nimport { initImageEmbeds } from \"@dashboard/app/user-content/embeds/image\";\nimport { initImgurEmbeds } from \"@dashboard/app/user-content/embeds/imgur\";\nimport { initInstagramEmbeds } from \"@dashboard/app/user-content/embeds/instagram\";\nimport { initLinkEmbeds } from \"@dashboard/app/user-content/embeds/link\";\nimport { initSoundcloudEmbeds } from \"@dashboard/app/user-content/embeds/soundcloud\";\nimport { initTwitterEmbeds } from \"@dashboard/app/user-content/embeds/twitter\";\nimport { initVideoEmbeds } from \"@dashboard/app/user-content/embeds/video\";\nimport { initEmojiSupport } from \"@dashboard/app/user-content/emoji\";\nimport { initSpoilers } from \"@dashboard/app/user-content/spoilers\";\nimport { initQuoteEmbeds } from \"@dashboard/app/user-content/embeds/quote\";\n\n// User content\ninitEmojiSupport();\ninitSpoilers();\ninitCodePenEmbeds();\ninitGettyEmbeds();\ninitGiphyEmbeds();\ninitImageEmbeds();\ninitImgurEmbeds();\ninitInstagramEmbeds();\ninitLinkEmbeds();\ninitSoundcloudEmbeds();\ninitTwitterEmbeds();\ninitVideoEmbeds();\ninitQuoteEmbeds();\n\n// Redux\nregisterReducer(\"authenticate\", authenticateReducer);\nregisterReducer(\"users\", usersReducer);\n\n// Routing\naddComponent(\"App\", Router);\naddRoutes([\n    <Route exact path=\"/authenticate/signin\" component={SignInPage} />,\n    <Route exact path=\"/authenticate/password\" component={PasswordPage} />,\n    <Route exact path=\"/authenticate/recoverpassword\" component={RecoverPasswordPage} />,\n]);\n\n// Other site initializations\nonReady(() => {\n    stickyHeader();\n});\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nconst potentialPublicPath = window.gdn && window.gdn.meta && window.gdn.meta.WebRoot;\nconst finalPublicPath = potentialPublicPath != null ? potentialPublicPath : \"/\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = finalPublicPath;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent, onReady } from \"@dashboard/application\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initGettyEmbeds() {\n    registerEmbedRenderer(\"getty\", renderGetty);\n    onReady(convertGettyEmbeds);\n    onContent(convertGettyEmbeds);\n}\n\n/**\n * Render a single getty embed.\n */\nexport async function renderGetty(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    const url = data.attributes.post;\n    const newLink = document.createElement(\"a\");\n    newLink.classList.add(\"gie-single\");\n    newLink.setAttribute(\"href\", \"http://www.gettyimages.ca/detail/\" + url);\n    newLink.setAttribute(\"id\", data.attributes.id);\n    contentElement.style.width = `${data.width}px`;\n    contentElement.appendChild(newLink);\n    setImmediate(() => {\n        void loadGettyImages(data);\n    });\n}\n\n/**\n * Renders posted getty embeds.\n */\nasync function convertGettyEmbeds() {\n    const gettyPosts = document.querySelectorAll(\".js-gettyEmbed\");\n    if (gettyPosts.length > 0) {\n        for (const post of gettyPosts) {\n            const url = post.getAttribute(\"href\") || \"\";\n            const id = post.getAttribute(\"id\");\n            const sig = post.getAttribute(\"data-sig\");\n            const height = Number(post.getAttribute(\"data-height\")) || 1;\n            const width = Number(post.getAttribute(\"data-width\")) || 1;\n            const items = post.getAttribute(\"data-items\");\n            const capt = post.getAttribute(\"data-capt\");\n            const tld = post.getAttribute(\"data-tld\");\n            const i360 = post.getAttribute(\"data-is360\");\n            const data: IEmbedData = {\n                type: \"getty\",\n                url,\n                height,\n                width,\n                attributes: { id, sig, items, capt, tld, i360 },\n            };\n            await loadGettyImages(data);\n            post.classList.remove(\"js-gettyEmbed\");\n        }\n    }\n}\n\n/**\n * Loads getty embeds into a global object and fire getty's widget.js.\n * @param data\n * @returns {Promise<void>}\n */\nasync function loadGettyImages(data) {\n    const fallbackCallback = c => {\n        (window.gie.q = window.gie.q || []).push(c);\n    };\n    // This is part of Getty's embed code, we need to ensure embeds are loaded and sent to their widget.js script.\n    window.gie = window.gie || fallbackCallback;\n\n    window.gie(() => {\n        window.gie.widgets.load({\n            id: data.attributes.id,\n            sig: data.attributes.sig,\n            w: data.width + \"px\",\n            h: data.height + \"px\",\n            items: data.attributes.items,\n            caption: data.attributes.isCaptioned,\n            tld: data.attributes.tld,\n            is360: data.attributes.is360,\n        });\n    });\n\n    /// DO NOT IGNORE\n    /// This will turn totally sideways if window.gie is not populated before the script is initially loaded.\n    await ensureScript(\"//embed-cdn.gettyimages.com/widgets.js\");\n}\n"],"sourceRoot":""}