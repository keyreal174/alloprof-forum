{"version":3,"sources":["webpack://vanillaforum/./applications/dashboard/src/scripts/components/DocumentTitle.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/ErrorMessages.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Paragraph.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/InputTextBlock.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Checkbox.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Button.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/ButtonSubmit.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/state/authenticate/passwordActions.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/components/PasswordForm.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/components/SSOMethods.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/forms/Or.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/state/authenticate/authenticatorsActions.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/SignInPage.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/PasswordPage.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/components/RememberPasswordLink.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/state/users/requestPasswordActions.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/authenticate/RecoverPasswordPage.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/NotFoundPage.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/components/Router.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/state/authenticate/authenticatorsReducer.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/authenticate/passwordReducer.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/authenticate/authenticateReducer.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/users/requestPasswordReducer.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/state/users/usersReducer.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/BaseEmbed.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/codepen.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/giphy.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/image.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/imgur.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/instagram.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/link.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/soundcloud.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/twitter.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/video.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/spoilers.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/CollapsableContent.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/quote.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/emoji.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/index.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/index.tsx","webpack://vanillaforum/./applications/dashboard/src/scripts/legacy/atwho.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/legacy/index.ts","webpack://vanillaforum/./build/entries/public-path.ts","webpack://vanillaforum/./applications/dashboard/src/scripts/app/user-content/embeds/getty.ts"],"names":["_super","DocumentTitle","__extends","prototype","componentDidMount","document","title","this","getHeadTitle","props","componentWillUpdate","nextProps","render","children","react_default","a","createElement","siteTitle","Object","application","parts","length","push","join","Component","ErrorMessages","_this","call","state","id","componentIDs","ErrorMessages_extends","errors","componentClasses","classnames_default","className","errorList","map","error","index","key","message","Paragraph","Paragraph_extends","content","isError","accessibilityProps","aria-live","role","__assign","defaultProps","InputTextBlock","inputRef","createRef","onChange","event","InputTextBlock_extends","describedBy","inputClasses","inputClassNames","hasErrors","errorID","labelID","label","forms_Paragraph","labelNote","defaultValue","value","type","disabled","required","placeholder","aria-invalid","aria-describedby","aria-labelledby","ref","forms_ErrorMessages","current","addEventListener","componentWillUnount","removeEventListener","defineProperty","Error","focus","select","Button","Checkbox_extends","checked","aria-hidden","xmlns","viewBox","fill","d","prefix","Button_extends","ButtonSubmit","ButtonSubmit_extends","forms_Button","POST_AUTHENTICATE_PASSWORD_REQUEST","POST_AUTHENTICATE_PASSWORD_ERROR","POST_AUTHENTICATE_PASSWORD_SUCCESS","authenticatePasswordActions","utility","postAuthenticatePassword","params","dispatch","request","apiv2","post","then","response","success","urlParms","URLSearchParams","window","location","href","get","catch","axiosError","data","PasswordForm_PasswordForm","PasswordForm","usernameInput","passwordInput","handleCheckBoxChange","setState","rememberMe","target","handleUsernameChange","username","handlePasswordChange","password","handleSubmit","preventDefault","_a","authenticate","persist","PasswordForm_extends","formDescribedBy","globalErrorMessage","passwordState","formDescriptionID","method","onSubmit","noValidate","forms_InputTextBlock","allowEdit","defaultUsername","Checkbox","Link","to","forms_ButtonSubmit","allowSubmit","componentDidUpdate","prevProps","status","api","LOADING","components_PasswordForm","es","withRouter","SSOMethods","SSOMethods_extends","ssoMethods","methodStyles","backgroundColor","ui","undefined","color","foregroundColor","url","style","src","photoUrl","buttonName","Or","Or_extends","visible","PureComponent","GET_USER_AUTHENTICATORS_REQUEST","GET_USER_AUTHENTICATORS_SUCCESS","GET_USER_AUTHENTICATORS_ERROR","getAuthenticatorsActions","getUserAuthenticators","SignInPage_SignInPage","SignInPage","SignInPage_extends","authenticatorState","PENDING","loadAuthenticators","SUCCESS","showPassword","filter","react","components_DocumentTitle","titleID","components_SSOMethods","forms_Or","authenticate_SignInPage","authenticators","apply","arguments","PasswordPage_extends","RememberPasswordLink","RememberPasswordLink_extends","onClick","POST_REQUEST_PASSWORD_REQUEST","POST_REQUEST_PASSWORD_ERROR","POST_REQUEST_PASSWORD_SUCCESS","AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE","afterRequestPasswordSuccessNavigate","requestPasswordActions","postRequestPassword","RecoverPasswordPage_RecoverPasswordPage","RecoverPasswordPage","uniqueId_default","emainInput","handleEmailChange","email","pageTitleID","RecoverPasswordPage_extends","pageTitle","requestPasswordState","components_RememberPasswordLink","onNavigateAway","ERROR","authenticate_RecoverPasswordPage","users","requestPassword","NotFoundPage","NotFoundPage_extends","sprintf","toLowerCase","Router","Router_extends","routes","route","Router_assign","path","exact","Route","component","components_NotFoundPage","store","getStore","BrowserRouter","basename","Switch","initialState","passwordReducer_initialState","authenticate_authenticateReducer","redux","action","authenticatorsReducer_assign","payload","passwordReducer_assign","requestPasswordReducer_initialState","users_usersReducer","requestPasswordReducer_assign","BaseEmbed","BaseEmbed_extends","onRenderComplete","codepen_CodePenEmbed","CodePenEmbed","codepen_extends","attributes","height","scrolling","embeds_BaseEmbed","giphy_GiphyEmbed","GiphyEmbed","giphy_extends","width","postID","ratioStyle","maxWidth","paddingBottom","image_ImageEmbed","ImageEmbed","image_extends","name","sanitizedUrl","scripts_utility","rel","alt","imgur_ImgurEmbed","ImgurEmbed","imgur_extends","dataID","isAlbum","data-id","convertImgurEmbeds","images","Array","from","querySelectorAll","dom","sent","imgurEmbed","createIframe","imagesLength","i","tasks","instagram_InstagramEmbed","InstagramEmbed","instagram_extends","permaLink","versionNumber","isCaptioned","data-instgrmPermalink","data-instgrmVersion","data-instgrmCaptioned","convertInstagramEmbeds","instgrm","Embeds","process","link_LinkEmbed","LinkEmbed","link_extends","body","source","linkImage","dateTime","timestamp","humanTime","truncateEmbedLinks","container","forEach","el","untruncatedText","innerHTML","excerpt","maxHeight","parseInt","getComputedStyle","shave_es","truncateTextBasedOnMaxHeight","soundcloud_SoundcloudEmbed","SoundcloudEmbed","soundcloud_extends","visual","showArtwork","embedUrl","frameBorder","renderTweet","elements","contentElement","twttr","statusID","classList","contains","add","options","conversation","widgets","createTweet","querySelector","remove","convertTwitterEmbeds","tweets","promises","getAttribute","root","Promise","all","video_VideoEmbed","VideoEmbed","clickHandler","isPlaying","video_extends","ratioClass","paddingTop","thumbnail","data-url","aria-label","PlayIcon","VideoIframe","shorthand","allow","allowFullScreen","strokeWidth","points","handlePlayVideo","closest","dataset","react_dom_default","handleToggleSpoiler","spoilerContainer","toggle","CollapsableUserContent","selfRef","CollapsableContent_extends","overflow","dangerouslySetInnerHTML","calcMaxHeight","debounce_default","__html","isCollapsed","getHeightInfo","self","needsCollapser","childElementCount","finalMaxHeight","lastBottomMargin","_b","__values","_c","next","done","child","preferredMaxHeight","_d","bottomMargin","scrollHeight","setNeedsCollapser","mountQuoteEmbeds","embeds","embed","quoteData","JSON","parse","quote_QuoteEmbed","inEditor","removeAttribute","embeds_1","quote_values","embeds_1_1","ChevronUpIcon","stroke-linecap","fill-rule","transform","ChevronDownIcon","QuoteEmbed","renderedBody","needsCollapseButton","toggleCollapseState","quote_extends","insertUser","bodyClasses","userUrl","tabIndex","titleTime","aria-pressed","CollapsableContent","format","stringify","bodyRaw","quote","dateUpdated","dateInserted","Date","toLocaleString","year","month","day","weekday","hour","minute","scripts_embeds","getty","reducerRegistry","components_Router","PasswordPage","rawMatch","atCache","atEmpty","minCharacters","maxSuggestions","serverLimit","emojiData","emojis","emoji","emojiFormat","emojiAssetPath","assetPath","emojiList","entries","__read","emojiImageUrl","split","filename","ext","emojiTemplate","replace","matchAtMention","flag","subtext","shouldStartWithSpace","match","matchFakeEmoji","RegExp","exec","initializeAtComplete","editorElement","iframe","iframeWindow","contentWindow","$","atwho","at","tpl","limit","callbacks","remote_filter","query","callback","shouldContinueFiltering","filterString","l","slice","isQueryEmpty","hasOwnProperty","getJSON","q","isArray","result","before_insert","$li","requiresQuotation","test","hasQuotation","insert","highlighter","li","regexp","str","$1","$2","$3","$4","matcher","cWindow","insert_tpl","tplEval","on","offset","context","suggestionElement","view","$el","$inputor","lineHeight","css","iframeOffset","leftCoordinate","left","topCoordinate","top","selectHeight","text","fontMirror","font","fontWidth","each","element","outerHeight","windowHeight","scrollPosition","scrollTop","newOffset","fn","gdn","atCompleteInit","_dashboard_application__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","p","_dashboard_application__WEBPACK_IMPORTED_MODULE_2__","initGettyEmbeds","_dashboard_embeds__WEBPACK_IMPORTED_MODULE_0__","renderGetty","convertGettyEmbeds","newLink","setAttribute","appendChild","setImmediate","loadGettyImages","gettyPosts","gettyPosts_1","gettyPosts_1_1","sig","Number","items","capt","tld","i360","fallbackCallback","c","gie","load","w","h","caption","is360","_dashboard_dom__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"/applications/dashboard/js/webpack/forum.min.js?f9cb23ee3ddaa017e01f","sourcesContent":["/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { getMeta } from \"@dashboard/application\";\n\n/**\n * A component for displaying and setting the document title.\n *\n * This component can render a default title or a custom title depending on the usage.\n *\n * @example <caption>Render the title in the default h1</caption>\n * <DocumentTitle title=\"Page Title\" />\n *\n * @example <caption>Render a custom title</caption>\n * <DocumentTitle title=\"Title Bar Title >\n *     <h1>Page Title</h1>\n * </DocumentTitle>\n */\nexport default class DocumentTitle extends React.Component<IProps> {\n    public componentDidMount() {\n        document.title = this.getHeadTitle(this.props);\n    }\n\n    public componentWillUpdate(nextProps: IProps) {\n        document.title = this.getHeadTitle(nextProps);\n    }\n\n    public render() {\n        if (this.props.children) {\n            return this.props.children;\n        } else {\n            return <h1>{this.props.title}</h1>;\n        }\n    }\n\n    /**\n     * Calculate the status bar title from the props.\n     *\n     * @param props - The props used to calculate the title.\n     * @returns Returns the title as a string.\n     */\n    private getHeadTitle(props: IProps): string {\n        const siteTitle: string = getMeta(\"ui.siteName\", \"\");\n        const parts: string[] = [];\n\n        if (props.title && props.title.length > 0) {\n            parts.push(props.title);\n        }\n        if (siteTitle.length > 0 && siteTitle !== props.title) {\n            parts.push(siteTitle);\n        }\n\n        return parts.join(\" - \");\n    }\n}\n\ninterface IProps {\n    title: string;\n    children?: React.ReactNode;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\nimport { uniqueIDFromPrefix, getRequiredID, IRequiredComponentID } from \"@dashboard/componentIDs\";\nimport { IFieldError } from \"@dashboard/@types/api\";\n\ninterface IProps extends IRequiredComponentID {\n    className?: string;\n    errors?: IFieldError[];\n}\n\ninterface IState {\n    id: string;\n}\n\nexport default class ErrorMessages extends React.Component<IProps, IState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"errorMessages\") as string,\n        };\n    }\n\n    public render() {\n        const { errors } = this.props;\n\n        if (errors && errors.length > 0) {\n            const componentClasses = classNames(\"inputBlock-errors\", this.props.className);\n\n            const errorList = (errors as any).map((error: any, index) => {\n                return (\n                    <span key={index} className=\"inputBlock-error\">\n                        {error.message}\n                    </span>\n                );\n            });\n\n            return (\n                <span id={this.state.id} className={componentClasses}>\n                    {errorList}\n                </span>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    className?: string;\n    isError?: boolean;\n    content?: string | Node | null;\n}\n\nexport default class Paragraph extends React.Component<IProps> {\n    public static defaultProps = {\n        id: false,\n    };\n\n    public id: string;\n\n    constructor(props) {\n        super(props);\n        this.id = getOptionalID(props, \"Paragraph\") as string;\n    }\n\n    public render() {\n        if (this.props.content) {\n            const componentClasses = classNames({ isError: this.props.isError }, this.props.className);\n\n            let accessibilityProps = {};\n\n            if (this.props.isError) {\n                accessibilityProps = {\n                    \"aria-live\": \"assertive\",\n                    role: \"alert\",\n                };\n            }\n\n            return (\n                <p id={this.id} className={componentClasses} {...accessibilityProps}>\n                    {this.props.content}\n                </p>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport ErrorMessages from \"./ErrorMessages\";\nimport Paragraph from \"./Paragraph\";\nimport { getRequiredID, IOptionalComponentID } from \"@dashboard/componentIDs\";\nimport { IFieldError } from \"@dashboard/@types/api\";\n\nexport interface IInputTextProps extends IOptionalComponentID {\n    className?: string;\n    label: string;\n    value: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    labelNote?: string;\n    inputClassNames?: string;\n    type?: string;\n    labelID?: string;\n    defaultValue?: string;\n    placeholder?: string;\n    valid?: boolean;\n    descriptionID?: string;\n    required?: boolean;\n    errors?: IFieldError[];\n    disabled?: boolean;\n}\n\ninterface IState {\n    id: string;\n}\n\nexport default class InputTextBlock extends React.Component<IInputTextProps, IState> {\n    public static defaultProps = {\n        disabled: false,\n        type: \"text\",\n        errors: [],\n    };\n\n    private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n\n    public constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"inputText\") as string,\n        };\n    }\n\n    public render() {\n        const componentClasses = classNames(\"inputBlock\", this.props.className);\n        const inputClasses = classNames(\"inputBlock-inputText\", \"InputBox\", \"inputText\", this.props.inputClassNames);\n        const hasErrors = !!this.props.errors && this.props.errors.length > 0;\n\n        let describedBy;\n        if (hasErrors) {\n            describedBy = this.errorID;\n        }\n\n        return (\n            <label className={componentClasses}>\n                <span id={this.labelID} className=\"inputBlock-labelAndDescription\">\n                    <span className=\"inputBlock-labelText\">{this.props.label}</span>\n                    <Paragraph id={false} className=\"inputBlock-labelNote\" content={this.props.labelNote} />\n                </span>\n\n                <span className=\"inputBlock-inputWrap\">\n                    <input\n                        id={this.state.id}\n                        className={inputClasses}\n                        defaultValue={this.props.defaultValue}\n                        value={this.props.value}\n                        type={this.props.type}\n                        disabled={this.props.disabled}\n                        required={this.props.required}\n                        placeholder={this.props.placeholder}\n                        aria-invalid={hasErrors}\n                        aria-describedby={describedBy}\n                        aria-labelledby={this.labelID}\n                        onChange={this.onChange}\n                        ref={this.inputRef}\n                    />\n                </span>\n                <ErrorMessages id={this.errorID} errors={this.props.errors} />\n            </label>\n        );\n    }\n\n    /**\n     * Use a native change event instead of React's because of https://github.com/facebook/react/issues/1159\n     */\n    public componentDidMount() {\n        this.inputRef.current!.addEventListener(\"change\", this.onChange);\n    }\n\n    /**\n     * Use a native change event instead of React's because of https://github.com/facebook/react/issues/1159\n     */\n    public componentWillUnount() {\n        this.inputRef.current!.removeEventListener(\"change\", this.onChange);\n    }\n\n    public get value(): any {\n        return this.inputRef.current ? this.inputRef.current.value : \"\";\n    }\n\n    public set value(value) {\n        if (this.inputRef.current) {\n            this.inputRef.current.value = value;\n        } else {\n            throw new Error(\"inputDom does not exist\");\n        }\n    }\n\n    public focus() {\n        this.inputRef.current!.focus();\n    }\n\n    public select() {\n        this.inputRef.current!.select();\n    }\n\n    private onChange = event => {\n        if (this.props.onChange) {\n            this.props.onChange(event);\n        }\n    };\n\n    private get labelID(): string {\n        return this.state.id + \"-label\";\n    }\n\n    private get errorID(): string {\n        return this.state.id + \"-errors\";\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { uniqueIDFromPrefix, getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    id?: string;\n    className?: string;\n    checked: boolean;\n    disabled?: boolean;\n    onChange: any;\n    label: string;\n}\n\ninterface IState {\n    id: string;\n}\n\nexport default class Button extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        disabled: false,\n        id: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getOptionalID(props, \"checkbox\") as string,\n        };\n    }\n\n    get labelID(): string {\n        return this.state.id + \"-label\";\n    }\n\n    public render() {\n        const componentClasses = classNames(\"checkbox\", this.props.className);\n\n        return (\n            <label id={this.state.id} className={componentClasses}>\n                <input\n                    className=\"checkbox-input\"\n                    aria-labelledby={this.labelID}\n                    type=\"checkbox\"\n                    onChange={this.props.onChange}\n                    checked={this.props.checked}\n                />\n                <span className=\"checkbox-box\" aria-hidden=\"true\">\n                    <span className=\"checkbox-state\">\n                        <svg\n                            className=\"checkbox-icon checkbox-checkIcon\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 10 10\"\n                        >\n                            <title>{t(\"✓\")}</title>\n                            <path\n                                fill=\"currentColor\"\n                                d=\"M10,2.7c0-0.2-0.1-0.3-0.2-0.4L8.9,1.3c-0.2-0.2-0.6-0.2-0.9,0L3.8,5.6L1.9,3.7c-0.2-0.2-0.6-0.2-0.9,0L0.2,4.6c-0.2,0.2-0.2,0.6,0,0.9l3.2,3.2c0.2,0.2,0.6,0.2,0.9,0l5.5-5.5C9.9,3,10,2.8,10,2.7z\"\n                            />\n                        </svg>\n                    </span>\n                </span>\n                <span id={this.labelID} className=\"checkbox-label\">\n                    {this.props.label}\n                </span>\n            </label>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { uniqueIDFromPrefix, getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    className?: string;\n    type: string;\n    content: string | Node;\n    disabled?: boolean;\n    prefix: string;\n}\n\ninterface IState {\n    id?: string;\n}\n\nexport default class Button extends React.Component<IProps, IState> {\n    public static defaultProps = {\n        id: false,\n        disabled: false,\n        type: \"button\",\n        prefix: \"button\",\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getOptionalID(props, props.prefix) as string | undefined,\n        };\n    }\n\n    public render() {\n        const componentClasses = classNames(\"button\", \"Button\", this.props.className);\n\n        return (\n            <button\n                id={this.state.id}\n                disabled={this.props.disabled}\n                type={this.props.type}\n                className={componentClasses}\n            >\n                {this.props.content}\n            </button>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"./Button\";\nimport { uniqueIDFromPrefix, getOptionalID, IOptionalComponentID } from \"@dashboard/componentIDs\";\n\ninterface IProps extends IOptionalComponentID {\n    content: string | Node;\n    className?: string;\n    disabled?: boolean;\n}\n\nexport default class ButtonSubmit extends React.Component<IProps, IOptionalComponentID> {\n    public static defaultProps = {\n        disabled: false,\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    public render() {\n        const componentClasses = classNames(\n            \"Primary\",\n            \"buttonCTA\",\n            \"BigButton\",\n            \"button-fullWidth\",\n            this.props.className,\n        );\n\n        return (\n            <Button\n                id={this.props.id}\n                disabled={this.props.disabled}\n                type=\"submit\"\n                content={this.props.content}\n                className={componentClasses}\n                prefix=\"submitButton\"\n            >\n                {this.props.content}\n            </Button>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@dashboard/state/utility\";\nimport { IAuthenticatePasswordResponseData, IAuthenticatePasswordParams } from \"@dashboard/@types/api\";\nimport apiv2 from \"@dashboard/apiv2\";\nimport { AxiosResponse, AxiosError } from \"axios\";\nimport { formatUrl } from \"@dashboard/application\";\n\n// Authenticating user /authenticate/password\nexport const POST_AUTHENTICATE_PASSWORD_REQUEST = \"POST_AUTHENTICATE_PASSWORD_REQUEST\";\nexport const POST_AUTHENTICATE_PASSWORD_ERROR = \"POST_AUTHENTICATE_PASSWORD_ERROR\";\nexport const POST_AUTHENTICATE_PASSWORD_SUCCESS = \"POST_AUTHENTICATE_PASSWORD_SUCCESS\";\n\nconst authenticatePasswordActions = generateApiActionCreators(\n    POST_AUTHENTICATE_PASSWORD_REQUEST,\n    POST_AUTHENTICATE_PASSWORD_SUCCESS,\n    POST_AUTHENTICATE_PASSWORD_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IAuthenticatePasswordResponseData,\n    {} as IAuthenticatePasswordParams,\n);\n\nexport const postAuthenticatePassword = (params: IAuthenticatePasswordParams) => dispatch => {\n    dispatch(authenticatePasswordActions.request(params));\n    apiv2\n        .post(\"/authenticate/password\", params)\n        .then((response: AxiosResponse) => {\n            dispatch(authenticatePasswordActions.success(response, params));\n            const urlParms = new URLSearchParams();\n            window.location.href = formatUrl(urlParms.get(\"target\") || \"/\");\n        })\n        .catch((axiosError: AxiosError) => {\n            const error = axiosError.response ? axiosError.response.data : (axiosError as any);\n            dispatch(authenticatePasswordActions.error(error));\n        });\n};\n\nexport type ActionTypes = ActionsUnion<typeof authenticatePasswordActions>;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { getFieldErrors, getGlobalErrorMessage } from \"@dashboard/apiv2\";\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport InputTextBlock from \"@dashboard/components/forms/InputTextBlock\";\nimport Checkbox from \"@dashboard/components/forms/Checkbox\";\nimport ButtonSubmit from \"@dashboard/components/forms/ButtonSubmit\";\nimport Paragraph from \"@dashboard/components/forms/Paragraph\";\nimport { IRequiredComponentID, getRequiredID } from \"@dashboard/componentIDs\";\nimport { IStoreState, IPasswordState } from \"@dashboard/@types/state\";\nimport { postAuthenticatePassword } from \"@dashboard/state/authenticate/passwordActions\";\nimport { IAuthenticatePasswordParams, LoadStatus } from \"@dashboard/@types/api\";\nimport { connect } from \"react-redux\";\n\ninterface IProps {\n    passwordState: IPasswordState;\n    authenticate: typeof postAuthenticatePassword;\n    defaultUsername?: string;\n}\n\ninterface IState extends IRequiredComponentID {\n    rememberMe: boolean;\n    username: string;\n    password: string;\n    id: string;\n}\n\n/**\n * Username + password from for signins.\n */\nexport class PasswordForm extends React.Component<IProps, IState> {\n    private usernameInput: React.RefObject<InputTextBlock> = React.createRef();\n    private passwordInput: React.RefObject<InputTextBlock> = React.createRef();\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: getRequiredID(props, \"passwordForm\"),\n            rememberMe: true,\n            username: \"\",\n            password: \"\",\n        };\n    }\n\n    public render() {\n        let formDescribedBy;\n        const globalErrorMessage = getGlobalErrorMessage(this.props.passwordState, [\"username\", \"password\"]);\n        if (globalErrorMessage) {\n            formDescribedBy = this.formDescriptionID;\n        }\n\n        return (\n            <form\n                id={this.state.id}\n                aria-describedby={formDescribedBy}\n                className=\"passwordForm\"\n                method=\"post\"\n                onSubmit={this.handleSubmit}\n                noValidate\n            >\n                <Paragraph\n                    id={this.formDescriptionID}\n                    className=\"authenticateUser-paragraph\"\n                    content={globalErrorMessage}\n                    isError={true}\n                />\n                <InputTextBlock\n                    label={t(\"Email/Username\")}\n                    required={true}\n                    disabled={!this.allowEdit}\n                    errors={getFieldErrors(this.props.passwordState, \"username\")}\n                    defaultValue={this.props.defaultUsername || \"\"}\n                    ref={this.usernameInput}\n                    onChange={this.handleUsernameChange}\n                    value={this.state.username}\n                />\n                <InputTextBlock\n                    label={t(\"Password\")}\n                    required={true}\n                    disabled={!this.allowEdit}\n                    errors={getFieldErrors(this.props.passwordState, \"password\")}\n                    type=\"password\"\n                    ref={this.passwordInput}\n                    onChange={this.handlePasswordChange}\n                    value={this.state.password}\n                />\n                <div className=\"inputBlock inputBlock-tighter\">\n                    <div className=\"rememberMeAndForgot\">\n                        <span className=\"rememberMeAndForgot-rememberMe\">\n                            <Checkbox\n                                label={t(\"Keep me signed in\")}\n                                onChange={this.handleCheckBoxChange}\n                                checked={this.state.rememberMe}\n                            />\n                        </span>\n                        <span className=\"rememberMeAndForgot-forgot\">\n                            <Link to=\"/authenticate/recoverpassword\">{t(\"Forgot your password?\")}</Link>\n                        </span>\n                    </div>\n                </div>\n                <ButtonSubmit disabled={!this.allowSubmit} content={t(\"Sign In\")} />\n            </form>\n        );\n    }\n\n    /**\n     * Whenever the component gets new form state, we check for errors and focus the relavent errored inputs.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (this.props.passwordState === prevProps.passwordState) {\n            return;\n        }\n\n        if (getFieldErrors(this.props.passwordState, \"username\")) {\n            this.usernameInput.current!.select();\n        } else if (getFieldErrors(this.props.passwordState, \"password\")) {\n            this.passwordInput.current!.select();\n        } else {\n            this.usernameInput.current!.select();\n        }\n    }\n\n    /**\n     * Whether or not inputs in the form can be edited.\n     */\n    private get allowEdit() {\n        return this.props.passwordState.status !== LoadStatus.LOADING;\n    }\n\n    private get allowSubmit() {\n        const { username, password } = this.state;\n        return username.length > 0 && password.length > 0;\n    }\n\n    /**\n     * Handler for the remember me checkbox.\n     */\n    private handleCheckBoxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ rememberMe: event.target.checked || false });\n    };\n\n    /**\n     * Change handler for the email input.\n     */\n    private handleUsernameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ username: value });\n    };\n\n    /**\n     * Change handler for the email input.\n     */\n    private handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ password: value });\n    };\n\n    /**\n     * Submit handler for the form.\n     */\n    private handleSubmit = (event: React.SyntheticEvent<any>) => {\n        event.preventDefault();\n        const { username, password, rememberMe } = this.state;\n\n        this.props.authenticate({\n            username,\n            password,\n            persist: rememberMe,\n        });\n    };\n\n    /**\n     * Get the description ID for the form.\n     */\n    private get formDescriptionID() {\n        return this.state.id + \"-description\";\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        passwordState: authenticate.password,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        authenticate: (params: IAuthenticatePasswordParams) => {\n            dispatch(postAuthenticatePassword(params));\n        },\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\nexport default withRedux(withRouter(PasswordForm));\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport Paragraph from \"@dashboard/components/forms/Paragraph\";\nimport { IUserAuthenticator } from \"@dashboard/@types/api\";\n\ninterface IProps {\n    ssoMethods?: IUserAuthenticator[];\n}\n\nexport default class SSOMethods extends React.Component<IProps> {\n    public render() {\n        if (!this.props.ssoMethods || this.props.ssoMethods.length === 0) {\n            return null;\n        }\n\n        const ssoMethods = this.props.ssoMethods.map((method, index) => {\n            const methodStyles = {\n                backgroundColor: method.ui.backgroundColor || undefined,\n                color: method.ui.foregroundColor || undefined,\n            };\n            return (\n                <a\n                    href={method.ui.url}\n                    key={index}\n                    className=\"BigButton button Button button-sso button-fullWidth\"\n                    style={methodStyles}\n                >\n                    <span className=\"button-ssoContents\">\n                        <img src={method.ui.photoUrl || undefined} className=\"ssoMethod-icon\" aria-hidden={true} />\n                        <span className=\"button-ssoLabel\">{t(method.ui.buttonName)}</span>\n                        <span className=\"ssoMethod-icon ssoMethod-iconSpacer\" aria-hidden=\"true\" />\n                    </span>\n                </a>\n            );\n        });\n\n        return (\n            <div className=\"ssoMethods\">\n                <Paragraph content={t(\"Sign in with one of the following:\")} />\n                {ssoMethods}\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { t } from \"@dashboard/application\";\n\ninterface IProps {\n    visible: boolean;\n}\n\nexport default class Or extends React.PureComponent<IProps, {}> {\n    public static defaultProps: IProps = {\n        visible: true,\n    };\n\n    public render() {\n        return this.props.visible ? (\n            <div className=\"inputBlock-labelText authenticateUser-divider\">{t(\"or\")}</div>\n        ) : null;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk } from \"@dashboard/state/utility\";\nimport { IUserAuthenticator } from \"@dashboard/@types/api\";\n\nexport const GET_USER_AUTHENTICATORS_REQUEST = \"GET_USER_AUTHENTICATORS_REQUEST\";\nexport const GET_USER_AUTHENTICATORS_SUCCESS = \"GET_USER_AUTHENTICATORS_SUCCESS\";\nexport const GET_USER_AUTHENTICATORS_ERROR = \"GET_USER_AUTHENTICATORS_ERROR\";\n\nconst getAuthenticatorsActions = generateApiActionCreators(\n    GET_USER_AUTHENTICATORS_REQUEST,\n    GET_USER_AUTHENTICATORS_SUCCESS,\n    GET_USER_AUTHENTICATORS_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {} as IUserAuthenticator[],\n);\n\nexport const getUserAuthenticators = () =>\n    apiThunk(\"get\", \"authenticate/authenticators\", getAuthenticatorsActions, undefined);\n\nexport type ActionTypes = ActionsUnion<typeof getAuthenticatorsActions>;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\nimport PasswordForm from \"./components/PasswordForm\";\nimport SSOMethods from \"./components/SSOMethods\";\nimport { getRequiredID, IRequiredComponentID } from \"@dashboard/componentIDs\";\nimport Or from \"@dashboard/components/forms/Or\";\nimport PageLoading from \"@dashboard/components/PageLoading\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\nimport { IStoreState, IAuthenticatorState } from \"@dashboard/@types/state\";\nimport { getUserAuthenticators } from \"@dashboard/state/authenticate/authenticatorsActions\";\n\ninterface IProps {\n    authenticatorState: IAuthenticatorState;\n    loadAuthenticators: typeof getUserAuthenticators;\n}\n\nexport class SignInPage extends React.Component<IProps, IRequiredComponentID> {\n    public pageTitleID: string;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: getRequiredID(props, \"SignInPage\"),\n        };\n    }\n\n    get titleID(): string {\n        return this.state.id + \"-pageTitle\";\n    }\n\n    public componentDidMount() {\n        if (this.props.authenticatorState.status === LoadStatus.PENDING) {\n            this.props.loadAuthenticators();\n        }\n    }\n\n    public render() {\n        const { authenticatorState } = this.props;\n\n        if (authenticatorState.status !== LoadStatus.SUCCESS) {\n            // TODO: Use a generic fallback component for the other states.\n            return null;\n        }\n\n        let showPassword = false;\n        const ssoMethods = authenticatorState.data.filter(a => {\n            if (a.type === \"password\") {\n                showPassword = true;\n                return false;\n            }\n            return true;\n        });\n\n        return (\n            <div id={this.state.id} className=\"authenticateUserCol\">\n                <DocumentTitle title={t(\"Sign In\")}>\n                    <h1 id={this.titleID} className=\"isCentered\">\n                        {t(\"Sign In\")}\n                    </h1>\n                </DocumentTitle>\n                <SSOMethods ssoMethods={ssoMethods} />\n                <Or visible={showPassword && ssoMethods.length > 0} />\n                {showPassword && <PasswordForm />}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ authenticate }: IStoreState) {\n    return {\n        authenticatorState: authenticate.authenticators,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadAuthenticators: () => {\n            dispatch(getUserAuthenticators());\n        },\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(SignInPage);\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport * as React from \"react\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\nimport PasswordForm from \"./components/PasswordForm\";\nimport { uniqueIDFromPrefix } from \"@dashboard/componentIDs\";\n\nexport default class SignInPage extends React.Component {\n    private id = uniqueIDFromPrefix(\"PasswordPage\");\n\n    get titleID(): string {\n        return this.id + \"-pageTitle\";\n    }\n\n    public render() {\n        return (\n            <div className=\"authenticateUserCol\">\n                <DocumentTitle title={t(\"Sign In\")}>\n                    <h1 id={this.titleID} className=\"isCentered\">\n                        {t(\"Sign In\")}\n                    </h1>\n                </DocumentTitle>\n                <PasswordForm />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { t } from \"@dashboard/application\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n    onClick?: () => void;\n}\n\nexport default class RememberPasswordLink extends React.Component<IProps> {\n    public render() {\n        return (\n            <p className=\"authenticateUser-paragraph isCentered\">\n                {t(\"Remember your password?\")}{\" \"}\n                <Link onClick={this.props.onClick} to=\"/authenticate/signin\">\n                    {t(\"Sign In\")}\n                </Link>\n            </p>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { generateApiActionCreators, ActionsUnion, apiThunk, createAction } from \"@dashboard/state/utility\";\nimport { IRequestPasswordOptions } from \"@dashboard/@types/api\";\n\n// Authenticating user /authenticate/password\nexport const POST_REQUEST_PASSWORD_REQUEST = \"POST_REQUEST_PASSWORD_REQUEST\";\nexport const POST_REQUEST_PASSWORD_ERROR = \"POST_REQUEST_PASSWORD_ERROR\";\nexport const POST_REQUEST_PASSWORD_SUCCESS = \"POST_REQUEST_PASSWORD_SUCCESS\";\nexport const AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE = \"AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE\";\n\nexport const afterRequestPasswordSuccessNavigate = () => createAction(AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE);\n\nconst otherActions = {\n    afterRequestPasswordSuccessNavigate,\n};\n\nconst requestPasswordActions = generateApiActionCreators(\n    POST_REQUEST_PASSWORD_REQUEST,\n    POST_REQUEST_PASSWORD_SUCCESS,\n    POST_REQUEST_PASSWORD_ERROR,\n    // https://github.com/Microsoft/TypeScript/issues/10571#issuecomment-345402872\n    {},\n    {} as IRequestPasswordOptions,\n);\n\nexport type ActionTypes = ActionsUnion<typeof requestPasswordActions> | ActionsUnion<typeof otherActions>;\n\nexport const postRequestPassword = (params: IRequestPasswordOptions) =>\n    apiThunk(\"post\", \"users/request-password\", requestPasswordActions, params);\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { getFieldErrors, getGlobalErrorMessage } from \"@dashboard/apiv2\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\nimport React from \"react\";\nimport ButtonSubmit from \"@dashboard/components/forms/ButtonSubmit\";\nimport Paragraph from \"@dashboard/components/forms/Paragraph\";\nimport InputTextBlock from \"@dashboard/components/forms/InputTextBlock\";\nimport RememberPasswordLink from \"./components/RememberPasswordLink\";\nimport uniqueId from \"lodash/uniqueId\";\nimport { IStoreState, IRequestPasswordState } from \"@dashboard/@types/state\";\nimport { IRequestPasswordOptions, LoadStatus } from \"@dashboard/@types/api\";\nimport {\n    postRequestPassword,\n    afterRequestPasswordSuccessNavigate,\n} from \"@dashboard/state/users/requestPasswordActions\";\nimport { connect } from \"react-redux\";\n\ninterface IState {\n    email: string;\n}\n\ninterface IProps {\n    requestPasswordState: IRequestPasswordState;\n    postRequestPassword: typeof postRequestPassword;\n    onNavigateAway: () => void;\n}\n\nexport class RecoverPasswordPage extends React.Component<IProps, IState> {\n    public id = uniqueId(\"RecoverPasswordPage\");\n    public pageTitleID: string;\n    public emainInput: React.RefObject<InputTextBlock> = React.createRef();\n\n    constructor(props) {\n        super(props);\n        this.id = this.pageTitleID = this.id + \"-pageTitle\";\n\n        this.state = {\n            email: \"\",\n        };\n    }\n\n    public render() {\n        const pageTitle = (\n            <DocumentTitle title={t(\"Recover Password\")}>\n                <h1 id={this.pageTitleID} className=\"isCentered\">\n                    {t(\"Recover Password\")}\n                </h1>\n            </DocumentTitle>\n        );\n\n        if (this.props.requestPasswordState.status === LoadStatus.SUCCESS) {\n            return (\n                <div id={this.id} className=\"authenticateUserCol\">\n                    {pageTitle}\n                    <Paragraph\n                        content={t(\"A message has been sent to your email address with password reset instructions.\")}\n                        className=\"authenticateUser-paragraph\"\n                    />\n                    <RememberPasswordLink onClick={this.props.onNavigateAway} />\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"authenticateUserCol\">\n                    {pageTitle}\n                    <Paragraph\n                        content={t(\"RecoverPasswordLabelCode\", \"Enter your email to continue.\")}\n                        className=\"authenticateUser-paragraph\"\n                    />\n                    <form id={this.id} onSubmit={this.handleSubmit} aria-labelledby={this.pageTitleID} noValidate>\n                        <Paragraph\n                            className=\"authenticateUser-paragraph\"\n                            content={getGlobalErrorMessage(this.props.requestPasswordState, [\"email\"])}\n                            isError={true}\n                        />\n                        <InputTextBlock\n                            label={t(\"Email\")}\n                            required={true}\n                            disabled={!this.allowEdit}\n                            errors={getFieldErrors(this.props.requestPasswordState, \"email\")}\n                            value={this.state.email}\n                            onChange={this.handleEmailChange}\n                            ref={this.emainInput}\n                        />\n                        <ButtonSubmit\n                            disabled={!this.allowEdit || this.state.email.length === 0}\n                            content={t(\"Request a new password\")}\n                        />\n                    </form>\n                    <RememberPasswordLink />\n                </div>\n            );\n        }\n    }\n\n    /**\n     * Whenever the component gets new form state, we check for errors and focus the relavent errored inputs.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (this.props.requestPasswordState === prevProps.requestPasswordState) {\n            return;\n        }\n        if (this.props.requestPasswordState.status === LoadStatus.ERROR) {\n            this.emainInput.current!.select();\n        }\n    }\n\n    /**\n     * Change handler for the email input.\n     */\n    private handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        this.setState({ email: value });\n    };\n\n    /**\n     * Submit handler for the form.\n     */\n    private handleSubmit = event => {\n        event.preventDefault();\n        const { email } = this.state;\n        this.props.postRequestPassword({ email });\n    };\n\n    /**\n     * Whether or not the user can edit elements in the form.\n     */\n    private get allowEdit() {\n        return this.props.requestPasswordState.status !== LoadStatus.LOADING;\n    }\n}\n\nfunction mapStateToProps({ users }: IStoreState) {\n    return {\n        requestPasswordState: users.requestPassword,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        postRequestPassword: (params: IRequestPasswordOptions) => {\n            dispatch(postRequestPassword(params));\n        },\n        onNavigateAway: () => {\n            dispatch(afterRequestPasswordSuccessNavigate());\n        },\n    };\n}\n\nconst withRedux = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\n\nexport default withRedux(RecoverPasswordPage);\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { sprintf } from \"sprintf-js\";\nimport { t } from \"@dashboard/application\";\nimport DocumentTitle from \"@dashboard/components/DocumentTitle\";\n\nexport default class NotFoundPage extends React.PureComponent<IProps> {\n    public static defaultProps = {\n        type: \"Page\",\n    };\n\n    public render() {\n        return (\n            <div className=\"Center SplashInfo\">\n                <DocumentTitle title={this.title} />\n                <div>{this.message}</div>\n            </div>\n        );\n    }\n\n    private get title() {\n        return this.props.title || sprintf(t(\"%s Not Found\"), t(this.props.type));\n    }\n\n    private get message() {\n        return (\n            this.props.message ||\n            sprintf(t(\"The %s you were looking for could not be found.\"), t(this.props.type.toLowerCase()))\n        );\n    }\n}\n\ninterface IProps {\n    type: string;\n    title?: string;\n    message?: string;\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { BrowserRouter, Route, RouteProps, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { getRoutes, getMeta } from \"@dashboard/application\";\nimport NotFoundPage from \"@dashboard/components/NotFoundPage\";\nimport getStore from \"@dashboard/state/getStore\";\n\n/**\n * The root application component.\n *\n * This component renders the top-level pages that have been registered with {@link module:application.addRoutes}.\n */\nexport default class Router extends React.PureComponent {\n    public render() {\n        const routes = getRoutes().map((route: React.ReactElement<RouteProps>) => {\n            return <route.type key={route.key || route.props.path + (route.props.exact ? \"!\" : \"\")} {...route.props} />;\n        });\n\n        routes.push(<Route key=\"@not-found\" component={NotFoundPage} />);\n\n        return (\n            <Provider store={getStore()}>\n                <BrowserRouter basename={getMeta(\"context.basePath\", \"\")}>\n                    <Switch>{routes}</Switch>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport * as actions from \"@dashboard/state/authenticate/authenticatorsActions\";\nimport { IAuthenticatorState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\n\nconst initialState: IAuthenticatorState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function authenticatorsReducer(\n    state: IAuthenticatorState = initialState,\n    action: actions.ActionTypes,\n): IAuthenticatorState {\n    switch (action.type) {\n        case actions.GET_USER_AUTHENTICATORS_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.GET_USER_AUTHENTICATORS_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.GET_USER_AUTHENTICATORS_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport * as actions from \"@dashboard/state/authenticate/passwordActions\";\nimport { IPasswordState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\n\nconst initialState: IPasswordState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function passwordReducer(\n    state: IPasswordState = initialState,\n    action: actions.ActionTypes,\n): IPasswordState {\n    switch (action.type) {\n        case actions.POST_AUTHENTICATE_PASSWORD_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.POST_AUTHENTICATE_PASSWORD_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.POST_AUTHENTICATE_PASSWORD_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { combineReducers } from \"redux\";\nimport authenticatorsReducer from \"@dashboard/state/authenticate/authenticatorsReducer\";\nimport passwordReducer from \"@dashboard/state/authenticate/passwordReducer\";\n\nconst authenticateReducer = combineReducers({\n    authenticators: authenticatorsReducer,\n    password: passwordReducer,\n});\n\nexport default authenticateReducer;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport * as actions from \"@dashboard/state/users/requestPasswordActions\";\nimport { IRequestPasswordState } from \"@dashboard/@types/state\";\nimport { LoadStatus } from \"@dashboard/@types/api\";\n\nconst initialState: IRequestPasswordState = {\n    status: LoadStatus.PENDING,\n};\n\nexport default function passwordReducer(\n    state: IRequestPasswordState = initialState,\n    action: actions.ActionTypes,\n): IRequestPasswordState {\n    switch (action.type) {\n        case actions.POST_REQUEST_PASSWORD_REQUEST:\n            return {\n                ...state,\n                status: LoadStatus.LOADING,\n            };\n        case actions.POST_REQUEST_PASSWORD_SUCCESS:\n            return {\n                status: LoadStatus.SUCCESS,\n                data: action.payload.data,\n                error: undefined,\n            };\n        case actions.POST_REQUEST_PASSWORD_ERROR:\n            return {\n                ...state,\n                status: LoadStatus.ERROR,\n                error: action.payload,\n            };\n        case actions.AFTER_REQUEST_PASSWORD_SUCCESS_NAVIGATE:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","/**\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { combineReducers } from \"redux\";\nimport requestPasswordReducer from \"@dashboard/state/users/requestPasswordReducer\";\n\nconst usersReducer = combineReducers({\n    requestPassword: requestPasswordReducer,\n});\n\nexport default usersReducer;\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport { IEmbedProps } from \"@dashboard/embeds\";\n\n/**\n * A base embed react component class.\n * @see {registerEmbedComponent}\n */\nexport default abstract class BaseEmbed<P extends IEmbedProps = IEmbedProps, S = {}> extends React.Component<P, S> {\n    public componentDidMount() {\n        this.props.onRenderComplete();\n    }\n\n    public abstract render();\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initCodePenEmbeds() {\n    registerEmbedComponent(\"codepen\", CodePenEmbed);\n}\n\nexport class CodePenEmbed extends BaseEmbed {\n    public render() {\n        const { attributes, height } = this.props.data;\n        const { id, src, style } = attributes;\n\n        return <iframe id={id} src={src} height={height || 300} style={style} scrolling=\"no\" />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initGiphyEmbeds() {\n    registerEmbedComponent(\"giphy\", GiphyEmbed);\n}\n\nexport class GiphyEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, width, height } = data;\n        const { postID } = attributes;\n        const paddingBottom = ((height || 1) / (width || 1)) * 100 + \"%\";\n        const ratioStyle: React.CSSProperties = {\n            maxWidth: width ? width + \"px\" : \"100%\",\n            paddingBottom,\n        };\n\n        if (!postID) {\n            throw new Error(\"Giphy embed fail, the post could not be found\");\n        }\n        const src = `https://giphy.com/embed/${postID}`;\n\n        return (\n            <div className=\"embedExternal-ratio\" style={ratioStyle}>\n                <iframe src={src} className=\"giphy-embed embedGiphy-iframe\" />\n            </div>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\n\nexport function initImageEmbeds() {\n    registerEmbedComponent(\"image\", ImageEmbed);\n}\n\nexport class ImageEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { url, name } = data;\n        const sanitizedUrl = sanitizeUrl(url);\n\n        // Yes we actually want a target blank here (even if we don't want it on normal links).\n        return (\n            <a className=\"embedImage-link\" href={sanitizedUrl || \"\"} rel=\"nofollow noopener\" target=\"_blank\">\n                <img className=\"embedImage-img\" src={url || \"\"} alt={name || \"\"} />\n            </a>\n        );\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initImgurEmbeds() {\n    registerEmbedComponent(\"imgur\", ImgurEmbed);\n    onContent(convertImgurEmbeds);\n}\n\nexport class ImgurEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes } = data;\n        const { postID, isAlbum } = attributes;\n\n        const dataID = isAlbum ? `a/${postID}` : postID;\n        const url = `//imgur.com/${postID}`;\n\n        return <blockquote className=\"imgur-embed-pub\" data-id={dataID} />;\n    }\n\n    public componentDidMount() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertImgurEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted imgur embeds.\n */\nexport async function convertImgurEmbeds() {\n    const images = Array.from(document.querySelectorAll(\".imgur-embed-pub\"));\n    if (images.length > 0) {\n        await ensureScript(\"//s.imgur.com/min/embed.js\");\n\n        if (!window.imgurEmbed) {\n            throw new Error(\"The Imgur post failed to load\");\n        }\n\n        if (window.imgurEmbed.createIframe) {\n            const imagesLength = images.length;\n            for (let i = 0; i < imagesLength; i++) {\n                window.imgurEmbed.createIframe();\n            }\n        } else {\n            window.imgurEmbed.tasks = images.length;\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initInstagramEmbeds() {\n    registerEmbedComponent(\"instagram\", InstagramEmbed);\n    onContent(convertInstagramEmbeds);\n}\n\nexport class InstagramEmbed extends BaseEmbed {\n    public render() {\n        const { data } = this.props;\n        const { attributes, url } = data;\n        const { permaLink, versionNumber, isCaptioned } = attributes;\n        if (!data.attributes.permaLink) {\n            throw new Error(\"Attempted to embed a Instagram post failed link is invalid\");\n        }\n\n        return (\n            <blockquote\n                className=\"instagram-media\"\n                data-instgrmPermalink={permaLink}\n                data-instgrmVersion={versionNumber}\n                data-instgrmCaptioned={isCaptioned}\n            >\n                <a href={url}>{url}</a>\n            </blockquote>\n        );\n    }\n\n    public componentDidMount() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n\n    public componentDidUpdate() {\n        void convertInstagramEmbeds().then(this.props.onRenderComplete);\n    }\n}\n\n/**\n * Renders posted instagram embeds.\n */\nexport async function convertInstagramEmbeds() {\n    const instagramEmbeds = document.querySelectorAll(\".instagram-media\");\n    if (instagramEmbeds.length > 0) {\n        await ensureScript(\"//platform.instagram.com/en_US/embeds.js\");\n\n        if (!window.instgrm) {\n            throw new Error(\"The Instagram post failed to load\");\n        }\n\n        window.instgrm.Embeds.process();\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { sanitizeUrl } from \"@dashboard/utility\";\nimport { getData, setData } from \"@dashboard/dom\";\nimport debounce from \"lodash/debounce\";\nimport shave from \"shave\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initLinkEmbeds() {\n    registerEmbedComponent(\"link\", LinkEmbed);\n    truncateEmbedLinks();\n\n    // Retruncate links when the window resizes.\n    window.addEventListener(\"resize\", () => debounce(truncateEmbedLinks, 200)());\n}\n\nexport class LinkEmbed extends BaseEmbed {\n    public render() {\n        const { name, attributes, url, photoUrl, body } = this.props.data;\n        const title = name ? <h3 className=\"embedText-title embedLink-title\">{name}</h3> : null;\n\n        const source = <span className=\"embedLink-source meta\">{url}</span>;\n\n        let linkImage: JSX.Element | null = null;\n        if (photoUrl) {\n            linkImage = <img src={photoUrl} className=\"embedLink-image\" aria-hidden=\"true\" />;\n        }\n        const dateTime =\n            attributes.timestamp && attributes.humanTime ? (\n                <time className=\"embedLink-dateTime meta\" dateTime={attributes.timestamp}>\n                    {attributes.humanTime}\n                </time>\n            ) : null;\n\n        const sanitizedUrl = sanitizeUrl(url);\n        return (\n            <a className=\"embedLink-link\" href={sanitizedUrl} rel=\"noreferrer\">\n                <article className=\"embedText-body embedLink-body\">\n                    {linkImage}\n                    <div className=\"embedText-main embedLink-main\">\n                        <div className=\"embedText-header embedLink-header\">\n                            {title}\n                            {dateTime}\n                            {source}\n                        </div>\n                        <div className=\"embedLink-excerpt\">{body}</div>\n                    </div>\n                </article>\n            </a>\n        );\n    }\n}\n\n/**\n * Truncate embed link excerpts in a container\n *\n * @param container - Element containing embeds to truncate\n */\nexport function truncateEmbedLinks(container = document.body) {\n    const embeds = container.querySelectorAll(\".embedLink-excerpt\");\n    embeds.forEach(el => {\n        let untruncatedText = getData(el, \"untruncatedText\");\n\n        if (!untruncatedText) {\n            untruncatedText = el.innerHTML;\n            setData(el, \"untruncatedText\", untruncatedText);\n        } else {\n            el.innerHTML = untruncatedText;\n        }\n        truncateTextBasedOnMaxHeight(el);\n    });\n}\n\n/**\n * Truncate element text based on max-height\n *\n * @param excerpt - The excerpt to truncate.\n */\nfunction truncateTextBasedOnMaxHeight(excerpt: Element) {\n    const maxHeight = parseInt(getComputedStyle(excerpt)[\"max-height\"], 10);\n    if (maxHeight && maxHeight > 0) {\n        shave(excerpt, maxHeight);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { registerEmbedComponent } from \"@dashboard/embeds\";\n\nexport function initSoundcloudEmbeds() {\n    registerEmbedComponent(\"soundcloud\", SoundcloudEmbed);\n}\n\nexport class SoundcloudEmbed extends BaseEmbed {\n    public render() {\n        const { attributes } = this.props.data;\n        const { postID, visual, showArtwork, embedUrl } = attributes;\n\n        // Ensure this is a track.\n        if (postID == null) {\n            throw new Error(\"Soundcloud embed fail, the track could not be found\");\n        }\n\n        const url = embedUrl + postID + \"&visual=\" + (visual || \"false\") + \"&show_artwork=\" + (showArtwork || \"false\");\n\n        return <iframe width=\"100%\" scrolling=\"no\" frameBorder=\"no\" src={url} />;\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent } from \"@dashboard/application\";\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initTwitterEmbeds() {\n    registerEmbedRenderer(\"twitter\", renderTweet);\n    onContent(convertTwitterEmbeds);\n    void convertTwitterEmbeds().then();\n}\n\n/**\n * Render a single twitter embed.\n */\nexport async function renderTweet(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    // Ensure the twitter library is loaded.\n    await ensureScript(\"//platform.twitter.com/widgets.js\");\n\n    if (!window.twttr) {\n        throw new Error(\"The Twitter widget failed to load.\");\n    }\n\n    // Ensure we have a status id to look up.\n    if (data.attributes.statusID == null) {\n        throw new Error(\"Attempted to embed a tweet but the statusID could not be found\");\n    }\n\n    // Check that we haven't already started to load this embed (In the case multiple onContents are fired off).\n    if (\n        !contentElement.classList.contains(\"js-twitterCardLoaded\") &&\n        !contentElement.classList.contains(\"js-twitterCardPreload\")\n    ) {\n        contentElement.classList.add(\"js-twitterCardPreload\");\n\n        // Render the embed.\n        const options = { conversation: \"none\" };\n        await window.twttr.widgets.createTweet(data.attributes.statusID, contentElement, options);\n        // Remove a url if there is one around.\n        const url = contentElement.querySelector(\".tweet-url\");\n        if (url) {\n            url.remove();\n        }\n\n        // Fade it in.\n        contentElement.classList.add(\"js-twitterCardLoaded\");\n    }\n}\n\n/**\n * Convert all of the twitter embeds in the page. This is for transforming twitter embeds that were\n * server rendered.\n *\n * @see library/Vanilla/Embeds/EmbedManager.php\n */\nexport async function convertTwitterEmbeds() {\n    const tweets = Array.from(document.querySelectorAll(\".js-twitterCard\"));\n    if (tweets.length > 0) {\n        await ensureScript(\"//platform.twitter.com/widgets.js\");\n        if (window.twttr) {\n            const promises = tweets.map(contentElement => {\n                // Get embed data out of the data attributes.\n                const statusID = contentElement.getAttribute(\"data-tweetid\");\n                const url = contentElement.getAttribute(\"data-tweeturl\") || \"\";\n\n                const renderData: IEmbedData = {\n                    type: \"twitter\",\n                    url,\n                    attributes: { statusID },\n                };\n\n                return renderTweet({ content: contentElement as HTMLElement, root: null as any }, renderData);\n            });\n\n            // Render all the pages twitter embeds at the same time.\n            await Promise.all(promises);\n        }\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport BaseEmbed from \"@dashboard/app/user-content/embeds/BaseEmbed\";\nimport { IEmbedProps, registerEmbedComponent } from \"@dashboard/embeds\";\nimport { simplifyFraction } from \"@dashboard/utility\";\nimport { t } from \"@dashboard/application\";\nimport { delegateEvent } from \"@dashboard/dom\";\nimport ReactDOM from \"react-dom\";\n\nexport function initVideoEmbeds() {\n    registerEmbedComponent(\"youtube\", VideoEmbed);\n    registerEmbedComponent(\"vimeo\", VideoEmbed);\n    registerEmbedComponent(\"twitch\", VideoEmbed);\n    registerEmbedComponent(\"wistia\", VideoEmbed);\n    delegateEvent(\"click\", \".js-playVideo\", handlePlayVideo);\n}\n\ninterface IState {\n    isPlaying: boolean;\n}\n\nexport class VideoEmbed extends BaseEmbed<IEmbedProps, IState> {\n    public constructor(props) {\n        super(props);\n        this.state = {\n            isPlaying: false,\n        };\n    }\n    public render() {\n        const { name, height, width, attributes, photoUrl } = this.props.data;\n        const { embedUrl } = attributes;\n\n        const ratioClass = this.ratioClass;\n        const style: React.CSSProperties = ratioClass\n            ? {}\n            : {\n                  paddingTop: ((height || 3) / (width || 4)) * 100 + \"%\",\n              };\n\n        const thumbnail = (\n            <div className={`embedVideo-ratio ${ratioClass}`} style={style}>\n                <button\n                    type=\"button\"\n                    data-url={embedUrl}\n                    aria-label={name || undefined}\n                    className=\"embedVideo-playButton iconButton\"\n                >\n                    <img\n                        onClick={this.clickHandler}\n                        src={photoUrl || undefined}\n                        role=\"presentation\"\n                        className=\"embedVideo-thumbnail\"\n                    />\n                    <span className=\"embedVideo-scrim\" />\n                    <PlayIcon />\n                </button>\n            </div>\n        );\n\n        return this.state.isPlaying ? <VideoIframe url={embedUrl} /> : thumbnail;\n    }\n\n    private clickHandler = () => {\n        this.setState({ isPlaying: true });\n    };\n\n    private get ratioClass(): string | undefined {\n        const { height, width } = this.props.data;\n        const ratio = simplifyFraction(height || 3, width || 4);\n        switch (ratio.shorthand) {\n            case \"21:9\":\n                return \"is21by9\";\n            case \"16:9\":\n                return \"is16by9\";\n            case \"4:3\":\n                return \"is4by3\";\n            case \"1:1\":\n                return \"is1by1\";\n        }\n    }\n}\n\nfunction VideoIframe(props: { url: string }) {\n    return (\n        <iframe\n            frameBorder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            className=\"embedVideo-iframe\"\n            src={props.url}\n            allowFullScreen={true}\n        />\n    );\n}\n\nfunction PlayIcon() {\n    const style: React.CSSProperties = { fill: \"currentColor\", strokeWidth: 0.3 };\n\n    return (\n        <svg className=\"embedVideo-playIcon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 -1 24 24\">\n            <title>{t(\"Play Video\")}</title>\n            <path\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-circle\"\n                style={style}\n                d=\"M11,0A11,11,0,1,0,22,11,11,11,0,0,0,11,0Zm0,20.308A9.308,9.308,0,1,1,20.308,11,9.308,9.308,0,0,1,11,20.308Z\"\n            />\n            <polygon\n                className=\"embedVideo-playIconPath embedVideo-playIconPath-triangle\"\n                style={style}\n                points=\"8.609 6.696 8.609 15.304 16.261 11 8.609 6.696\"\n            />\n        </svg>\n    );\n}\n\n/**\n * Handle a click on a video.\n */\nfunction handlePlayVideo() {\n    // Inside of delegate event `this` is the current target of the event.\n    const playButton: HTMLElement = this;\n    const container = playButton.closest(\".embedVideo-ratio\");\n    if (container) {\n        const url = playButton.dataset.url as string;\n\n        ReactDOM.render(<VideoIframe url={url} />, container);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { delegateEvent } from \"@dashboard/dom\";\n\nexport function initSpoilers() {\n    // Setup\n    delegateEvent(\"click\", \".js-toggleSpoiler\", handleToggleSpoiler);\n}\n\n/**\n * Toggle a spoiler open and closed.\n */\nfunction handleToggleSpoiler() {\n    const toggleButton: HTMLElement = this;\n\n    const spoilerContainer = toggleButton.closest(\".spoiler\");\n    if (spoilerContainer) {\n        spoilerContainer.classList.toggle(\"isShowingSpoiler\");\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { getElementHeight } from \"@dashboard/dom\";\n\ninterface IProps {\n    id: string;\n    isCollapsed: boolean;\n    preferredMaxHeight: number; // The actual max height could exceed this, but once we pass it stop adding elements.\n    setNeedsCollapser?: (needsCollapser: boolean) => void;\n    dangerouslySetInnerHTML: {\n        __html: string;\n    };\n}\n\ninterface IState {\n    maxHeight: number | string;\n}\n\ninterface IHeightInfo {}\n\n/**\n * A class for dynamic collapsable user content.\n */\nexport default class CollapsableUserContent extends React.PureComponent<IProps, IState> {\n    public state = {\n        maxHeight: \"100%\",\n    };\n    private selfRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n    public render() {\n        const style: React.CSSProperties = { overflow: \"hidden\", maxHeight: this.state.maxHeight };\n\n        return (\n            <div\n                id={this.props.id}\n                className=\"collapsableContent userContent\"\n                style={style}\n                ref={this.selfRef}\n                dangerouslySetInnerHTML={this.props.dangerouslySetInnerHTML}\n            />\n        );\n    }\n\n    /**\n     * Do the initial height calculation and recalcuate if the window dimensions change.\n     */\n    public componentDidMount() {\n        this.calcMaxHeight();\n        window.addEventListener(\"resize\", () =>\n            debounce(() => {\n                this.calcMaxHeight();\n            }, 200)(),\n        );\n    }\n\n    /**\n     * If certain primary props change we need to recalculate the content height.\n     */\n    public componentDidUpdate(prevProps: IProps) {\n        if (\n            prevProps.dangerouslySetInnerHTML.__html !== this.props.dangerouslySetInnerHTML.__html ||\n            prevProps.isCollapsed !== this.props.isCollapsed\n        ) {\n            this.calcMaxHeight();\n        }\n    }\n\n    /**\n     * Calculate the exact pixel max height of the content around the threshold of preferredMaxHeight.\n     */\n    private getHeightInfo(): {\n        height: number | null;\n        needsCollapser: boolean;\n    } {\n        const self = this.selfRef.current;\n\n        if (self === null) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        if (self.childElementCount <= 1) {\n            return {\n                height: null,\n                needsCollapser: false,\n            };\n        }\n\n        let finalMaxHeight = 0;\n        let lastBottomMargin = 0;\n        for (const child of Array.from(self.children)) {\n            if (finalMaxHeight > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n\n            const { height, bottomMargin } = getElementHeight(child, lastBottomMargin);\n            if (finalMaxHeight > 0 && height > this.props.preferredMaxHeight) {\n                return {\n                    height: finalMaxHeight,\n                    needsCollapser: true,\n                };\n            }\n            lastBottomMargin = bottomMargin;\n\n            finalMaxHeight += height;\n        }\n\n        return {\n            height: finalMaxHeight,\n            needsCollapser: finalMaxHeight > this.props.preferredMaxHeight,\n        };\n    }\n\n    /**\n     * Calculate the CSS max height that we want to apply to the container div.\n     */\n    private calcMaxHeight() {\n        const { height, needsCollapser } = this.getHeightInfo();\n        if (needsCollapser && this.props.isCollapsed) {\n            this.setState({ maxHeight: height! });\n        } else {\n            this.setState({ maxHeight: this.selfRef.current!.scrollHeight });\n        }\n\n        this.props.setNeedsCollapser && this.props.setNeedsCollapser(needsCollapser);\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { registerEmbedComponent, IEmbedProps, IEmbedData, IQuoteEmbedData } from \"@dashboard/embeds\";\nimport { onContent, t, formatUrl, makeProfileUrl } from \"@dashboard/application\";\nimport CollapsableUserContent from \"@dashboard/app/user-content/CollapsableContent\";\nimport uniqueId from \"lodash/uniqueId\";\nimport classnames from \"classnames\";\nimport api from \"@dashboard/apiv2\";\n\nexport function initQuoteEmbeds() {\n    registerEmbedComponent(\"quote\", QuoteEmbed as any);\n    onContent(mountQuoteEmbeds);\n}\n\n/**\n * Mount all of the existing quote embeds in the page.\n *\n * Data (including server rendered HTML content should be coming down in JSON encoded attribute data-json).\n */\nexport function mountQuoteEmbeds() {\n    const embeds = document.querySelectorAll(\".js-quoteEmbed\");\n    for (const embed of embeds) {\n        const data = embed.getAttribute(\"data-json\");\n        if (data) {\n            const quoteData = JSON.parse(data) as IEmbedData;\n            const onRenderComplete = () => {\n                embed.removeAttribute(\"data-json\");\n                embed.classList.remove(\"embedResponsive-initialLink\");\n            };\n            ReactDOM.render(\n                <QuoteEmbed data={quoteData} inEditor={false} onRenderComplete={onRenderComplete} />,\n                embed,\n            );\n        }\n    }\n}\n\ninterface IState {\n    isCollapsed: boolean;\n    needsCollapseButton: boolean;\n    renderedBody: string;\n}\n\nfunction ChevronUpIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronUp\" viewBox=\"0 0 20 20\">\n            <title>{t(\"▲\")}</title>\n            <path\n                fill=\"currentColor\"\n                stroke-linecap=\"square\"\n                fill-rule=\"evenodd\"\n                d=\"M6.79521339,4.1285572 L6.13258979,4.7726082 C6.04408814,4.85847112 6,4.95730046 6,5.0690962 C6,5.18057569 6.04408814,5.27940502 6.13258979,5.36526795 L11.3416605,10.4284924 L6.13275248,15.4915587 C6.04425083,15.5774216 6.00016269,15.6762509 6.00016269,15.7878885 C6.00016269,15.8995261 6.04425083,15.9983555 6.13275248,16.0842184 L6.79537608,16.7282694 C6.88371504,16.8142905 6.98539433,16.8571429 7.10025126,16.8571429 C7.21510819,16.8571429 7.31678748,16.8141323 7.40512644,16.7282694 L13.5818586,10.7248222 C13.6701976,10.6389593 13.7142857,10.54013 13.7142857,10.4284924 C13.7142857,10.3168547 13.6701976,10.2181835 13.5818586,10.1323206 L7.40512644,4.1285572 C7.31678748,4.04269427 7.21510819,4 7.10025126,4 C6.98539433,4 6.88371504,4.04269427 6.79521339,4.1285572 L6.79521339,4.1285572 Z\"\n                transform=\"rotate(-90 9.857 10.429)\"\n            />\n        </svg>\n    );\n}\n\nfunction ChevronDownIcon() {\n    return (\n        <svg className=\"icon embedQuote-chevronDown\" viewBox=\"0 0 20 20\">\n            <title>{t(\"▼\")}</title>\n            <path\n                fill=\"currentColor\"\n                stroke-linecap=\"square\"\n                fill-rule=\"evenodd\"\n                d=\"M6.79521339,4.1285572 L6.13258979,4.7726082 C6.04408814,4.85847112 6,4.95730046 6,5.0690962 C6,5.18057569 6.04408814,5.27940502 6.13258979,5.36526795 L11.3416605,10.4284924 L6.13275248,15.4915587 C6.04425083,15.5774216 6.00016269,15.6762509 6.00016269,15.7878885 C6.00016269,15.8995261 6.04425083,15.9983555 6.13275248,16.0842184 L6.79537608,16.7282694 C6.88371504,16.8142905 6.98539433,16.8571429 7.10025126,16.8571429 C7.21510819,16.8571429 7.31678748,16.8141323 7.40512644,16.7282694 L13.5818586,10.7248222 C13.6701976,10.6389593 13.7142857,10.54013 13.7142857,10.4284924 C13.7142857,10.3168547 13.6701976,10.2181835 13.5818586,10.1323206 L7.40512644,4.1285572 C7.31678748,4.04269427 7.21510819,4 7.10025126,4 C6.98539433,4 6.88371504,4.04269427 6.79521339,4.1285572 L6.79521339,4.1285572 Z\"\n                transform=\"rotate(90 9.857 10.429)\"\n            />\n        </svg>\n    );\n}\n\n/**\n * An embed class for quoted user content on the same site.\n *\n * This is not an editable quote. Instead it an expandable/collapsable snapshot of the quoted/embedded comment/discussion.\n *\n * This can either recieve the post format and body (when created directly in the editor) or be given the fully rendered content (when mounting on top of existing server rendered DOM stuff).\n */\nexport class QuoteEmbed extends React.Component<IEmbedProps<IEmbedData>, IState> {\n    public state: IState = {\n        isCollapsed: true,\n        renderedBody: \"\",\n        needsCollapseButton: false,\n    };\n\n    public render() {\n        const { body, insertUser } = this.quoteData;\n        const id = uniqueId(\"collapsableContent-\");\n\n        const name = (this.quoteData as any).name;\n\n        const title = name ? (\n            <h2 className=\"embedText-title embedQuote-title\">\n                <a href={this.quoteData.url} className=\"embedText-titleLink\">\n                    {name}\n                </a>\n            </h2>\n        ) : null;\n\n        const bodyClasses = classnames(\"embedText-body\", \"embedQuote-body\", { isCollapsed: this.state.isCollapsed });\n        const userUrl = makeProfileUrl(insertUser.name);\n\n        return (\n            <blockquote className={bodyClasses}>\n                <div className=\"embedText-header embedQuote-header\">\n                    {title}\n                    <a href={userUrl} className=\"embedQuote-userLink\">\n                        <span className=\"embedQuote-userPhotoWrap\">\n                            <img\n                                src={insertUser.photoUrl}\n                                alt={insertUser.name}\n                                className=\"embedQuote-userPhoto\"\n                                tabIndex={-1}\n                            />\n                        </span>\n                        <span className=\"embedQuote-userName\">{insertUser.name}</span>\n                    </a>\n                    <a href={this.quoteData.url} className=\"embedQuote-metaLink\">\n                        <time\n                            className=\"embedText-dateTime embedQuote-dateTime meta\"\n                            dateTime={this.dateTime}\n                            title={this.titleTime}\n                        >\n                            {this.humanTime}\n                        </time>\n                    </a>\n\n                    {this.state.needsCollapseButton && (\n                        <button\n                            type=\"button\"\n                            className=\"embedQuote-collapseButton\"\n                            aria-label={t(\"Toggle Quote\")}\n                            onClick={this.toggleCollapseState}\n                            aria-pressed={this.state.isCollapsed}\n                        >\n                            {this.state.isCollapsed ? <ChevronDownIcon /> : <ChevronUpIcon />}\n                        </button>\n                    )}\n                </div>\n                <div className=\"embedText-main embedQuote-main\">\n                    <div className=\"embedQuote-excerpt\">\n                        <CollapsableUserContent\n                            setNeedsCollapser={this.setNeedsCollapser}\n                            isCollapsed={this.state.isCollapsed}\n                            id={id}\n                            preferredMaxHeight={100}\n                            dangerouslySetInnerHTML={{ __html: body ? body : this.state.renderedBody }}\n                        />\n                    </div>\n                </div>\n            </blockquote>\n        );\n    }\n\n    /**\n     * When the component mounts we need to ensure we have rendered post content.\n     *\n     * Either we were passed the content, or we need to make an API call to render it.\n     */\n    public componentDidMount() {\n        if (this.quoteData.body) {\n            this.props.onRenderComplete();\n        } else {\n            const body =\n                this.quoteData.format === \"Rich\" ? JSON.stringify(this.quoteData.bodyRaw) : this.quoteData.bodyRaw;\n            void api\n                .post(\"/rich/quote\", {\n                    body,\n                    format: this.quoteData.format,\n                })\n                .then(response => {\n                    this.setState({ renderedBody: response.data.quote }, this.props.onRenderComplete);\n                });\n        }\n    }\n\n    /**\n     * Callback for the collapser to determine if we need to show the collapse toggle or not.\n     */\n    private setNeedsCollapser = needsCollapser => {\n        this.setState({ needsCollapseButton: needsCollapser });\n    };\n\n    /**\n     * Toggle the state of whether or not we are collapsed.\n     */\n    private toggleCollapseState = (event: React.ChangeEvent<any>) => {\n        event.preventDefault();\n        this.setState({ isCollapsed: !this.state.isCollapsed });\n    };\n\n    /**\n     * Get the quote embed data out of the scrape data.\n     */\n    private get quoteData(): IQuoteEmbedData {\n        return this.props.data.attributes as IQuoteEmbedData;\n    }\n\n    /**\n     * Get the timestamp to display.\n     */\n    private get dateTime(): string {\n        return this.quoteData.dateUpdated || this.quoteData.dateInserted;\n    }\n\n    /**\n     * Get the title of the time tag (long extended date)\n     */\n    private get titleTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(undefined, {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n            weekday: \"long\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n        });\n    }\n\n    /**\n     * Get a shorter human readable time for the time tag.\n     */\n    private get humanTime(): string {\n        const date = new Date(this.dateTime);\n        return date.toLocaleString(undefined, { year: \"numeric\", month: \"short\", day: \"numeric\" });\n    }\n}\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onReady, onContent } from \"@dashboard/application\";\nimport { convertToSafeEmojiCharacters } from \"@dashboard/dom\";\n\nexport function initEmojiSupport() {\n    // Emoji\n    onReady(() => convertToSafeEmojiCharacters(document.body));\n    onContent(() => convertToSafeEmojiCharacters(document.body));\n}\n","/**\n * Wire together the different parts of the application.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { initCodePenEmbeds } from \"@dashboard/app/user-content/embeds/codepen\";\nimport { initGettyEmbeds, convertGettyEmbeds } from \"@dashboard/app/user-content/embeds/getty\";\nimport { initGiphyEmbeds } from \"@dashboard/app/user-content/embeds/giphy\";\nimport { initImageEmbeds } from \"@dashboard/app/user-content/embeds/image\";\nimport { initImgurEmbeds, convertImgurEmbeds } from \"@dashboard/app/user-content/embeds/imgur\";\nimport { initInstagramEmbeds, convertInstagramEmbeds } from \"@dashboard/app/user-content/embeds/instagram\";\nimport { initLinkEmbeds } from \"@dashboard/app/user-content/embeds/link\";\nimport { initSoundcloudEmbeds } from \"@dashboard/app/user-content/embeds/soundcloud\";\nimport { initTwitterEmbeds, convertTwitterEmbeds } from \"@dashboard/app/user-content/embeds/twitter\";\nimport { initVideoEmbeds } from \"@dashboard/app/user-content/embeds/video\";\nimport { initEmojiSupport } from \"@dashboard/app/user-content/emoji\";\nimport { initSpoilers } from \"@dashboard/app/user-content/spoilers\";\nimport { initQuoteEmbeds, mountQuoteEmbeds } from \"@dashboard/app/user-content/embeds/quote\";\n\nexport function initAllUserContent() {\n    // User content\n    initEmojiSupport();\n    initSpoilers();\n    initCodePenEmbeds();\n    initGettyEmbeds();\n    initGiphyEmbeds();\n    initImageEmbeds();\n    initImgurEmbeds();\n    initInstagramEmbeds();\n    initLinkEmbeds();\n    initSoundcloudEmbeds();\n    initTwitterEmbeds();\n    initVideoEmbeds();\n    initQuoteEmbeds();\n}\n\n/**\n * Runs method for all embeds that need to be rendered everytime content changes.\n * This is ideal for something like react's `componentDidMount`.\n */\nexport function convertAllUserContent() {\n    void convertGettyEmbeds();\n    void convertImgurEmbeds();\n    void convertInstagramEmbeds();\n    void convertTwitterEmbeds();\n    void mountQuoteEmbeds();\n}\n","/**\n * Wire together the different parts of the application.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { addRoutes, addComponent, onReady } from \"@dashboard/application\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport SignInPage from \"@dashboard/app/authenticate/SignInPage\";\nimport PasswordPage from \"@dashboard/app/authenticate/PasswordPage\";\nimport RecoverPasswordPage from \"@dashboard/app/authenticate/RecoverPasswordPage\";\nimport Router from \"@dashboard/components/Router\";\nimport { stickyHeader } from \"@dashboard/dom\";\nimport { registerReducer } from \"@dashboard/state/reducerRegistry\";\nimport authenticateReducer from \"@dashboard/state/authenticate/authenticateReducer\";\nimport usersReducer from \"@dashboard/state/users/usersReducer\";\nimport { initAllUserContent } from \"@dashboard/app/user-content\";\n\ninitAllUserContent();\n\n// Redux\nregisterReducer(\"authenticate\", authenticateReducer);\nregisterReducer(\"users\", usersReducer);\n\n// Routing\naddComponent(\"App\", Router);\naddRoutes([\n    <Route exact path=\"/authenticate/signin\" component={SignInPage} />,\n    <Route exact path=\"/authenticate/password\" component={PasswordPage} />,\n    <Route exact path=\"/authenticate/recoverpassword\" component={RecoverPasswordPage} />,\n]);\n\n// Other site initializations\nonReady(() => {\n    stickyHeader();\n});\n","/**\n * At-who setup for legacy @mentions.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { formatUrl, getMeta } from \"@dashboard/application\";\nimport { log, matchAtMention as _matchAtMention } from \"@dashboard/utility\";\n\n// Store cache results in an outer scoped variable., so all instances share the same data\n// and can build the cache together.\nconst atCache = {};\nconst atEmpty = {};\n\n// The current raw match. This is needed to properly match quoted strings.\nlet rawMatch: string | undefined;\n\n// Set minimum characters to type for @mentions to fire\nconst minCharacters = getMeta(\"mentionMinChars\", 2);\n\n// Max suggestions to show in dropdown.\nconst maxSuggestions = getMeta(\"mentionSuggestionCount\", 5);\n\n// Server response limit. This should match the limit set in\n// *UserController->TagSearch* and UserModel->TagSearch\nconst serverLimit = 30;\n\n// Emoji, set in definition list in foot, by Emoji class. Make sure\n// that class is getting instantiated, otherwise emoji will be empty.\n\ninterface IEmojiData {\n    assetPath?: string;\n    emoji?: {\n        [key: string]: string;\n    };\n    format?: string;\n}\n\nconst emojiData: IEmojiData = getMeta(\"emoji\", {});\nconst emojis = emojiData.emoji || {};\nconst emojiFormat = emojiData.format || \"\";\nconst emojiAssetPath = emojiData.assetPath || \"\";\n\nconst emojiList = Object.entries(emojis).map(([index, emojiImageUrl]) => {\n    const parts = emojiImageUrl.split(\".\");\n\n    return { name: index, filename: emojiImageUrl, basename: parts[0], ext: \".\" + parts[1] };\n});\n\nconst emojiContentTemplate = emojiFormat\n    .replace(/{(.+?)}/g, \"$${$1}\")\n    .replace(\"%1$s\", \"${src}\")\n    .replace(\"%2$s\", \"${name}\")\n    .replace(\"${src}\", emojiAssetPath + \"/${filename}\")\n    .replace(\"${dir}\", emojiAssetPath);\nconst emojiTemplate =\n    '<li data-value=\":${name}:\" class=\"at-suggest-emoji\"><span class=\"emoji-wrap\">' +\n    emojiContentTemplate +\n    '</span> <span class=\"emoji-name\">${name}</span></li>';\n\n/**\n * Match an @mention\n *\n * @param flag - The character sequence used to trigger this match (e.g. :).\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful. Null on failure to match.\n */\nexport function matchAtMention(flag: string, subtext: string, shouldStartWithSpace: boolean): string | null {\n    const match = _matchAtMention(subtext, shouldStartWithSpace);\n    if (match) {\n        rawMatch = match.rawMatch;\n        return match.match;\n    }\n\n    return null;\n}\n\n/**\n * Custom matching for our emoji images. Eg. :) :/ >:(\n *\n * @param flag - The character sequence used to trigger this match (e.g. :).\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchFakeEmoji(flag, subtext, shouldStartWithSpace) {\n    flag = flag.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n    if (shouldStartWithSpace) {\n        flag = \"(?:^|\\\\s)\" + flag;\n    }\n\n    // Some browsers append a linefeed to the end of subtext.  We need to allow for it.\n    const regexp = new RegExp(flag + \"([A-Za-z0-9_+-]*|[^\\\\x00-\\\\xff]*)(?:\\\\n)?$\", \"gi\");\n    const match = regexp.exec(subtext);\n\n    if (match) {\n        return match[2] || match[1];\n    } else {\n        return null;\n    }\n}\n\nexport function initializeAtComplete(editorElement, iframe?: any) {\n    // Handle iframe situation\n    const iframeWindow = iframe ? iframe.contentWindow : \"\";\n\n    const remoteDataHandler = (query, callback) => {\n        // Do this because of undefined when adding spaces to\n        // matcher callback, as it will be monitoring changes.\n        query = query || \"\";\n\n        // Only all query strings greater than min_characters\n        if (query.length >= minCharacters) {\n            // If the cache array contains less than LIMIT 30\n            // (according to server logic), then there's no\n            // point sending another request to server, as there\n            // won't be any more results, as this is the maximum.\n            let shouldContinueFiltering = true;\n\n            // Remove last character so that the string can be\n            // found in the cache, if exists, then check if its\n            // matching array has less than the server limit of\n            // matches, which means there are no more, so save the\n            // additional server request from being sent.\n            let filterString = \"\";\n\n            // Loop through string and find first closest match in\n            // the cache, and if a match, check if more filtering\n            // is required.\n            for (let i = 0, l = query.length; i < l; i++) {\n                filterString = query.slice(0, -i);\n\n                if (atCache[filterString] && atCache[filterString].length < serverLimit) {\n                    // Add this other query to empty array, so that it\n                    // will not fire off another request.\n                    atEmpty[query] = query;\n\n                    // Do not filter more, meaning, do not send\n                    // another server request, as all the necessary\n                    // data is already in memory.\n                    shouldContinueFiltering = false;\n                    break;\n                }\n            }\n\n            // Check if query would be empty, based on previously\n            // cached empty results. Compare against the start of\n            // the latest query string.\n            let isQueryEmpty = false;\n\n            // Loop through cache of empty query strings.\n            for (const key in atEmpty) {\n                if (atEmpty.hasOwnProperty(key)) {\n                    // See if cached empty results match the start\n                    // of the latest query. If so, then no point\n                    // sending new request, as it will return empty.\n                    if (query.match(new RegExp(\"^\" + key + \"+\")) !== null) {\n                        isQueryEmpty = true;\n                        break;\n                    }\n                }\n            }\n\n            const filterSuccessHandler = data => {\n                if (Array.isArray(data)) {\n                    data.forEach(result => {\n                        if (typeof result === \"object\" && typeof result.name === \"string\") {\n                            // Convert special characters to safely insert into template.\n                            result.name = result.name\n                                .replace(/&/g, \"&amp;\")\n                                .replace(/</g, \"&lt;\")\n                                .replace(/>/g, \"&gt;\")\n                                .replace(/\"/g, \"&quot;\")\n                                .replace(/'/g, \"&apos;\");\n                        }\n                    });\n                }\n\n                callback(data);\n\n                // If data is empty, cache the results to prevent\n                // other requests against similarly-started\n                // query strings.\n                if (data.length) {\n                    atCache[query] = data;\n                } else {\n                    atEmpty[query] = query;\n                }\n            };\n\n            // Produce the suggestions based on data either\n            // cached or retrieved.\n            if (shouldContinueFiltering && !isQueryEmpty && !atCache[query]) {\n                $.getJSON(\n                    formatUrl(\"/user/tagsearch\"),\n                    {\n                        q: query,\n                        limit: serverLimit,\n                    },\n                    filterSuccessHandler,\n                );\n            } else {\n                // If no point filtering more as the parent filter\n                // has not been maxed out with responses, use the\n                // closest parent filter instead of the latest\n                // query string.\n                if (!shouldContinueFiltering) {\n                    callback(atCache[filterString]);\n                } else {\n                    callback(atCache[query]);\n                }\n            }\n        }\n    };\n\n    /**\n     * Pre-insert handler for atwho.\n     *\n     * Note, in contenteditable mode (iframe for us), the value is surrounded by span tags.\n     */\n    function beforeInsertHandler(value: string, $li: JQuery<any>): string {\n        // It's better to use the value provided, as it may have\n        // html tags around it, depending on mode. Using the\n        // regular expression avoids the need to check what mode\n        // the suggestion is made in, and then constructing\n        // it based on that. Optional assignment for undefined\n        // matcher callback results.\n        let username = $li.data(\"value\") || \"\";\n        // Pop off the flag--usually @ or :\n        username = username.slice(1, username.length);\n\n        // Check if there are any whitespaces, and if so, add\n        // quotation marks around the whole name.\n        const requiresQuotation = /[^\\w-]/.test(username);\n\n        // Check if there are already quotation marks around\n        // the string--double or single.\n        const hasQuotation = /([\"'])(.+)([\"'])/g.test(username);\n\n        let insert = username;\n        if (requiresQuotation && !hasQuotation) {\n            // Do not even need to have value wrapped in\n            // any tags at all. It will be done automatically.\n            // insert = value.replace(/(.*\\>?)@([\\w\\d\\s\\-\\+\\_]+)(\\<?.*)/, '$1@\"$2\"$3');\n            insert = '\"' + username + '\"';\n        }\n\n        // This is needed for checking quotation mark directly\n        // after at character, and preventing another at character\n        // from being inserted into the page.\n        const rawAtMatch = rawMatch || \"\";\n\n        const atQuote = /.?@([\"'])/.test(rawAtMatch);\n\n        // If atQuote is false, then insert the at character,\n        // otherwise it means the user typed a quotation mark\n        // directly after the at character, which, would get\n        // inserted again if not checked. atQuote would\n        // be false most of the time; the exception is when\n        // it's true.\n        if (!atQuote) {\n            insert = this.at + insert;\n        }\n\n        // The last character prevents the matcher from trigger on nearly everything.\n        return insert;\n    }\n\n    /**\n     * Custom highlighting to accept spaces in names.\n     * This is almost a copy of the default in the library, with tweaks in the regex.\n     */\n    function highlightHandler(li: string, query: string): string {\n        if (!query) {\n            return li;\n        }\n        const regexp = new RegExp(\">\\\\s*(\\\\w*)(\" + query.replace(\"+\", \"\\\\+\") + \")(\\\\w*)\\\\s*(\\\\s+.+)?<\", \"ig\");\n        // Capture group 4 for possible spaces\n        return li.replace(regexp, (str, $1, $2, $3, $4) => {\n            // Weird Chrome behaviour, so check for undefined, then\n            // set to empty string if so.\n            if (typeof $3 === \"undefined\") {\n                $3 = \"\";\n            }\n            if (typeof $4 === \"undefined\") {\n                $4 = \"\";\n            }\n\n            return \"> \" + $1 + \"<strong>\" + $2 + \"</strong>\" + $3 + $4 + \" <\";\n        });\n    }\n\n    $(editorElement)\n        .atwho({\n            at: \"@\",\n            tpl: '<li data-value=\"@${name}\" data-id=\"${id}\">${name}</li>',\n            limit: maxSuggestions,\n            callbacks: {\n                remote_filter: remoteDataHandler,\n                before_insert: beforeInsertHandler,\n                highlighter: highlightHandler,\n                matcher: matchAtMention,\n            },\n            cWindow: iframeWindow,\n        })\n        .atwho({\n            at: \":\",\n            tpl: emojiTemplate,\n            insert_tpl: \"${atwho-data-value}\",\n            callbacks: {\n                matcher: matchFakeEmoji,\n                tplEval: (tpl, map) => log(map),\n            },\n            limit: maxSuggestions,\n            data: emojiList,\n            cWindow: iframeWindow,\n        });\n\n    /**\n     * This hook is triggered when atWho places a selection list in the window.\n     * The context is passed implicitly when triggered by at.js.\n     *\n     * @param event - A custom event triggered by the advanced editor iframe/wysiwyg.\n     * @param offset - The pixel offsets inside of the iframe.\n     * @param context - Context from the contenteditable inside of the iframe.\n     */\n    function iframeAtWhoRepositionHandler(event: any, offset: any, context: any) {\n        // Actual suggestion box that will appear.\n        const suggestionElement = context.view.$el;\n\n        // The area where text will be typed (contenteditable body).\n        const $inputor = context.$inputor;\n\n        // Display it below the text.\n        const lineHeight = parseInt($inputor.css(\"line-height\"), 10);\n\n        // offset contains the top left values of the offset to the iframe\n        // we need to convert that to main window coordinates\n        const iframeOffset = $(iframe).offset();\n        let leftCoordinate = (iframeOffset ? iframeOffset.left : 0) + offset.left;\n        let topCoordinate = iframeOffset ? iframeOffset.top : 0;\n        let selectHeight = 0;\n\n        // In wysiwyg mode, the suggestbox follows the typing, which\n        // does not happen in regular mode, so adjust it.\n        // Either @ or : for now.\n        const at = context.at;\n        const { text } = context.query;\n        const fontMirror = $(\".BodyBox,.js-bodybox\");\n        const font = fontMirror.css(\"font-size\") + \" \" + fontMirror.css(\"font-family\");\n\n        // Get font width\n        const fontWidth = (at + text).width(font) - 2;\n\n        if (at === \"@\") {\n            leftCoordinate -= fontWidth;\n        }\n\n        if (at === \":\") {\n            leftCoordinate -= 2;\n        }\n\n        // atWho adds 3 select areas, presumably for differnet positing on screen (above below etc)\n        // This finds the active one and gets the container height\n        $(suggestionElement).each((index, element) => {\n            const outerHeight = $(element).outerHeight();\n            const height = $(element).height();\n\n            if (outerHeight && height && outerHeight > 0) {\n                selectHeight += height + lineHeight;\n            }\n        });\n\n        // Now should we show the selection box above or below?\n        const windowHeight = $(window).height() || 0;\n        const scrollPosition = $(window).scrollTop() || 0;\n        const selectionPosition = topCoordinate + offset.top - ($(window).scrollTop() || 0);\n        const iAvailableSpace = windowHeight - (selectionPosition - scrollPosition);\n\n        if (iAvailableSpace >= selectHeight) {\n            // Enough space below\n            topCoordinate = topCoordinate + offset.top + selectHeight - scrollPosition;\n        } else {\n            // Place it above instead\n            // @todo should check if this is more space than below\n            topCoordinate = topCoordinate + offset.top - scrollPosition;\n        }\n\n        // Move the select box\n        const newOffset = {\n            left: leftCoordinate,\n            top: topCoordinate,\n        };\n        $(suggestionElement).offset(newOffset);\n    }\n\n    // Only necessary for iframe.\n    // Based on work here: https://github.com/ichord/At.js/issues/124\n    if (iframeWindow) {\n        $(iframeWindow).on(\"reposition.atwho\", iframeAtWhoRepositionHandler);\n    }\n}\n","/**\n * Entrypoint for gradually replacing global.js\n *\n * At some point everything in this folder should be able to be removed (new base theme).\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onContent, onReady } from \"@dashboard/application\";\nimport { initializeAtComplete } from \"@dashboard/legacy/atwho\";\n\n// Initialize legacy @mentions for all BodyBox elements.\nif ($.fn.atwho) {\n    onReady(() => initializeAtComplete(\".BodyBox,.js-bodybox\"));\n    onContent(() => initializeAtComplete(\".BodyBox,.js-bodybox\"));\n\n    // Also assign this function to the global `gdn` object.\n    // The advanced editor calls this function directly when in wysiwyg format, as it needs to\n    // handle an iframe, and the editor instance needs to be referenced. The advanced editor does not yet use\n    // this build process so it can only communicate through here with a global.\n    window.gdn.atCompleteInit = initializeAtComplete;\n}\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nimport { assetUrl } from \"@dashboard/application\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = assetUrl(\"/\");\n","/**\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { IEmbedData, IEmbedElements, registerEmbedRenderer } from \"@dashboard/embeds\";\nimport { ensureScript } from \"@dashboard/dom\";\nimport { onContent, onReady } from \"@dashboard/application\";\nimport { IScrapeData } from \"@dashboard/@types/api\";\n\nexport function initGettyEmbeds() {\n    registerEmbedRenderer(\"getty\", renderGetty);\n    onReady(convertGettyEmbeds);\n    onContent(convertGettyEmbeds);\n}\n\n/**\n * Render a single getty embed.\n */\nexport async function renderGetty(elements: IEmbedElements, data: IScrapeData) {\n    const contentElement = elements.content;\n    const url = data.attributes.post;\n    const newLink = document.createElement(\"a\");\n    newLink.classList.add(\"gie-single\");\n    newLink.setAttribute(\"href\", \"http://www.gettyimages.ca/detail/\" + url);\n    newLink.setAttribute(\"id\", data.attributes.id);\n    contentElement.style.width = `${data.width}px`;\n    contentElement.appendChild(newLink);\n    setImmediate(() => {\n        void loadGettyImages(data);\n    });\n}\n\n/**\n * Renders posted getty embeds.\n */\nexport async function convertGettyEmbeds() {\n    const gettyPosts = document.querySelectorAll(\".js-gettyEmbed\");\n    if (gettyPosts.length > 0) {\n        for (const post of gettyPosts) {\n            const url = post.getAttribute(\"href\") || \"\";\n            const id = post.getAttribute(\"id\");\n            const sig = post.getAttribute(\"data-sig\");\n            const height = Number(post.getAttribute(\"data-height\")) || 1;\n            const width = Number(post.getAttribute(\"data-width\")) || 1;\n            const items = post.getAttribute(\"data-items\");\n            const capt = post.getAttribute(\"data-capt\");\n            const tld = post.getAttribute(\"data-tld\");\n            const i360 = post.getAttribute(\"data-is360\");\n            const data: IEmbedData = {\n                type: \"getty\",\n                url,\n                height,\n                width,\n                attributes: { id, sig, items, capt, tld, i360 },\n            };\n            await loadGettyImages(data);\n            post.classList.remove(\"js-gettyEmbed\");\n        }\n    }\n}\n\n/**\n * Loads getty embeds into a global object and fire getty's widget.js.\n * @param data\n * @returns {Promise<void>}\n */\nasync function loadGettyImages(data) {\n    const fallbackCallback = c => {\n        (window.gie.q = window.gie.q || []).push(c);\n    };\n    // This is part of Getty's embed code, we need to ensure embeds are loaded and sent to their widget.js script.\n    window.gie = window.gie || fallbackCallback;\n\n    window.gie(() => {\n        window.gie.widgets.load({\n            id: data.attributes.id,\n            sig: data.attributes.sig,\n            w: data.width + \"px\",\n            h: data.height + \"px\",\n            items: data.attributes.items,\n            caption: data.attributes.isCaptioned,\n            tld: data.attributes.tld,\n            is360: data.attributes.is360,\n        });\n    });\n\n    /// DO NOT IGNORE\n    /// This will turn totally sideways if window.gie is not populated before the script is initially loaded.\n    await ensureScript(\"//embed-cdn.gettyimages.com/widgets.js\");\n}\n"],"sourceRoot":""}