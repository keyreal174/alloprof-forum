{"version":3,"sources":["webpack://dashboard_bootstrapApp/webpack/bootstrap","webpack://dashboard_bootstrapApp/delegated ./applications/dashboard/src/scripts/application.tsx from dll-reference lib_dashboard_app","webpack://dashboard_bootstrapApp/delegated ./applications/dashboard/src/scripts/utility.ts from dll-reference lib_dashboard_app","webpack://dashboard_bootstrapApp/external \"lib_dashboard_app\"","webpack://dashboard_bootstrapApp/delegated ./applications/dashboard/src/scripts/apiv2.ts from dll-reference lib_dashboard_app","webpack://dashboard_bootstrapApp/delegated ./applications/dashboard/src/scripts/gdn.ts from dll-reference lib_dashboard_app","webpack://dashboard_bootstrapApp/./src/scripts/legacy/atwho.ts","webpack://dashboard_bootstrapApp/./src/scripts/legacy/index.ts","webpack://dashboard_bootstrapApp/./src/scripts/entries/bootstrap.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","lib_dashboard_app","rawMatch","atCache","atEmpty","minCharacters","applicationfrom_dll_reference_lib_dashboard_app","getMeta","maxSuggestions","serverLimit","emojiData","emojis","emoji","emojiFormat","format","emojiAssetPath","assetPath","emojiList","entries","map","_a","_b","__read","index","emojiImageUrl","parts","split","filename","basename","ext","emojiTemplate","replace","matchAtMention","flag","subtext","shouldStartWithSpace","match","utilityfrom_dll_reference_lib_dashboard_app","matchFakeEmoji","RegExp","exec","initializeAtComplete","editorElement","iframe","iframeWindow","contentWindow","$","atwho","at","tpl","limit","callbacks","remote_filter","query","callback","length","shouldContinueFiltering","filterString","slice","isQueryEmpty","key","getJSON","formatUrl","q","data","Array","isArray","forEach","result","before_insert","$li","username","requiresQuotation","test","hasQuotation","insert","this","highlighter","li","regexp","str","$1","$2","$3","$4","matcher","cWindow","insert_tpl","tplEval","log","on","event","offset","context","suggestionElement","view","$el","$inputor","lineHeight","parseInt","css","iframeOffset","leftCoordinate","left","topCoordinate","top","selectHeight","text","fontMirror","font","fontWidth","width","each","element","outerHeight","height","windowHeight","window","scrollPosition","scrollTop","newOffset","fn","onReady","onContent","gdn","atCompleteInit","debug","gdnfrom_dll_reference_lib_dashboard_app","apiv2","apiv2from_dll_reference_lib_dashboard_app","_mountComponents","target","_executeReady","then","contentEvent","CustomEvent","bubbles","cancelable","document","dispatchEvent","catch","error","logError"],"mappings":"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","file":"app/dashboard-bootstrap-app.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/applications/dashboard/js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = (__webpack_require__(2))(5);","module.exports = (__webpack_require__(2))(10);","module.exports = lib_dashboard_app;","module.exports = (__webpack_require__(2))(29);","module.exports = (__webpack_require__(2))(11);","/**\n * At-who setup for legacy @mentions.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { formatUrl, getMeta } from \"@dashboard/application\";\nimport { log, matchAtMention as _matchAtMention } from \"@dashboard/utility\";\n\n// Store cache results in an outer scoped variable., so all instances share the same data\n// and can build the cache together.\nconst atCache = {};\nconst atEmpty = {};\n\n// The current raw match. This is needed to properly match quoted strings.\nlet rawMatch: string | undefined;\n\n// Set minimum characters to type for @mentions to fire\nconst minCharacters = getMeta(\"mentionMinChars\", 2);\n\n// Max suggestions to show in dropdown.\nconst maxSuggestions = getMeta(\"mentionSuggestionCount\", 5);\n\n// Server response limit. This should match the limit set in\n// *UserController->TagSearch* and UserModel->TagSearch\nconst serverLimit = 30;\n\n// Emoji, set in definition list in foot, by Emoji class. Make sure\n// that class is getting instantiated, otherwise emoji will be empty.\n\ninterface IEmojiData {\n    assetPath?: string;\n    emoji?: {\n        [key: string]: string;\n    };\n    format?: string;\n}\n\nconst emojiData: IEmojiData = getMeta(\"emoji\", {});\nconst emojis = emojiData.emoji || {};\nconst emojiFormat = emojiData.format || \"\";\nconst emojiAssetPath = emojiData.assetPath || \"\";\n\nconst emojiList = Object.entries(emojis).map(([index, emojiImageUrl]) => {\n    const parts = emojiImageUrl.split(\".\");\n\n    return { name: index, filename: emojiImageUrl, basename: parts[0], ext: \".\" + parts[1] };\n});\n\nconst emojiContentTemplate = emojiFormat\n    .replace(/{(.+?)}/g, \"$${$1}\")\n    .replace(\"%1$s\", \"${src}\")\n    .replace(\"%2$s\", \"${name}\")\n    .replace(\"${src}\", emojiAssetPath + \"/${filename}\")\n    .replace(\"${dir}\", emojiAssetPath);\nconst emojiTemplate =\n    '<li data-value=\":${name}:\" class=\"at-suggest-emoji\"><span class=\"emoji-wrap\">' +\n    emojiContentTemplate +\n    '</span> <span class=\"emoji-name\">${name}</span></li>';\n\n/**\n * Match an @mention\n *\n * @param flag - The character sequence used to trigger this match (e.g. :).\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful. Null on failure to match.\n */\nexport function matchAtMention(flag: string, subtext: string, shouldStartWithSpace: boolean): string | null {\n    const match = _matchAtMention(subtext, shouldStartWithSpace);\n    if (match) {\n        rawMatch = match.rawMatch;\n        return match.match;\n    }\n\n    return null;\n}\n\n/**\n * Custom matching for our emoji images. Eg. :) :/ >:(\n *\n * @param flag - The character sequence used to trigger this match (e.g. :).\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchFakeEmoji(flag, subtext, shouldStartWithSpace) {\n    flag = flag.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n    if (shouldStartWithSpace) {\n        flag = \"(?:^|\\\\s)\" + flag;\n    }\n\n    // Some browsers append a linefeed to the end of subtext.  We need to allow for it.\n    const regexp = new RegExp(flag + \"([A-Za-z0-9_+-]*|[^\\\\x00-\\\\xff]*)(?:\\\\n)?$\", \"gi\");\n    const match = regexp.exec(subtext);\n\n    if (match) {\n        return match[2] || match[1];\n    } else {\n        return null;\n    }\n}\n\nexport function initializeAtComplete(editorElement, iframe?: HTMLIFrameElement) {\n    // Handle iframe situation\n    const iframeWindow = iframe ? iframe.contentWindow : \"\";\n\n    const remoteDataHandler = (query, callback) => {\n        // Do this because of undefined when adding spaces to\n        // matcher callback, as it will be monitoring changes.\n        query = query || \"\";\n\n        // Only all query strings greater than min_characters\n        if (query.length >= minCharacters) {\n            // If the cache array contains less than LIMIT 30\n            // (according to server logic), then there's no\n            // point sending another request to server, as there\n            // won't be any more results, as this is the maximum.\n            let shouldContinueFiltering = true;\n\n            // Remove last character so that the string can be\n            // found in the cache, if exists, then check if its\n            // matching array has less than the server limit of\n            // matches, which means there are no more, so save the\n            // additional server request from being sent.\n            let filterString = \"\";\n\n            // Loop through string and find first closest match in\n            // the cache, and if a match, check if more filtering\n            // is required.\n            for (let i = 0, l = query.length; i < l; i++) {\n                filterString = query.slice(0, -i);\n\n                if (atCache[filterString] && atCache[filterString].length < serverLimit) {\n                    // Add this other query to empty array, so that it\n                    // will not fire off another request.\n                    atEmpty[query] = query;\n\n                    // Do not filter more, meaning, do not send\n                    // another server request, as all the necessary\n                    // data is already in memory.\n                    shouldContinueFiltering = false;\n                    break;\n                }\n            }\n\n            // Check if query would be empty, based on previously\n            // cached empty results. Compare against the start of\n            // the latest query string.\n            let isQueryEmpty = false;\n\n            // Loop through cache of empty query strings.\n            for (const key in atEmpty) {\n                if (atEmpty.hasOwnProperty(key)) {\n                    // See if cached empty results match the start\n                    // of the latest query. If so, then no point\n                    // sending new request, as it will return empty.\n                    if (query.match(new RegExp(\"^\" + key + \"+\")) !== null) {\n                        isQueryEmpty = true;\n                        break;\n                    }\n                }\n            }\n\n            const filterSuccessHandler = data => {\n                if (Array.isArray(data)) {\n                    data.forEach(result => {\n                        if (typeof result === \"object\" && typeof result.name === \"string\") {\n                            // Convert special characters to safely insert into template.\n                            result.name = result.name\n                                .replace(/&/g, \"&amp;\")\n                                .replace(/</g, \"&lt;\")\n                                .replace(/>/g, \"&gt;\")\n                                .replace(/\"/g, \"&quot;\")\n                                .replace(/'/g, \"&apos;\");\n                        }\n                    });\n                }\n\n                callback(data);\n\n                // If data is empty, cache the results to prevent\n                // other requests against similarly-started\n                // query strings.\n                if (data.length) {\n                    atCache[query] = data;\n                } else {\n                    atEmpty[query] = query;\n                }\n            };\n\n            // Produce the suggestions based on data either\n            // cached or retrieved.\n            if (shouldContinueFiltering && !isQueryEmpty && !atCache[query]) {\n                $.getJSON(\n                    formatUrl(\"/user/tagsearch\"),\n                    {\n                        q: query,\n                        limit: serverLimit,\n                    },\n                    filterSuccessHandler,\n                );\n            } else {\n                // If no point filtering more as the parent filter\n                // has not been maxed out with responses, use the\n                // closest parent filter instead of the latest\n                // query string.\n                if (!shouldContinueFiltering) {\n                    callback(atCache[filterString]);\n                } else {\n                    callback(atCache[query]);\n                }\n            }\n        }\n    };\n\n    /**\n     * Pre-insert handler for atwho.\n     *\n     * Note, in contenteditable mode (iframe for us), the value is surrounded by span tags.\n     */\n    function beforeInsertHandler(value: string, $li: JQuery<any>): string {\n        // It's better to use the value provided, as it may have\n        // html tags around it, depending on mode. Using the\n        // regular expression avoids the need to check what mode\n        // the suggestion is made in, and then constructing\n        // it based on that. Optional assignment for undefined\n        // matcher callback results.\n        let username = $li.data(\"value\") || \"\";\n        // Pop off the flag--usually @ or :\n        username = username.slice(1, username.length);\n\n        // Check if there are any whitespaces, and if so, add\n        // quotation marks around the whole name.\n        const requiresQuotation = /[^\\w-]/.test(username);\n\n        // Check if there are already quotation marks around\n        // the string--double or single.\n        const hasQuotation = /([\"'])(.+)([\"'])/g.test(username);\n\n        let insert = username;\n        if (requiresQuotation && !hasQuotation) {\n            // Do not even need to have value wrapped in\n            // any tags at all. It will be done automatically.\n            // insert = value.replace(/(.*\\>?)@([\\w\\d\\s\\-\\+\\_]+)(\\<?.*)/, '$1@\"$2\"$3');\n            insert = '\"' + username + '\"';\n        }\n\n        // This is needed for checking quotation mark directly\n        // after at character, and preventing another at character\n        // from being inserted into the page.\n        const rawAtMatch = rawMatch || \"\";\n\n        const atQuote = /.?@([\"'])/.test(rawAtMatch);\n\n        // If atQuote is false, then insert the at character,\n        // otherwise it means the user typed a quotation mark\n        // directly after the at character, which, would get\n        // inserted again if not checked. atQuote would\n        // be false most of the time; the exception is when\n        // it's true.\n        if (!atQuote) {\n            insert = this.at + insert;\n        }\n\n        // The last character prevents the matcher from trigger on nearly everything.\n        return insert;\n    }\n\n    /**\n     * Custom highlighting to accept spaces in names.\n     * This is almost a copy of the default in the library, with tweaks in the regex.\n     */\n    function highlightHandler(li: string, query: string): string {\n        if (!query) {\n            return li;\n        }\n        const regexp = new RegExp(\">\\\\s*(\\\\w*)(\" + query.replace(\"+\", \"\\\\+\") + \")(\\\\w*)\\\\s*(\\\\s+.+)?<\", \"ig\");\n        // Capture group 4 for possible spaces\n        return li.replace(regexp, (str, $1, $2, $3, $4) => {\n            // Weird Chrome behaviour, so check for undefined, then\n            // set to empty string if so.\n            if (typeof $3 === \"undefined\") {\n                $3 = \"\";\n            }\n            if (typeof $4 === \"undefined\") {\n                $4 = \"\";\n            }\n\n            return \"> \" + $1 + \"<strong>\" + $2 + \"</strong>\" + $3 + $4 + \" <\";\n        });\n    }\n\n    $(editorElement)\n        .atwho({\n            at: \"@\",\n            tpl: '<li data-value=\"@${name}\" data-id=\"${id}\">${name}</li>',\n            limit: maxSuggestions,\n            callbacks: {\n                remote_filter: remoteDataHandler,\n                before_insert: beforeInsertHandler,\n                highlighter: highlightHandler,\n                matcher: matchAtMention,\n            },\n            cWindow: iframeWindow,\n        })\n        .atwho({\n            at: \":\",\n            tpl: emojiTemplate,\n            insert_tpl: \"${atwho-data-value}\",\n            callbacks: {\n                matcher: matchFakeEmoji,\n                tplEval: (tpl, map) => log(map),\n            },\n            limit: maxSuggestions,\n            data: emojiList,\n            cWindow: iframeWindow,\n        });\n\n    /**\n     * This hook is triggered when atWho places a selection list in the window.\n     * The context is passed implicitly when triggered by at.js.\n     *\n     * @param event - A custom event triggered by the advanced editor iframe/wysiwyg.\n     * @param offset - The pixel offsets inside of the iframe.\n     * @param context - Context from the contenteditable inside of the iframe.\n     */\n    function iframeAtWhoRepositionHandler(event: any, offset: any, context: any) {\n        // Actual suggestion box that will appear.\n        const suggestionElement = context.view.$el;\n\n        // The area where text will be typed (contenteditable body).\n        const $inputor = context.$inputor;\n\n        // Display it below the text.\n        const lineHeight = parseInt($inputor.css(\"line-height\"), 10);\n\n        // offset contains the top left values of the offset to the iframe\n        // we need to convert that to main window coordinates\n        const iframeOffset = $(iframe).offset();\n        let leftCoordinate = (iframeOffset ? iframeOffset.left : 0) + offset.left;\n        let topCoordinate = iframeOffset ? iframeOffset.top : 0;\n        let selectHeight = 0;\n\n        // In wysiwyg mode, the suggestbox follows the typing, which\n        // does not happen in regular mode, so adjust it.\n        // Either @ or : for now.\n        const at = context.at;\n        const { text } = context.query;\n        const fontMirror = $(\".BodyBox,.js-bodybox\");\n        const font = fontMirror.css(\"font-size\") + \" \" + fontMirror.css(\"font-family\");\n\n        // Get font width\n        const fontWidth = (at + text).width(font) - 2;\n\n        if (at === \"@\") {\n            leftCoordinate -= fontWidth;\n        }\n\n        if (at === \":\") {\n            leftCoordinate -= 2;\n        }\n\n        // atWho adds 3 select areas, presumably for differnet positing on screen (above below etc)\n        // This finds the active one and gets the container height\n        $(suggestionElement).each((index, element) => {\n            const outerHeight = $(element).outerHeight();\n            const height = $(element).height();\n\n            if (outerHeight && height && outerHeight > 0) {\n                selectHeight += height + lineHeight;\n            }\n        });\n\n        // Now should we show the selection box above or below?\n        const windowHeight = $(window).height() || 0;\n        const scrollPosition = $(window).scrollTop() || 0;\n        const selectionPosition = topCoordinate + offset.top - ($(window).scrollTop() || 0);\n        const iAvailableSpace = windowHeight - (selectionPosition - scrollPosition);\n\n        if (iAvailableSpace >= selectHeight) {\n            // Enough space below\n            topCoordinate = topCoordinate + offset.top + selectHeight - scrollPosition;\n        } else {\n            // Place it above instead\n            // @todo should check if this is more space than below\n            topCoordinate = topCoordinate + offset.top - scrollPosition;\n        }\n\n        // Move the select box\n        const newOffset = {\n            left: leftCoordinate,\n            top: topCoordinate,\n        };\n        $(suggestionElement).offset(newOffset);\n    }\n\n    // Only necessary for iframe.\n    // Based on work here: https://github.com/ichord/At.js/issues/124\n    if (iframeWindow) {\n        $(iframeWindow).on(\"reposition.atwho\", iframeAtWhoRepositionHandler);\n    }\n}\n","/**\n * Entrypoint for gradually replacing global.js\n *\n * At some point everything in this folder should be able to be removed (new base theme).\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onContent, onReady } from \"@dashboard/application\";\nimport { initializeAtComplete } from \"./atwho\";\n\n// Initialize legacy @mentions for all BodyBox elements.\nif ($.fn.atwho) {\n    onReady(() => initializeAtComplete(\".BodyBox,.js-bodybox\"));\n    onContent(() => initializeAtComplete(\".BodyBox,.js-bodybox\"));\n\n    // Also assign this function to the global `gdn` object.\n    // The advanced editor calls this function directly when in wysiwyg format, as it needs to\n    // handle an iframe, and the editor instance needs to be referenced. The advanced editor does not yet use\n    // this build process so it can only communicate through here with a global.\n    window.gdn.atCompleteInit = initializeAtComplete;\n}\n","/**\n * Primary bootstrapping of the frontend JS. This entrypoint should be the last once executed.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onContent, getMeta, _executeReady, _mountComponents } from \"@dashboard/application\";\nimport { log, logError, debug } from \"@dashboard/utility\";\nimport gdn from \"@dashboard/gdn\";\nimport apiv2 from \"@dashboard/apiv2\";\n\n// Right now this is imported here instead of being its own bundle.\n// Once we have some part of vanilla that can function without the legacy js,\n// this should be pulled out into its own javascript bundle.\nimport \"../legacy\";\n\n// Inject the debug flag into the utility.\ndebug(getMeta(\"debug\", false));\n\n// Export the API to the global object.\ngdn.apiv2 = apiv2;\n\n// Mount all data-react components.\nonContent(e => {\n    _mountComponents(e.target);\n});\n\nlog(\"Bootstrapping\");\n_executeReady()\n    .then(() => {\n        log(\"Bootstrapping complete.\");\n\n        const contentEvent = new CustomEvent(\"X-DOMContentReady\", { bubbles: true, cancelable: false });\n        document.dispatchEvent(contentEvent);\n    })\n    .catch(error => {\n        logError(error);\n    });\n"],"sourceRoot":""}