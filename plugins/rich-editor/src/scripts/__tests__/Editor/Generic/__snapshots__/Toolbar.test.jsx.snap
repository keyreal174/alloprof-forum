// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Toolbar
    quill={
      Quill {
        "addContainer": [MockFunction],
        "blur": [MockFunction],
        "deleteText": [MockFunction],
        "disable": [MockFunction],
        "enable": [MockFunction],
        "focus": [MockFunction],
        "format": [MockFunction],
        "formatLine": [MockFunction],
        "formatText": [MockFunction],
        "getBounds": [MockFunction],
        "getContents": [MockFunction],
        "getFormat": [MockFunction],
        "getIndex": [MockFunction],
        "getLeaf": [MockFunction],
        "getLength": [MockFunction],
        "getLine": [MockFunction],
        "getLines": [MockFunction],
        "getModule": [MockFunction],
        "getSelection": [MockFunction],
        "getText": [MockFunction],
        "hasFocus": [MockFunction],
        "insertEmbed": [MockFunction],
        "insertText": [MockFunction],
        "isEnabled": [MockFunction],
        "off": [MockFunction],
        "on": [MockFunction] {
          "calls": Array [
            Array [
              "editor-change",
              [Function],
            ],
            Array [
              "scroll-optimize",
              [Function],
            ],
          ],
        },
        "once": [MockFunction],
        "pasteHTML": [MockFunction],
        "removeFormat": [MockFunction],
        "scrollIntoView": [MockFunction],
        "setContents": [MockFunction],
        "setSelection": [MockFunction],
        "setText": [MockFunction],
        "update": [MockFunction],
        "updateContents": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="richEditor-menuItems MenuItems"
      >
        <MenuItem
          isActive={false}
          isFirst={true}
          isLast={false}
          label="richEditor.menu.bold"
          onBlur={undefined}
          onClick={[Function]}
          propertyName="bold"
          role={undefined}
        />
        <MenuItem
          isActive={false}
          isFirst={false}
          isLast={false}
          label="richEditor.menu.italic"
          onBlur={undefined}
          onClick={[Function]}
          propertyName="italic"
          role={undefined}
        />
        <MenuItem
          isActive={false}
          isFirst={false}
          isLast={false}
          label="richEditor.menu.strike"
          onBlur={undefined}
          onClick={[Function]}
          propertyName="strike"
          role={undefined}
        />
        <MenuItem
          isActive={false}
          isFirst={false}
          isLast={false}
          label="richEditor.menu.code"
          onBlur={undefined}
          onClick={[Function]}
          propertyName="code"
          role={undefined}
        />
        <MenuItem
          isActive={false}
          isFirst={false}
          isLast={true}
          label="richEditor.menu.link"
          onBlur={undefined}
          onClick={[Function]}
          propertyName="link"
          role={undefined}
        />
      </div>,
      "className": "richEditor-menu",
      "role": "menu",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <MenuItem
            isActive={false}
            isFirst={true}
            isLast={false}
            label="richEditor.menu.bold"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="bold"
            role={undefined}
          />,
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={false}
            label="richEditor.menu.italic"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="italic"
            role={undefined}
          />,
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={false}
            label="richEditor.menu.strike"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="strike"
            role={undefined}
          />,
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={false}
            label="richEditor.menu.code"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="code"
            role={undefined}
          />,
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={true}
            label="richEditor.menu.link"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="link"
            role={undefined}
          />,
        ],
        "className": "richEditor-menuItems MenuItems",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "isActive": false,
            "isFirst": true,
            "isLast": false,
            "label": "richEditor.menu.bold",
            "onBlur": undefined,
            "onClick": [Function],
            "propertyName": "bold",
            "role": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "isActive": false,
            "isFirst": false,
            "isLast": false,
            "label": "richEditor.menu.italic",
            "onBlur": undefined,
            "onClick": [Function],
            "propertyName": "italic",
            "role": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "isActive": false,
            "isFirst": false,
            "isLast": false,
            "label": "richEditor.menu.strike",
            "onBlur": undefined,
            "onClick": [Function],
            "propertyName": "strike",
            "role": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "isActive": false,
            "isFirst": false,
            "isLast": false,
            "label": "richEditor.menu.code",
            "onBlur": undefined,
            "onClick": [Function],
            "propertyName": "code",
            "role": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "4",
          "nodeType": "class",
          "props": Object {
            "isActive": false,
            "isFirst": false,
            "isLast": true,
            "label": "richEditor.menu.link",
            "onBlur": undefined,
            "onClick": [Function],
            "propertyName": "link",
            "role": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="richEditor-menuItems MenuItems"
        >
          <MenuItem
            isActive={false}
            isFirst={true}
            isLast={false}
            label="richEditor.menu.bold"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="bold"
            role={undefined}
          />
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={false}
            label="richEditor.menu.italic"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="italic"
            role={undefined}
          />
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={false}
            label="richEditor.menu.strike"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="strike"
            role={undefined}
          />
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={false}
            label="richEditor.menu.code"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="code"
            role={undefined}
          />
          <MenuItem
            isActive={false}
            isFirst={false}
            isLast={true}
            label="richEditor.menu.link"
            onBlur={undefined}
            onClick={[Function]}
            propertyName="link"
            role={undefined}
          />
        </div>,
        "className": "richEditor-menu",
        "role": "menu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <MenuItem
              isActive={false}
              isFirst={true}
              isLast={false}
              label="richEditor.menu.bold"
              onBlur={undefined}
              onClick={[Function]}
              propertyName="bold"
              role={undefined}
            />,
            <MenuItem
              isActive={false}
              isFirst={false}
              isLast={false}
              label="richEditor.menu.italic"
              onBlur={undefined}
              onClick={[Function]}
              propertyName="italic"
              role={undefined}
            />,
            <MenuItem
              isActive={false}
              isFirst={false}
              isLast={false}
              label="richEditor.menu.strike"
              onBlur={undefined}
              onClick={[Function]}
              propertyName="strike"
              role={undefined}
            />,
            <MenuItem
              isActive={false}
              isFirst={false}
              isLast={false}
              label="richEditor.menu.code"
              onBlur={undefined}
              onClick={[Function]}
              propertyName="code"
              role={undefined}
            />,
            <MenuItem
              isActive={false}
              isFirst={false}
              isLast={true}
              label="richEditor.menu.link"
              onBlur={undefined}
              onClick={[Function]}
              propertyName="link"
              role={undefined}
            />,
          ],
          "className": "richEditor-menuItems MenuItems",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "isActive": false,
              "isFirst": true,
              "isLast": false,
              "label": "richEditor.menu.bold",
              "onBlur": undefined,
              "onClick": [Function],
              "propertyName": "bold",
              "role": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "isActive": false,
              "isFirst": false,
              "isLast": false,
              "label": "richEditor.menu.italic",
              "onBlur": undefined,
              "onClick": [Function],
              "propertyName": "italic",
              "role": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "isActive": false,
              "isFirst": false,
              "isLast": false,
              "label": "richEditor.menu.strike",
              "onBlur": undefined,
              "onClick": [Function],
              "propertyName": "strike",
              "role": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "class",
            "props": Object {
              "isActive": false,
              "isFirst": false,
              "isLast": false,
              "label": "richEditor.menu.code",
              "onBlur": undefined,
              "onClick": [Function],
              "propertyName": "code",
              "role": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "4",
            "nodeType": "class",
            "props": Object {
              "isActive": false,
              "isFirst": false,
              "isLast": true,
              "label": "richEditor.menu.link",
              "onBlur": undefined,
              "onClick": [Function],
              "propertyName": "link",
              "role": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
