{"version":3,"sources":["webpack:///./applications/dashboard/src/scripts/application.tsx","webpack:///./build/entries/public-path.ts","webpack:///./applications/dashboard/src/scripts/utility.ts","webpack:///./applications/dashboard/src/scripts/gdn.ts","webpack:///./plugins/rich-editor/src/scripts/entries/admin.ts"],"names":["getMeta","key","defaultValue","_dashboard_gdn__WEBPACK_IMPORTED_MODULE_2__","meta","parts","split","haystack","parts_1","__values","parts_1_1","next","done","part","value","hasOwnProperty","setMeta","last","pop","Error","parts_2","parts_2_1","translate","str","defaultTranslation","substr","undefined","translations","t","isAllowedUrl","input","validator_lib_isURL__WEBPACK_IMPORTED_MODULE_4___default","protocols","require_tld","require_protocol","require_host","require_valid_protocol","allow_trailing_dot","allow_protocol_relative_urls","formatUrl","path","indexOf","urlFormat","replace","_components","addComponent","name","component","toLowerCase","componentExists","getComponent","_mountComponents","parent","querySelectorAll","forEach","node","getAttribute","Component","react_dom__WEBPACK_IMPORTED_MODULE_1___default","a","render","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","Object","_dashboard_utility__WEBPACK_IMPORTED_MODULE_3__","_routes","addRoutes","routes","Array","isArray","push","apply","__spread","getRoutes","_readyHandlers","onReady","callback","_executeReady","Promise","resolve","handlerPromises","map","handler","exec","all","then","document","readyState","addEventListener","onContent","makeProfileUrl","username","encodeURIComponent","potentialPublicPath","window","gdn","WebRoot","finalPublicPath","__webpack_require__","p","_debug","debug","newValue","resolvePromisesSequentially","promiseFunctions","reject","count","results","concat","reduce","previousPromise","currentPromise","result","catch","err","log","_i","arguments","length","console","logError","error","logWarning","warn","hashString","prevHash","currVal","charCodeAt","splitStringLoosely","toSplit","splitWith","normalizedName","normalize","normalizedSplitTerm","charactersUsed","RegExp","piece","start","substring","isInstanceOfOneOf","needle","haystack_1","haystack_1_1","simplifyFraction","numerator","denominator","findGCD","b","gcd","shorthand","matchAtMention","subtext","shouldStartWithSpace","requireQuotesForWhitespace","lines","lastLine","nonExcludedCharacters","excludeWhiteSpace","excluded","regexStr","match","rawMatch","IMAGE_REGEX","isFileImage","file","test","type","capitalizeFirstLetter","charAt","toUpperCase","slice","indexArrayByKey","array","object","array_1","array_1_1","item","SAFE_PROTOCOL_REGEX","sanitizeUrl","url","permissions","__webpack_exports__","handleRichEditorInputFormatterOptions","inputFormatterSelect","getElementById","updateRichFormValues","inputFormatter","richFormGroups","group","classList","remove","add","_dashboard_application__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"/plugins/rich-editor/js/webpack/admin.min.js","sourcesContent":["/**\n * Application functions for interop between Components in different packages.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport React, { ComponentClass } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RouteProps } from \"react-router-dom\";\nimport gdn from \"@dashboard/gdn\";\nimport { PromiseOrNormalCallback, logError } from \"@dashboard/utility\";\nimport isUrl from \"validator/lib/isURL\";\n\n/**\n * Get a piece of metadata passed from the server.\n *\n * @param key - The key to lookup.\n * @param defaultValue - A fallback value in case the key cannot be found.\n *\n * @returns Returns a meta value or the default value.\n */\nexport function getMeta(key: string, defaultValue?: any) {\n    if (!gdn.meta) {\n        return defaultValue;\n    }\n\n    const parts = key.split(\".\");\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (!haystack.hasOwnProperty(part)) {\n            return defaultValue;\n        }\n        haystack = haystack[part];\n    }\n    return haystack;\n}\n\n/**\n * Set a piece of metadata. This will override what was passed from the server.\n *\n * @param key - The key to store under.\n * @param value - The value to set.\n */\nexport function setMeta(key: string, value: any) {\n    const parts = key.split(\".\");\n    const last = parts.pop();\n\n    if (!last) {\n        throw new Error(`Unable to set meta value ${key}. ${last} is not a valid object key.`);\n    }\n\n    let haystack = gdn.meta;\n\n    for (const part of parts) {\n        if (haystack[part] === null || typeof haystack[part] !== \"object\") {\n            haystack[part] = {};\n        }\n        haystack = haystack[part];\n    }\n    haystack[last] = value;\n}\n\n/**\n * Translate a string into the current locale.\n *\n * @param str - The string to translate.\n * @param defaultTranslation - The default translation to use.\n *\n * @returns Returns the translation or the default.\n */\nexport function translate(str: string, defaultTranslation?: string): string {\n    // Codes that begin with @ are considered literals.\n    if (str.substr(0, 1) === \"@\") {\n        return str.substr(1);\n    }\n\n    if (gdn.translations[str] !== undefined) {\n        return gdn.translations[str];\n    }\n\n    return defaultTranslation !== undefined ? defaultTranslation : str;\n}\n\n/**\n * The t function is an alias for translate.\n */\nexport const t = translate;\n\n/**\n * Determine if a string is an allowed URL.\n *\n * In the future this may be extended to check if we want to whitelist/blacklist various URLs.\n *\n * @param input - The string to check.\n */\nexport function isAllowedUrl(input: string): boolean {\n    // Options https://github.com/chriso/validator.js#validators\n    const options = {\n        protocols: [\"http\", \"https\"],\n        require_tld: true,\n        require_protocol: true,\n        require_host: true,\n        require_valid_protocol: true,\n        allow_trailing_dot: false,\n        allow_protocol_relative_urls: false,\n    };\n    return isUrl(input, options);\n}\n\n/**\n * Format a URL in the format passed from the controller.\n *\n * @param path - The path to format.\n *\n * @returns Returns a URL that can be used in the APP.\n */\nexport function formatUrl(path: string): string {\n    if (path.indexOf(\"//\") >= 0) {\n        return path;\n    } // this is an absolute path.\n\n    const urlFormat = getMeta(\"UrlFormat\", \"/{Path}\");\n\n    if (path.substr(0, 1) === \"/\") {\n        path = path.substr(1);\n    }\n\n    if (urlFormat.indexOf(\"?\") >= 0) {\n        path = path.replace(\"?\", \"&\");\n    }\n\n    return urlFormat.replace(\"{Path}\", path);\n}\n\n/**\n * @type {Object} The currently registered Components.\n * @private\n */\nconst _components = {};\n\n/**\n * Register a component in the Components registry.\n *\n * @param name The name of the component.\n * @param component The component to register.\n */\nexport function addComponent(name: string, component: ComponentClass) {\n    _components[name.toLowerCase()] = component;\n}\n\n/**\n * Test to see if a component has been registered.\n *\n * @param name The name of the component to test.\n * @returns Returns **true** if the component has been registered or **false** otherwise.\n */\nexport function componentExists(name: string): boolean {\n    return _components[name.toLowerCase()] !== undefined;\n}\n\n/**\n * Get a component from the component registry.\n *\n * @param name The name of the component.\n * @returns Returns the component or **undefined** if there is no registered component.\n */\nexport function getComponent(name: string): ComponentClass | undefined {\n    return _components[name.toLowerCase()];\n}\n\n/**\n * Mount all declared Components on the dom.\n *\n * The page signifies that an element contains a component with the `data-react=\"<Component>\"` attribute.\n *\n * @param parent - The parent element to search. This element is not included in the search.\n */\nexport function _mountComponents(parent: Element) {\n    const nodes = parent.querySelectorAll(\"[data-react]\").forEach(node => {\n        const name = node.getAttribute(\"data-react\") || \"\";\n        const Component = getComponent(name);\n\n        if (Component) {\n            ReactDOM.render(<Component />, node);\n        } else {\n            logError(\"Could not find component %s.\", name);\n        }\n    });\n}\n\n/**\n * @type {Array} The currently registered routes.\n * @private\n */\nconst _routes: any[] = [];\n\n/**\n * Register one or more routes to the app component.\n *\n * @param routes An array of routes to add.\n */\nexport function addRoutes(routes: Array<React.ReactElement<RouteProps>>) {\n    if (!Array.isArray(routes)) {\n        _routes.push(routes);\n    } else {\n        _routes.push(...routes);\n    }\n}\n\n/**\n * Get all of the currently registered routes.\n *\n * @returns Returns an array of routes.\n */\nexport function getRoutes(): Array<React.ReactElement<RouteProps>> {\n    return _routes;\n}\n\n/**\n * @type {Array}\n * @private\n */\nconst _readyHandlers: PromiseOrNormalCallback[] = [];\n\n/**\n * Register a callback that executes when the document and the core libraries are ready to use.\n *\n * @param callback - The function to call. This can return a Promise but doesn't have to.\n */\nexport function onReady(callback: PromiseOrNormalCallback) {\n    _readyHandlers.push(callback);\n}\n\n/**\n * Execute all of the registered events in order.\n *\n * @returns A Promise when the events have all fired.\n */\nexport function _executeReady(): Promise<any[]> {\n    return new Promise(resolve => {\n        const handlerPromises = _readyHandlers.map(handler => handler());\n        const exec = () => {\n            return Promise.all(handlerPromises).then(resolve);\n        };\n\n        if (document.readyState !== \"loading\") {\n            return exec();\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", exec);\n        }\n    });\n}\n\n/**\n * Execute a callback when a piece of DOM content is ready to be operated on.\n *\n * This is similar to onReady() but also includes content that is added dynamically (ex. AJAX).\n * Note that this function is meant to bridge the non-react parts of the application with react.\n *\n * @param {function} callback - The callback to execute.\n */\nexport function onContent(callback) {\n    document.addEventListener(\"X-DOMContentReady\", callback);\n}\n\n/**\n * Make a URL to a user's profile.\n */\nexport function makeProfileUrl(username: string) {\n    const userPath = `/profile/${encodeURIComponent(username)}`;\n    return formatUrl(userPath);\n}\n","/**\n * Set wepback's public path.\n * Otherwise the lookups of dynamically imported webpack files can fail on sites that have a different webroot\n * Eg. installed in a subfolder / using Reverse Proxy.\n *\n * @author Adam Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license http://www.opensource.org/licenses/gpl-2.0.php GNU GPL v2\n */\n\nconst potentialPublicPath = window.gdn && window.gdn.meta && window.gdn.meta.WebRoot;\nconst finalPublicPath = potentialPublicPath != null ? potentialPublicPath : \"/\";\n\n/**\n * This needs to be a free variable.\n *\n * Webpack does some magic to make this work.\n * It you try and set a local or global version of it, it WILL NOT work.\n *\n * @see https://stackoverflow.com/questions/12934929/what-are-free-variables\n * @see https://webpack.js.org/configuration/output/#output-publicpath\n * @see https://github.com/webpack/webpack/issues/2776#issuecomment-233208623\n */\n// @ts-ignore: Cannot find variable warning. See comment aboe.\n__webpack_public_path__ = finalPublicPath;\n","/**\n * General utility functions.\n * This file should have NO external dependencies other than javascript.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\n/**\n * @type {boolean} The current debug setting.\n * @private\n */\nlet _debug = false;\n\n/**\n * Get or set the debug flag.\n *\n * @param newValue - The new value of debug.\n * @returns the current debug setting.\n */\nexport function debug(newValue?: boolean): boolean {\n    if (newValue !== undefined) {\n        _debug = newValue;\n    }\n\n    return _debug;\n}\n\ntype NormalCallback = (...args: any[]) => any;\ntype PromiseCallback = (...args: any[]) => Promise<any>;\n\nexport type PromiseOrNormalCallback = NormalCallback | PromiseCallback;\n\n/**\n * Resolve an array of functions that return promises sequentially.\n *\n * @param promiseFunctions - The functions to execute.\n *\n * @returns An array of all results in sequential order.\n *\n * @example\n * const urls = ['/url1', '/url2', '/url3']\n * const functions = urls.map(url => () => fetch(url))\n * resolvePromisesSequentially(funcs)\n *   .then(console.log)\n *   .catch(console.error)\n */\nexport function resolvePromisesSequentially(promiseFunctions: PromiseOrNormalCallback[]): Promise<any[]> {\n    if (!Array.isArray(promiseFunctions)) {\n        throw new Error(\"First argument needs to be an array of Promises\");\n    }\n\n    return new Promise((resolve, reject) => {\n        let count = 0;\n        let results = [];\n\n        function iterationFunction(previousPromise, currentPromise) {\n            return previousPromise\n                .then(result => {\n                    if (count++ !== 0) {\n                        results = results.concat(result);\n                    }\n\n                    return currentPromise(result, results, count);\n                })\n                .catch(err => reject(err));\n        }\n\n        promiseFunctions = promiseFunctions.concat(() => Promise.resolve());\n\n        promiseFunctions.reduce(iterationFunction, Promise.resolve(false)).then(() => {\n            resolve(results);\n        });\n    });\n}\n\n/**\n * Log something to console.\n *\n * This only prints in debug mode.\n *\n * @param value - The value to log.\n */\nexport function log(...value: any[]) {\n    if (_debug) {\n        // tslint:disable-next-line:no-console\n        console.log(...value);\n    }\n}\n\n/**\n * Log an error to console.\n *\n * @param value - The value to log.\n */\nexport function logError(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.error(...value);\n}\n\n/**\n * Log a warning to console.\n *\n * @param value - The value to log.\n */\nexport function logWarning(...value: any[]) {\n    // tslint:disable-next-line:no-console\n    console.warn(...value);\n}\n\n/**\n * A simple, fast method of hashing a string. Similar to Java's hash function.\n * https://stackoverflow.com/a/7616484/1486603\n *\n * @param str - The string to hash.\n *\n * @returns The hash code returned.\n */\nexport function hashString(str: string): number {\n    function hashReduce(prevHash, currVal) {\n        // tslint:disable-next-line:no-bitwise\n        return (prevHash << 5) - prevHash + currVal.charCodeAt(0);\n    }\n    return str.split(\"\").reduce(hashReduce, 0);\n}\n\n/**\n * Split a string in multiple pieces similar to String.prototype.split but ignore most acccent characters.\n *\n * This will still return pieces with accents.\n *\n * @param toSplit The string to split.\n * @param splitWith The string to split with.\n */\nexport function splitStringLoosely(toSplit: string, splitWith: string): string[] {\n    const normalizedName = toSplit.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedSplitTerm = splitWith.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    const normalizedPieces = normalizedName.split(new RegExp(`(${normalizedSplitTerm})`, \"i\"));\n\n    let charactersUsed = 0;\n    return normalizedPieces.map(piece => {\n        const start = charactersUsed;\n        charactersUsed += piece.length;\n        return toSplit.substring(start, charactersUsed);\n    });\n}\n\ninterface IClass {\n    new (): any;\n}\n\nexport function isInstanceOfOneOf(needle: any, haystack: IClass[]) {\n    for (const classItem of haystack) {\n        if (needle instanceof classItem) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function simplifyFraction(numerator: number, denominator: number) {\n    const findGCD = (a, b) => {\n        return b ? findGCD(b, a % b) : a;\n    };\n    const gcd = findGCD(numerator, denominator);\n\n    numerator = numerator / gcd;\n    denominator = denominator / gcd;\n\n    return {\n        numerator,\n        denominator,\n        shorthand: denominator + \":\" + numerator,\n    };\n}\n\ninterface IMentionMatch {\n    match: string;\n    rawMatch: string;\n}\n\n/**\n * Custom matching to allow quotation marks in the matching string as well as spaces.\n * Spaces make things more complicated.\n *\n * @param subtext - The string to be tested.\n * @param shouldStartWithSpace - Should the pattern include a test for a whitespace prefix?\n * @returns Matching string if successful.  Null on failure to match.\n */\nexport function matchAtMention(\n    subtext: string,\n    shouldStartWithSpace: boolean = false,\n    requireQuotesForWhitespace: boolean = true,\n): IMentionMatch | null {\n    // Split the string at the lines to allow for a simpler regex.\n    const lines = subtext.split(\"\\n\");\n    const lastLine = lines[lines.length - 1];\n\n    // If you change this you MUST change the regex in src/scripts/__tests__/legacy.test.js !!!\n    /**\n     * Put together the non-excluded characters.\n     *\n     * @param {boolean} excludeWhiteSpace - Whether or not to exclude whitespace characters.\n     *\n     * @returns {string} A Regex string.\n     */\n    function nonExcludedCharacters(excludeWhiteSpace) {\n        let excluded =\n            \"[^\" +\n            '\"' + // Quote character\n            \"\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\" + // Control characters\n            \"\\\\u2028\"; // Line terminator\n\n        if (excludeWhiteSpace) {\n            excluded += \"\\\\s\";\n        }\n\n        excluded += \"]\";\n        return excluded;\n    }\n\n    let regexStr =\n        \"@\" + // @ Symbol triggers the match\n        \"(\" +\n        // One or more non-greedy characters that aren't excluded. Whitespace is allowed, but a starting quote is required.\n        '\"(' +\n        nonExcludedCharacters(false) +\n        '+?)\"?' +\n        \"|\" + // Or\n        // One or more non-greedy characters that aren't exluded. Whitespace may be excluded.\n        \"(\" +\n        nonExcludedCharacters(requireQuotesForWhitespace) +\n        '+?)\"?' +\n        \")\" +\n        \"(?:\\\\n|$)\"; // Newline terminates.\n\n    // Determined by at.who library\n    if (shouldStartWithSpace) {\n        regexStr = \"(?:^|\\\\s)\" + regexStr;\n    }\n    const regex = new RegExp(regexStr, \"gi\");\n    const match = regex.exec(lastLine);\n    if (match) {\n        return {\n            rawMatch: match[0],\n            match: match[2] || match[1], // Return either of the matching groups (quoted or unquoted).\n        };\n    }\n\n    // No match\n    return null;\n}\n\n/** This should mirror extensions allowed in Vanilla\\ImageResizer.php */\nconst IMAGE_REGEX = /^image\\/(gif|jpe?g|png)/i;\n\n/**\n * A filter for use with [].filter\n *\n * Matches only image image type files.\n * @private\n *\n * @param file - A File object.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/File\n *\n * @returns Whether or not the file is an acceptable image\n */\nexport function isFileImage(file: File): boolean {\n    if (IMAGE_REGEX.test(file.type)) {\n        return true;\n    }\n\n    log(\"Filtered out non-image file: \", file.name);\n    return false;\n}\n\nexport function capitalizeFirstLetter(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Transform an array of objects and an map of objets with a given key.\n *\n * Objects that do not contain the given key are dropped.\n *\n * @param array The array to go through.\n * @param key The key to lookup.\n */\nexport function indexArrayByKey<T extends object>(\n    array: T[],\n    key: string,\n): {\n    [key: string]: T;\n} {\n    const object = {};\n    for (const item of array) {\n        if (key in item) {\n            if (!(item[key] in object)) {\n                object[item[key]] = [];\n            }\n            object[item[key]].push(item);\n        }\n    }\n    return object;\n}\n\nconst SAFE_PROTOCOL_REGEX = /^(http:\\/\\/|https:\\/\\/|tel:|mailto:\\/\\/)/;\n\n/**\n * Sanitize a URL to ensure that it matches a whitelist of approved url schemes. If the url does not match one of these schemes, prepend `unsafe:` before it.\n *\n * Allowed protocols\n * - \"http://\",\n * - \"https://\",\n * - \"tel:\",\n * - \"mailto://\",\n *\n * @param url The url to sanitize.\n */\nexport function sanitizeUrl(url: string) {\n    if (url.match(SAFE_PROTOCOL_REGEX)) {\n        return url;\n    } else {\n        return \"unsafe:\" + url;\n    }\n}\n","/**\n * A module to isolate meta data passed from the server into a single dependency.\n * This should always be used instead of accessing window.gdn directly.\n *\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\ninterface IGdn {\n    meta: AnyObject;\n    permissions: AnyObject;\n    translations: AnyObject;\n    [key: string]: any;\n}\n\n/** The gdn object may be set in an inline script in the head of the document. */\nconst gdn = window.gdn || {};\n\nif (!(\"meta\" in gdn)) {\n    gdn.meta = {};\n}\n\nif (!(\"permissions\" in gdn)) {\n    gdn.permissions = {};\n}\n\nif (!(\"translations\" in gdn)) {\n    gdn.translations = {};\n}\n\nexport default gdn as IGdn;\n","/*\n * @author Adam (charrondev) Charron <adam.c@vanillaforums.com>\n * @copyright 2009-2018 Vanilla Forums Inc.\n * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0\n */\n\nimport { onReady, onContent } from \"@dashboard/application\";\n\nonReady(handleRichEditorInputFormatterOptions);\nonContent(handleRichEditorInputFormatterOptions);\n\nfunction handleRichEditorInputFormatterOptions() {\n    const inputFormatterSelect = document.getElementById(\"Form_Garden-dot-InputFormatter\") as HTMLSelectElement;\n    if (inputFormatterSelect) {\n        updateRichFormValues(inputFormatterSelect.value);\n        inputFormatterSelect.addEventListener(\"change\", () => {\n            updateRichFormValues(inputFormatterSelect.value);\n        });\n    }\n}\n\nfunction updateRichFormValues(inputFormatter: string) {\n    const richFormGroups = document.querySelectorAll(\".js-richFormGroup\");\n    if (inputFormatter === \"Rich\") {\n        richFormGroups.forEach(group => {\n            group.classList.remove(\"Hidden\");\n        });\n    } else {\n        richFormGroups.forEach(group => {\n            group.classList.add(\"Hidden\");\n        });\n    }\n}\n"],"sourceRoot":""}